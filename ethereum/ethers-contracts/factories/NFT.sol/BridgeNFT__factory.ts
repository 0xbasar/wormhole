/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { BridgeNFT, BridgeNFTInterface } from "../../NFT.sol/BridgeNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beacon",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161074538038061074583398101604081905261002f91610442565b818161005c60017fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51610502565b6000805160206106fe8339815191521461007857610078610523565b6100848282600061008d565b505050506105a3565b6100968361014e565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a26000825111806100d75750805b1561014957610147836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561011d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101419190610539565b836102ae565b505b505050565b803b6101af5760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b61021a816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102149190610539565b3b151590565b61027f5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b60648201526084016101a6565b6000805160206106fe83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60606102d3838360405180606001604052806027815260200161071e602791396102dc565b90505b92915050565b6060833b61033b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101a6565b600080856001600160a01b0316856040516103569190610554565b600060405180830381855af49150503d8060008114610391576040519150601f19603f3d011682016040523d82523d6000602084013e610396565b606091505b5090925090506103a78282866103b3565b925050505b9392505050565b606083156103c25750816103ac565b8251156103d25782518084602001fd5b8160405162461bcd60e51b81526004016101a69190610570565b80516001600160a01b038116811461040357600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610439578181015183820152602001610421565b50506000910152565b6000806040838503121561045557600080fd5b61045e836103ec565b60208401519092506001600160401b038082111561047b57600080fd5b818501915085601f83011261048f57600080fd5b8151818111156104a1576104a1610408565b604051601f8201601f19908116603f011681019083821181831017156104c9576104c9610408565b816040528281528860208487010111156104e257600080fd5b6104f383602083016020880161041e565b80955050505050509250929050565b818103818111156102d657634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60006020828403121561054b57600080fd5b6102d3826103ec565b6000825161056681846020870161041e565b9190910192915050565b602081526000825180602084015261058f81604085016020870161041e565b601f01601f19169190910160400192915050565b61014c806105b26000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610029565b6100c2565b565b600061005c7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100bd91906100e6565b905090565b3660008037600080366000845af43d6000803e8080156100e1573d6000f35b3d6000fd5b6000602082840312156100f857600080fd5b81516001600160a01b038116811461010f57600080fd5b939250505056fea26469706673582212201eb9b2aded96f70ed4d0a5fb3cbab0c97edfa90c8635e7d32f7472db5f5e588464736f6c63430008130033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type BridgeNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeNFT__factory extends ContractFactory {
  constructor(...args: BridgeNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    beacon: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeNFT> {
    return super.deploy(beacon, data, overrides || {}) as Promise<BridgeNFT>;
  }
  override getDeployTransaction(
    beacon: PromiseOrValue<string>,
    data: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(beacon, data, overrides || {});
  }
  override attach(address: string): BridgeNFT {
    return super.attach(address) as BridgeNFT;
  }
  override connect(signer: Signer): BridgeNFT__factory {
    return super.connect(signer) as BridgeNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeNFTInterface {
    return new utils.Interface(_abi) as BridgeNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeNFT {
    return new Contract(address, _abi, signerOrProvider) as BridgeNFT;
  }
}
