/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Create2Factory,
  Create2FactoryInterface,
} from "../../Create2Factory.sol/Create2Factory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "Created",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "userSalt",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
    ],
    name: "computeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "userSalt",
        type: "bytes",
      },
    ],
    name: "computeProxyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "userSalt",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
    ],
    name: "create2",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "userSalt",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "impl",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "call",
        type: "bytes",
      },
    ],
    name: "create2Proxy",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "init",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50600060405161001f906100bf565b604051809103906000f08015801561003b573d6000803e3d6000fd5b506001600160a01b03811660805260405190915061005b602082016100cc565b601f1982820381018352601f9091011660408181526001600160a01b03841660208301520160408051601f198184030181529082905261009e9291602001610109565b60408051601f19818403018152919052805160209091012060a05250610126565b61047a80610dfe83390190565b6104b68061127883390190565b6000815160005b818110156100fa57602081850181015186830152016100e0565b50600093019283525090919050565b600061011e61011883866100d9565b846100d9565b949350505050565b60805160a051610cad61015160003960006102b801526000818160d701526101d10152610cad6000f3fe6080604052600436106200004f5760003560e01c8062d762e014620000545780630a2df82614620000955780637054b48914620000ac578063e1c7392a14620000c3578063e4b73db214620000f9575b600080fd5b3480156200006157600080fd5b5062000079620000733660046200055b565b6200011e565b6040516001600160a01b03909116815260200160405180910390f35b62000079620000a6366004620005b8565b6200013f565b62000079620000bd36600462000623565b620001a0565b348015620000d057600080fd5b50620000797f000000000000000000000000000000000000000000000000000000000000000081565b3480156200010657600080fd5b506200007962000118366004620006a0565b620002a4565b600062000137620001308585620002e4565b8362000319565b949350505050565b6000806200015a34620001533387620002e4565b8562000376565b6040516001600160a01b03821681529091507f1449abf21e49fd025f33495e77f7b1461caefdd3d4bb646424a3f445c4576a5b9060200160405180910390a19392505050565b600080620002348560405180602001620001ba9062000485565b601f1982820381018352601f9091011660408181527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660208301520160408051601f19818403018152908290526200021f929160200162000710565b6040516020818303038152906040526200013f565b604051633261ccdb60e21b81529091506001600160a01b0382169063c987336c9062000267908790879060040162000743565b600060405180830381600087803b1580156200028257600080fd5b505af115801562000297573d6000803e3d6000fd5b5092979650505050505050565b6000620002dd620002b68484620002e4565b7f000000000000000000000000000000000000000000000000000000000000000062000319565b9392505050565b60008282604051602001620002fb92919062000787565b60405160208183030381529060405280519060200120905092915050565b604080516001600160f81b03196020808301919091526bffffffffffffffffffffffff193060601b1660218301526035820185905260558083018590528351808403909101815260759092019092528051910120600090620002dd565b60008084471015620003cf5760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b8251600003620004225760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401620003c6565b8383516020850187f590506001600160a01b038116620001375760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401620003c6565b6104b680620007c283390190565b80356001600160a01b0381168114620004ab57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620004d857600080fd5b813567ffffffffffffffff80821115620004f657620004f6620004b0565b604051601f8301601f19908116603f01168101908282118183101715620005215762000521620004b0565b816040528381528660208588010111156200053b57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156200057157600080fd5b6200057c8462000493565b9250602084013567ffffffffffffffff8111156200059957600080fd5b620005a786828701620004c6565b925050604084013590509250925092565b60008060408385031215620005cc57600080fd5b823567ffffffffffffffff80821115620005e557600080fd5b620005f386838701620004c6565b935060208501359150808211156200060a57600080fd5b506200061985828601620004c6565b9150509250929050565b6000806000606084860312156200063957600080fd5b833567ffffffffffffffff808211156200065257600080fd5b6200066087838801620004c6565b9450620006706020870162000493565b935060408601359150808211156200068757600080fd5b506200069686828701620004c6565b9150509250925092565b60008060408385031215620006b457600080fd5b620006bf8362000493565b9150602083013567ffffffffffffffff811115620006dc57600080fd5b6200061985828601620004c6565b60005b8381101562000707578181015183820152602001620006ed565b50506000910152565b6000835162000724818460208801620006ea565b8351908301906200073a818360208801620006ea565b01949350505050565b60018060a01b0383168152604060208201526000825180604084015262000772816060850160208701620006ea565b601f01601f1916919091016060019392505050565b6bffffffffffffffffffffffff198360601b16815260008251620007b3816014850160208701620006ea565b91909101601401939250505056fe608060405234801561001057600080fd5b506040516104b63803806104b683398101604081905261002f916102dd565b604080516000815260208101909152819061006b60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610306565b60008051602061046f8339815191521461008757610087610327565b6100938282600061009b565b5050506103b0565b6100a4836100c7565b6000825111806100b15750805b156100c2576100c08383610107565b505b505050565b6100d081610135565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061012c838360405180606001604052806027815260200161048f602791396101cd565b90505b92915050565b803b61019e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b60008051602061046f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060833b61022c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610195565b600080856001600160a01b0316856040516102479190610361565b600060405180830381855af49150503d8060008114610282576040519150601f19603f3d011682016040523d82523d6000602084013e610287565b606091505b5090925090506102988282866102a4565b925050505b9392505050565b606083156102b357508161029d565b8251156102c35782518084602001fd5b8160405162461bcd60e51b8152600401610195919061037d565b6000602082840312156102ef57600080fd5b81516001600160a01b038116811461029d57600080fd5b8181038181111561012f57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60005b83811015610358578181015183820152602001610340565b50506000910152565b6000825161037381846020870161033d565b9190910192915050565b602081526000825180602084015261039c81604085016020870161033d565b601f01601f19169190910160400192915050565b60b1806103be6000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea264697066735822122092bb88b7ddf13ebd0b7fb61d3240e6fb1d290fd462b23e1bac9a17339b3b6ebd64736f6c63430008130033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200dd8d287bdd10eaf454a72666040807b22a78e6ecd274c979d69705502c5237964736f6c63430008130033608060405234801561001057600080fd5b5061045a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c987336c14610030575b600080fd5b61004361003e3660046102ba565b610045565b005b61005182826000610055565b5050565b61005e83610081565b60008251118061006b5750805b1561007c5761007a83836100c1565b505b505050565b61008a816100ed565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100e683836040518060600160405280602781526020016103fe60279139610197565b9392505050565b803b6101565760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060833b6101f65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161014d565b600080856001600160a01b03168560405161021191906103ae565b600060405180830381855af49150503d806000811461024c576040519150601f19603f3d011682016040523d82523d6000602084013e610251565b606091505b509150915061026182828661026b565b9695505050505050565b6060831561027a5750816100e6565b82511561028a5782518084602001fd5b8160405162461bcd60e51b815260040161014d91906103ca565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156102cd57600080fd5b82356001600160a01b03811681146102e457600080fd5b9150602083013567ffffffffffffffff8082111561030157600080fd5b818501915085601f83011261031557600080fd5b813581811115610327576103276102a4565b604051601f8201601f19908116603f0116810190838211818310171561034f5761034f6102a4565b8160405282815288602084870101111561036857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b838110156103a557818101518382015260200161038d565b50506000910152565b600082516103c081846020870161038a565b9190910192915050565b60208152600082518060208401526103e981604085016020870161038a565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d45d30307f0a9ca049c6a820187e9210d414b890270164722df7ef6210ab6b7d64736f6c63430008130033608060405234801561001057600080fd5b506040516104b63803806104b683398101604081905261002f916102dd565b604080516000815260208101909152819061006b60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610306565b60008051602061046f8339815191521461008757610087610327565b6100938282600061009b565b5050506103b0565b6100a4836100c7565b6000825111806100b15750805b156100c2576100c08383610107565b505b505050565b6100d081610135565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061012c838360405180606001604052806027815260200161048f602791396101cd565b90505b92915050565b803b61019e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b60008051602061046f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060833b61022c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610195565b600080856001600160a01b0316856040516102479190610361565b600060405180830381855af49150503d8060008114610282576040519150601f19603f3d011682016040523d82523d6000602084013e610287565b606091505b5090925090506102988282866102a4565b925050505b9392505050565b606083156102b357508161029d565b8251156102c35782518084602001fd5b8160405162461bcd60e51b8152600401610195919061037d565b6000602082840312156102ef57600080fd5b81516001600160a01b038116811461029d57600080fd5b8181038181111561012f57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052600160045260246000fd5b60005b83811015610358578181015183820152602001610340565b50506000910152565b6000825161037381846020870161033d565b9190910192915050565b602081526000825180602084015261039c81604085016020870161033d565b601f01601f19169190910160400192915050565b60b1806103be6000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea264697066735822122092bb88b7ddf13ebd0b7fb61d3240e6fb1d290fd462b23e1bac9a17339b3b6ebd64736f6c63430008130033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type Create2FactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Create2FactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Create2Factory__factory extends ContractFactory {
  constructor(...args: Create2FactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Create2Factory> {
    return super.deploy(overrides || {}) as Promise<Create2Factory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Create2Factory {
    return super.attach(address) as Create2Factory;
  }
  override connect(signer: Signer): Create2Factory__factory {
    return super.connect(signer) as Create2Factory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Create2FactoryInterface {
    return new utils.Interface(_abi) as Create2FactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Create2Factory {
    return new Contract(address, _abi, signerOrProvider) as Create2Factory;
  }
}
