/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IDeliveryProvider,
  IDeliveryProviderInterface,
} from "../../IDeliveryProviderTyped.sol/IDeliveryProvider";

const _abi = [
  {
    inputs: [],
    name: "getRewardAddress",
    outputs: [
      {
        internalType: "address payable",
        name: "rewardAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
    ],
    name: "getTargetChainAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "deliveryProviderAddress",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
    ],
    name: "isChainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "LocalNative",
        name: "currentChainAmount",
        type: "uint256",
      },
    ],
    name: "quoteAssetConversion",
    outputs: [
      {
        internalType: "TargetNative",
        name: "targetChainAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "TargetNative",
        name: "receiverValue",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "encodedExecutionParams",
        type: "bytes",
      },
    ],
    name: "quoteDeliveryPrice",
    outputs: [
      {
        internalType: "LocalNative",
        name: "nativePriceQuote",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "encodedExecutionInfo",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IDeliveryProvider__factory {
  static readonly abi = _abi;
  static createInterface(): IDeliveryProviderInterface {
    return new utils.Interface(_abi) as IDeliveryProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IDeliveryProvider {
    return new Contract(address, _abi, signerOrProvider) as IDeliveryProvider;
  }
}
