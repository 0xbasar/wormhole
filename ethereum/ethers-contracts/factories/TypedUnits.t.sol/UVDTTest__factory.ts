/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  UVDTTest,
  UVDTTestInterface,
} from "../../TypedUnits.t.sol/UVDTTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "source",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "fromPrice",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "toPrice",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "multNum",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "multDenom",
        type: "uint32",
      },
      {
        internalType: "bool",
        name: "roundUp",
        type: "bool",
      },
    ],
    name: "convertAsset",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "sourceWei",
        type: "uint64",
      },
    ],
    name: "sourceWeiToTargetGas",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
    ],
    name: "testDollarToGas",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
    ],
    name: "testDollarToWei",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "x",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "y",
        type: "uint64",
      },
    ],
    name: "testGasMin",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "x",
        type: "uint64",
      },
    ],
    name: "testGasToWei",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "x",
        type: "uint64",
      },
    ],
    name: "testWeiBasic",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "x",
        type: "uint64",
      },
    ],
    name: "testWeiToGas",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50610c13806100316000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063a89595471161008c578063bacf32cb11610066578063bacf32cb14610198578063bd3c1259146101ab578063f8ccbf47146101be578063fa7626d4146101d157600080fd5b8063a89595471461015a578063b9d161b21461016d578063ba414fa61461018057600080fd5b806301c4df77146100d45780630a9254e4146100e75780630b787083146100e95780632f38face146100fc5780633a7684631461010f578063a197f04914610147575b600080fd5b6100e76100e236600461097f565b6101de565b005b6100e76100f736600461099a565b61025d565b6100e761010a3660046109cd565b6102f8565b61012a737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e761015536600461097f565b610382565b6100e761016836600461097f565b610535565b6100e761017b366004610a22565b6105a9565b610188610706565b604051901515815260200161013e565b6100e76101a63660046109cd565b610831565b6100e76101b936600461097f565b610860565b6000546101889062010000900460ff1681565b6000546101889060ff1681565b6001600160401b038116606460006101f68383610878565b905061020c6001600160401b0385166064610ab0565b81146102575760405162461bcd60e51b81526020600482015260156024820152740ecc2d8eaca40e6d0deead8c840c4ca4062606054f605b1b60448201526064015b60405180910390fd5b50505050565b6001600160401b038083169082166000610277838361088d565b9050836001600160401b0316856001600160401b031610610298578361029a565b845b6001600160401b031681146102f15760405162461bcd60e51b815260206004820152601a60248201527f6d696e56616c2073686f756c64206265206d696e28782c207929000000000000604482015260640161024e565b5050505050565b6001600160801b0381166401000000008060006103168483806108a3565b9050610334680100000000000000006001600160801b038716610add565b81146102f15760405162461bcd60e51b815260206004820152601960248201527f76616c75652073686f756c6420626520782f28313c3c33322900000000000000604482015260640161024e565b6001600160401b038116600a6064600560006103ad826103a7878787600180886108bc565b90610916565b90506103ba603287610af1565b6001600160401b031681146104095760405162461bcd60e51b81526020600482015260156024820152743a30b933b2ba23b0b99039b437bab632103132901960591b604482015260640161024e565b5060649250600b915060059050600061042b826103a7878787600180806108bc565b9050856001600160401b031681146104955760405162461bcd60e51b815260206004820152602760248201527f726f756e6420646f776e20736f75726365576569202a20312e38203d3e20736f6044820152667572636557656960c81b606482015260840161024e565b5060649250600b91506005905060006104b7826103a7878787600180886108bc565b90506104c4866002610b17565b6001600160401b0316811461052d5760405162461bcd60e51b815260206004820152602960248201527f726f756e6420757020736f75726365576569202a20312e38203d3e20736f757260448201526831b2abb2b49015101960b91b606482015260840161024e565b505050505050565b6001600160401b0381166064600061054d8383610916565b905061056360646001600160401b038616610add565b81146102575760405162461bcd60e51b8152602060048201526015602482015274076616c75652073686f756c6420626520782f31303605c1b604482015260640161024e565b6001600160401b038087169086811690861660006105cb8484848a8a8a6108bc565b90506000851561065d576105ee63ffffffff88166001600160401b038b16610ab0565b600161060963ffffffff8a166001600160401b038d16610ab0565b8a63ffffffff168d6001600160401b03168f6001600160401b031661062e9190610ab0565b6106389190610ab0565b6106429190610b42565b61064c9190610b55565b6106569190610add565b90506106aa565b61067663ffffffff88166001600160401b038b16610ab0565b63ffffffff89166106936001600160401b03808e16908f16610ab0565b61069d9190610ab0565b6106a79190610add565b90505b8082146106f95760405162461bcd60e51b815260206004820152601860248201527f76616c75652073686f756c642062652065787065637465640000000000000000604482015260640161024e565b5050505050505050505050565b60008054610100900460ff16156107265750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561082c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b828401528251808303840181526060830190935260009290916107b4917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001610b98565b60408051601f19818403018152908290526107ce91610bb4565b6000604051808303816000865af19150503d806000811461080b576040519150601f19603f3d011682016040523d82523d6000602084013e610810565b606091505b50915050808060200190518101906108289190610bc0565b9150505b919050565b6001600160801b0381166064600061084a838383610922565b905061056360646001600160801b038616610add565b6001600160401b038116606460006101f68383610950565b60006108848284610ab0565b90505b92915050565b600082821161089c5781610884565b5090919050565b60006108b4836103a7868585610922565b949350505050565b6000806108e28563ffffffff166108dc898b61087890919063ffffffff16565b9061095f565b905060006108f98763ffffffff8088169061095f16565b90506000610908838387610922565b9a9950505050505050505050565b60006108848284610add565b6000828261093157600061093c565b61093c600185610b55565b6109469086610b42565b6108b49190610add565b600081835b6108849190610ab0565b60008183610955565b80356001600160401b038116811461082c57600080fd5b60006020828403121561099157600080fd5b61088482610968565b600080604083850312156109ad57600080fd5b6109b683610968565b91506109c460208401610968565b90509250929050565b6000602082840312156109df57600080fd5b81356001600160801b03811681146109f657600080fd5b9392505050565b803563ffffffff8116811461082c57600080fd5b8015158114610a1f57600080fd5b50565b60008060008060008060c08789031215610a3b57600080fd5b610a4487610968565b9550610a5260208801610968565b9450610a6060408801610968565b9350610a6e606088016109fd565b9250610a7c608088016109fd565b915060a0870135610a8c81610a11565b809150509295509295509295565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761088757610887610a9a565b634e487b7160e01b600052601260045260246000fd5b600082610aec57610aec610ac7565b500490565b60006001600160401b0380841680610b0b57610b0b610ac7565b92169190910492915050565b6001600160401b03818116838216028082169190828114610b3a57610b3a610a9a565b505092915050565b8082018082111561088757610887610a9a565b8181038181111561088757610887610a9a565b6000815160005b81811015610b895760208185018101518683015201610b6f565b50600093019283525090919050565b6001600160e01b03198316815260006108b46004830184610b68565b60006108848284610b68565b600060208284031215610bd257600080fd5b81516109f681610a1156fea2646970667358221220adc8d4fb025482bc5b659a24e02d53f1b2b29755ea89a2bd8def51d154e7368b64736f6c63430008130033";

type UVDTTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UVDTTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UVDTTest__factory extends ContractFactory {
  constructor(...args: UVDTTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UVDTTest> {
    return super.deploy(overrides || {}) as Promise<UVDTTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UVDTTest {
    return super.attach(address) as UVDTTest;
  }
  override connect(signer: Signer): UVDTTest__factory {
    return super.connect(signer) as UVDTTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UVDTTestInterface {
    return new utils.Interface(_abi) as UVDTTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UVDTTest {
    return new Contract(address, _abi, signerOrProvider) as UVDTTest;
  }
}
