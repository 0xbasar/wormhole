{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "GuardianSetAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "consistencyLevel",
          "type": "uint8"
        }
      ],
      "name": "LogMessagePublished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "chainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "evmChainId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentGuardianSetIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "getGuardianSet",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address[]",
              "name": "keys",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "expirationTime",
              "type": "uint32"
            }
          ],
          "internalType": "struct Structs.GuardianSet",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGuardianSetExpiry",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "governanceActionIsConsumed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceChainId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governanceContract",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFork",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "emitter",
          "type": "address"
        }
      ],
      "name": "nextSequence",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedVM",
          "type": "bytes"
        }
      ],
      "name": "parseAndVerifyVM",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "timestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "emitterChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "emitterAddress",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64"
            },
            {
              "internalType": "uint8",
              "name": "consistencyLevel",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "guardianSetIndex",
              "type": "uint32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "guardianIndex",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Structs.Signature[]",
              "name": "signatures",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Structs.VM",
          "name": "vm",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedUpgrade",
          "type": "bytes"
        }
      ],
      "name": "parseContractUpgrade",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "module",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "chain",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address"
            }
          ],
          "internalType": "struct GovernanceStructs.ContractUpgrade",
          "name": "cu",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedUpgrade",
          "type": "bytes"
        }
      ],
      "name": "parseGuardianSetUpgrade",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "module",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "chain",
              "type": "uint16"
            },
            {
              "components": [
                {
                  "internalType": "address[]",
                  "name": "keys",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32",
                  "name": "expirationTime",
                  "type": "uint32"
                }
              ],
              "internalType": "struct Structs.GuardianSet",
              "name": "newGuardianSet",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "newGuardianSetIndex",
              "type": "uint32"
            }
          ],
          "internalType": "struct GovernanceStructs.GuardianSetUpgrade",
          "name": "gsu",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedRecoverChainId",
          "type": "bytes"
        }
      ],
      "name": "parseRecoverChainId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "module",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "evmChainId",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "newChainId",
              "type": "uint16"
            }
          ],
          "internalType": "struct GovernanceStructs.RecoverChainId",
          "name": "rci",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedSetMessageFee",
          "type": "bytes"
        }
      ],
      "name": "parseSetMessageFee",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "module",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "chain",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "messageFee",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernanceStructs.SetMessageFee",
          "name": "smf",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedTransferFees",
          "type": "bytes"
        }
      ],
      "name": "parseTransferFees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "module",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "action",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "chain",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "recipient",
              "type": "bytes32"
            }
          ],
          "internalType": "struct GovernanceStructs.TransferFees",
          "name": "tf",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedVM",
          "type": "bytes"
        }
      ],
      "name": "parseVM",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "timestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "emitterChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "emitterAddress",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64"
            },
            {
              "internalType": "uint8",
              "name": "consistencyLevel",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "guardianSetIndex",
              "type": "uint32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "guardianIndex",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Structs.Signature[]",
              "name": "signatures",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Structs.VM",
          "name": "vm",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "nonce",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        },
        {
          "internalType": "uint8",
          "name": "consistencyLevel",
          "type": "uint8"
        }
      ],
      "name": "publishMessage",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "sequence",
          "type": "uint64"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "numGuardians",
          "type": "uint256"
        }
      ],
      "name": "quorum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "numSignaturesRequiredForQuorum",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_vm",
          "type": "bytes"
        }
      ],
      "name": "submitContractUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_vm",
          "type": "bytes"
        }
      ],
      "name": "submitNewGuardianSet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_vm",
          "type": "bytes"
        }
      ],
      "name": "submitRecoverChainId",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_vm",
          "type": "bytes"
        }
      ],
      "name": "submitSetMessageFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_vm",
          "type": "bytes"
        }
      ],
      "name": "submitTransferFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "guardianIndex",
              "type": "uint8"
            }
          ],
          "internalType": "struct Structs.Signature[]",
          "name": "signatures",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address[]",
              "name": "keys",
              "type": "address[]"
            },
            {
              "internalType": "uint32",
              "name": "expirationTime",
              "type": "uint32"
            }
          ],
          "internalType": "struct Structs.GuardianSet",
          "name": "guardianSet",
          "type": "tuple"
        }
      ],
      "name": "verifySignatures",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "timestamp",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "emitterChainId",
              "type": "uint16"
            },
            {
              "internalType": "bytes32",
              "name": "emitterAddress",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64"
            },
            {
              "internalType": "uint8",
              "name": "consistencyLevel",
              "type": "uint8"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "guardianSetIndex",
              "type": "uint32"
            },
            {
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "guardianIndex",
                  "type": "uint8"
                }
              ],
              "internalType": "struct Structs.Signature[]",
              "name": "signatures",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Structs.VM",
          "name": "vm",
          "type": "tuple"
        }
      ],
      "name": "verifyVM",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061381f806100206000396000f3fe6080604052600436106101c65760003560e01c806393df337e116100f7578063cb4cfea811610095578063f42bc64111610064578063f42bc64114610712578063f8ce560a14610732578063f951975a14610752578063fbe3c2cd1461077f5761022d565b8063cb4cfea814610647578063d60b347f146106a1578063e039f224146106da578063eb8d3f12146106ef5761022d565b8063a9e11893116100d1578063a9e11893146105c3578063b172b222146105f0578063b19a437e14610605578063c0fd8bde146106185761022d565b806393df337e1461055b5780639a8a05921461057b578063a0cce1b3146105a35761022d565b80634fdc60fa1161016457806364d42b171161013e57806364d42b17146104e35780636606b4e0146104f85780638129fc1c14610518578063875be02a1461052d5761022d565b80634fdc60fa14610406578063515f3247146104695780635cb8cae2146104c35761022d565b80631a90a219116101a05780631a90a219146103245780631cfe7951146103435780632c3c02a41461036f5780634cf842b5146103af5761022d565b80630319e59c1461026357806304ca84cf146102d5578063178149e7146103025761022d565b3661022d5760405162461bcd60e51b815260206004820152602c60248201527f74686520576f726d686f6c6520636f6e747261637420646f6573206e6f74206160448201526b63636570742061737365747360a01b60648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152600b60248201526a1d5b9cdd5c1c1bdc9d195960aa1b6044820152606401610224565b34801561026f57600080fd5b5061028361027e366004612de7565b61079e565b6040516102cc9190600060a0820190508251825260ff602084015116602083015261ffff6040840151166040830152606083015160608301526080830151608083015292915050565b60405180910390f35b3480156102e157600080fd5b506102f56102f0366004612de7565b6108f4565b6040516102cc9190612e82565b34801561030e57600080fd5b5061032261031d366004612de7565b610b0b565b005b34801561033057600080fd5b506007545b6040519081526020016102cc565b34801561034f57600080fd5b5060035463ffffffff165b60405163ffffffff90911681526020016102cc565b34801561037b57600080fd5b5061039f61038a366004612edf565b60009081526005602052604090205460ff1690565b60405190151581526020016102cc565b3480156103bb57600080fd5b506103ee6103ca366004612f0f565b6001600160a01b03166000908152600460205260409020546001600160401b031690565b6040516001600160401b0390911681526020016102cc565b34801561041257600080fd5b50610426610421366004612de7565b610c44565b6040516102cc91908151815260208083015160ff169082015260408083015161ffff16908201526060918201516001600160a01b03169181019190915260800190565b34801561047557600080fd5b50610489610484366004612de7565b610d80565b6040516102cc91908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b3480156104cf57600080fd5b506103226104de366004612de7565b610eaf565b3480156104ef57600080fd5b50600854610335565b34801561050457600080fd5b50610322610513366004612de7565b610ff4565b34801561052457600080fd5b50610322611204565b34801561053957600080fd5b5061054d610548366004613053565b61148b565b6040516102cc9291906131c7565b34801561056757600080fd5b50610322610576366004612de7565b6114a4565b34801561058757600080fd5b5060005461ffff165b60405161ffff90911681526020016102cc565b3480156105af57600080fd5b5061054d6105be3660046131e2565b6115e0565b3480156105cf57600080fd5b506105e36105de366004612de7565b61185b565b6040516102cc919061343e565b3480156105fc57600080fd5b50600154610335565b6103ee610613366004613451565b611bf3565b34801561062457600080fd5b506106386106333660046134ae565b611c93565b6040516102cc9392919061351f565b34801561065357600080fd5b50610667610662366004612de7565b611cf7565b6040516102cc91908151815260208083015160ff16908201526040808301519082015260609182015161ffff169181019190915260800190565b3480156106ad57600080fd5b5061039f6106bc366004612f0f565b6001600160a01b031660009081526006602052604090205460ff1690565b3480156106e657600080fd5b5061039f611e28565b3480156106fb57600080fd5b50600354640100000000900463ffffffff1661035a565b34801561071e57600080fd5b5061032261072d366004612de7565b611e3b565b34801561073e57600080fd5b5061033561074d366004612edf565b611f4d565b34801561075e57600080fd5b5061077261076d366004613556565b611fbd565b6040516102cc9190613571565b34801561078b57600080fd5b5060005462010000900461ffff16610590565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052906107d3838261205c565b82526107e060208261359a565b90506107ec83826120ba565b60ff1660208301526107ff60018261359a565b9050816020015160ff1660041461084f5760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b6044820152606401610224565b6108598382612116565b61ffff16604083015261086d60028261359a565b90506108798382612173565b606083015261088960208261359a565b9050610895838261205c565b60808301526108a560208261359a565b9050808351146108ee5760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b6044820152606401610224565b50919050565b6108fc612b96565b6000610908838261205c565b825261091560208261359a565b905061092183826120ba565b60ff16602083015261093460018261359a565b9050816020015160ff1660021461098d5760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e536574557067726164650000000000006044820152606401610224565b6109978382612116565b61ffff1660408301526109ab60028261359a565b90506109b783826121c8565b63ffffffff1660808301526109cd60048261359a565b905060006109db84836120ba565b90506109e860018361359a565b915060405180604001604052808260ff166001600160401b03811115610a1057610a10612cc5565b604051908082528060200260200182016040528015610a39578160200160208202803683370190505b5081526000602090910181905260608501919091525b8160ff16811015610ab357610a648584612225565b606085015151805183908110610a7c57610a7c6135ad565b6001600160a01b0390921660209283029190910190910152610a9f60148461359a565b925080610aab816135c3565b915050610a4f565b5081845114610b045760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e536574557067726164650000000000006044820152606401610224565b5050919050565b610b13611e28565b610b4c5760405162461bcd60e51b815260206004820152600a6024820152696e6f74206120666f726b60b01b6044820152606401610224565b6000610b578261185b565b9050600080610b658361228a565b91509150818190610b895760405162461bcd60e51b815260040161022491906135dc565b506000610b998460e00151611cf7565b805190915063436f726514610bc05760405162461bcd60e51b8152600401610224906135ef565b46816040015114610c075760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21022ab269021b430b4b760791b6044820152606401610224565b610c15846101400151612400565b610c22816040015161241b565b60608101516000805461ffff191661ffff9092169190911790555b5050505050565b604080516080810182526000808252602082018190529181018290526060810182905290610c72838261205c565b8252610c7f60208261359a565b9050610c8b83826120ba565b60ff166020830152610c9e60018261359a565b9050816020015160ff16600114610cf15760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b6044820152606401610224565b610cfb8382612116565b61ffff166040830152610d0f60028261359a565b9050610d1b838261205c565b6001600160a01b03166060830152610d3460208261359a565b9050808351146108ee5760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b6044820152606401610224565b604080516080810182526000808252602082018190529181018290526060810182905290610dae838261205c565b8252610dbb60208261359a565b9050610dc783826120ba565b60ff166020830152610dda60018261359a565b9050816020015160ff16600314610e2b5760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b6044820152606401610224565b610e358382612116565b61ffff166040830152610e4960028261359a565b9050610e558382612173565b6060830152610e6560208261359a565b9050808351146108ee5760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b6044820152606401610224565b610eb7611e28565b15610ef35760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420666f726b60a01b6044820152606401610224565b6000610efe8261185b565b9050600080610f0c8361228a565b91509150818190610f305760405162461bcd60e51b815260040161022491906135dc565b506000610f408460e00151610c44565b805190915063436f726514610f885760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b6044820152606401610224565b60005461ffff1661ffff16816040015161ffff1614610fd95760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b6044820152606401610224565b610fe7846101400151612400565b610c3d8160600151612464565b6000610fff8261185b565b905060008061100d8361228a565b915091508181906110315760405162461bcd60e51b815260040161022491906135dc565b5060006110418460e001516108f4565b805190915063436f7265146110685760405162461bcd60e51b8152600401610224906135ef565b60005461ffff1661ffff16816040015161ffff1614801561108e575061108c611e28565b155b8061109f5750604081015161ffff16155b6110db5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b6044820152606401610224565b6060810151515161112e5760405162461bcd60e51b815260206004820152601960248201527f6e657720677561726469616e2073657420697320656d707479000000000000006044820152606401610224565b60035463ffffffff16611142906001613617565b63ffffffff16816080015163ffffffff16146111aa5760405162461bcd60e51b815260206004820152602160248201527f696e646578206d75737420696e63726561736520696e207374657073206f66206044820152603160f81b6064820152608401610224565b6111b8846101400151612400565b6111cf6111ca60035463ffffffff1690565b612591565b6111e1816060015182608001516125c9565b60808101516003805463ffffffff191663ffffffff909216919091179055610c3d565b60006112377f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905061125b816001600160a01b031660009081526006602052604090205460ff1690565b1561129e5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610224565b6112c6816001600160a01b03166000908152600660205260409020805460ff19166001179055565b600854600003611488576000806112e060005461ffff1690565b90508061ffff166002036112f7576001915061147c565b8061ffff1660040361130c576038915061147c565b8061ffff16600503611321576089915061147c565b8061ffff166006036113375761a86a915061147c565b8061ffff1660070361134d5761a516915061147c565b8061ffff1660090361136557634e454152915061147c565b8061ffff16600a0361137a5760fa915061147c565b8061ffff16600b03611390576102ae915061147c565b8061ffff16600c036113a657610313915061147c565b8061ffff16600d036113bc57612019915061147c565b8061ffff16600e036113d25761a4ec915061147c565b8061ffff166010036113e857610504915061147c565b8061ffff1660110361140057630e9ac0d6915061147c565b8061ffff166017036114165761a4b1915061147c565b8061ffff1660180361142b57600a915061147c565b8061ffff16601903611440576064915061147c565b60405162461bcd60e51b81526020600482015260116024820152702ab735b737bbb71031b430b4b71034b21760791b6044820152606401610224565b6114858261241b565b50505b50565b6000606061149a8360016126a3565b9094909350915050565b60006114af8261185b565b90506000806114bd8361228a565b915091508181906114e15760405162461bcd60e51b815260040161022491906135dc565b5060006114f18460e0015161079e565b805190915063436f7265146115185760405162461bcd60e51b8152600401610224906135ef565b60005461ffff1661ffff16816040015161ffff1614801561153e575061153c611e28565b155b8061154f5750604081015161ffff16155b61158b5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b6044820152606401610224565b611599846101400151612400565b608081015160608201516040516001600160a01b0383169180156108fc02916000818181858888f193505050501580156115d7573d6000803e3d6000fd5b50505050505050565b8051516000906060908290815b865181101561183957600087828151811061160a5761160a6135ad565b60200260200101519050600060018a8360400151846000015185602001516040516000815260200160405260405161165e949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611680573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116e35760405162461bcd60e51b815260206004820152601f60248201527f65637265636f766572206661696c65642077697468207369676e6174757265006044820152606401610224565b8215806116f957508460ff16826060015160ff16115b6117515760405162461bcd60e51b815260206004820152602360248201527f7369676e617475726520696e6469636573206d75737420626520617363656e64604482015262696e6760e81b6064820152608401610224565b6060820151945060ff851684116117aa5760405162461bcd60e51b815260206004820152601c60248201527f677561726469616e20696e646578206f7574206f6620626f756e6473000000006044820152606401610224565b8760000151826060015160ff16815181106117c7576117c76135ad565b60200260200101516001600160a01b0316816001600160a01b031614611824576000604051806040016040528060148152602001731593481cda59db985d1d5c99481a5b9d985b1a5960621b815250965096505050505050611853565b50508080611831906135c3565b9150506115ed565b506001604051806020016040528060008152509350935050505b935093915050565b611863612bf0565b600061186f83826120ba565b60ff16825261187f60018261359a565b9050816000015160ff166001146118d85760405162461bcd60e51b815260206004820152601760248201527f564d2076657273696f6e20696e636f6d70617469626c650000000000000000006044820152606401610224565b6118e283826121c8565b63ffffffff166101008301526118f960048261359a565b9050600061190784836120ba565b60ff16905061191760018361359a565b9150806001600160401b0381111561193157611931612cc5565b60405190808252806020026020018201604052801561198357816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161194f5790505b5061012084015260005b81811015611aba5761199f85846120ba565b84610120015182815181106119b6576119b66135ad565b602090810291909101015160ff9091166060909101526119d760018461359a565b92506119e3858461205c565b84610120015182815181106119fa576119fa6135ad565b60200260200101516000018181525050602083611a17919061359a565b9250611a23858461205c565b8461012001518281518110611a3a57611a3a6135ad565b60200260200101516020018181525050602083611a57919061359a565b9250611a6385846120ba565b611a6e90601b61363b565b8461012001518281518110611a8557611a856135ad565b602090810291909101015160ff909116604090910152611aa660018461359a565b925080611ab2816135c3565b91505061198d565b506000611ad683848751611ace9190613654565b8791906128d7565b90508080519060200120604051602001611af291815260200190565b60408051601f198184030181529190528051602090910120610140850152611b1a85846121c8565b63ffffffff166020850152611b3060048461359a565b9250611b3c85846121c8565b63ffffffff166040850152611b5260048461359a565b9250611b5e8584612116565b61ffff166060850152611b7260028461359a565b9250611b7e858461205c565b6080850152611b8e60208461359a565b9250611b9a85846129e4565b6001600160401b031660a0850152611bb360088461359a565b9250611bbf85846120ba565b60ff1660c0850152611bd260018461359a565b9250611be583848751611ace9190613654565b60e085015250919392505050565b6000611bfe60075490565b3414611c3a5760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642066656560a81b6044820152606401610224565b611c4333612a41565b9050336001600160a01b03167f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b282868686604051611c849493929190613667565b60405180910390a29392505050565b611c9b612bf0565b60006060611cde85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185b92505050565b9250611ceb8360006126a3565b93969095509293505050565b604080516080810182526000808252602082018190529181018290526060810182905290611d25838261205c565b8252611d3260208261359a565b9050611d3e83826120ba565b60ff166020830152611d5160018261359a565b9050816020015160ff16600514611da35760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b6044820152606401610224565b611dad8382612173565b6040830152611dbd60208261359a565b9050611dc98382612116565b61ffff166060830152611ddd60028261359a565b9050808351146108ee5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b6044820152606401610224565b600046611e3460085490565b1415905090565b6000611e468261185b565b9050600080611e548361228a565b91509150818190611e785760405162461bcd60e51b815260040161022491906135dc565b506000611e888460e00151610d80565b805190915063436f726514611ed05760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b6044820152606401610224565b60005461ffff1661ffff16816040015161ffff16148015611ef65750611ef4611e28565b155b611f325760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b6044820152606401610224565b611f40846101400151612400565b610c3d8160600151600755565b60006101008210611f955760405162461bcd60e51b8152602060048201526012602482015271746f6f206d616e7920677561726469616e7360701b6044820152606401610224565b6003611fa28360026136a9565b611fac91906136c0565b611fb790600161359a565b92915050565b60408051808201825260608082526000602080840182905263ffffffff8616825260028152908490208451815492830281018401865294850182815293949390928492849184018282801561203b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161201d575b50505091835250506001919091015463ffffffff1660209091015292915050565b600061206982602061359a565b835110156120b15760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610224565b50016020015190565b60006120c782600161359a565b8351101561210d5760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606401610224565b50016001015190565b600061212382600261359a565b8351101561216a5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606401610224565b50016002015190565b600061218082602061359a565b835110156120b15760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606401610224565b60006121d582600461359a565b8351101561221c5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606401610224565b50016004015190565b600061223282601461359a565b8351101561227a5760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606401610224565b500160200151600160601b900490565b6000606060008061229a8561148b565b91509150816122af5760009590945092505050565b60035463ffffffff1663ffffffff1685610100015163ffffffff16146122f55760006040518060600160405280602281526020016137a660229139935093505050915091565b60005462010000900461ffff1661ffff16856060015161ffff1614612350576000604051806040016040528060168152602001753bb937b7339033b7bb32b93730b731b29031b430b4b760511b815250935093505050915091565b6001548560800151146123a05760006040518060400160405280601981526020017f77726f6e6720676f7665726e616e636520636f6e747261637400000000000000815250935093505050915091565b61014085015160009081526005602052604090205460ff16156123e35760006040518060600160405280602281526020016137c860229139935093505050915091565b600160405180602001604052806000815250935093505050915091565b6000908152600560205260409020805460ff19166001179055565b46811461245f5760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b6044820152606401610224565b600855565b60006124977f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506124a282612ab1565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b038616916124e5916136e2565b600060405180830381855af49150503d8060008114612520576040519150601f19603f3d011682016040523d82523d6000602084013e612525565b606091505b509150915081819061254a5760405162461bcd60e51b815260040161022491906135dc565b50836001600160a01b0316836001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b61259e4262015180613617565b63ffffffff9182166000908152600260205260409020600101805463ffffffff191691909216179055565b81515160005b8181101561264d578351805160009190839081106125ef576125ef6135ad565b60200260200101516001600160a01b03160361263b5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c6964206b657960a81b6044820152606401610224565b80612645816135c3565b9150506125cf565b5063ffffffff8216600090815260026020908152604090912084518051869361267a928492910190612c4b565b50602091909101516001909101805463ffffffff191663ffffffff909216919091179055505050565b6000606060006126b7856101000151611fbd565b9050831561278d57602080860151604080880151606089015160808a015160a08b015160c08c015160e08d015195516000986126f5989791016136fe565b60405160208183030381529060405290506000818051906020012060405160200161272291815260200190565b604051602081830303815290604052805190602001209050866101400151811461278a5760006040518060400160405280601a81526020017f766d2e6861736820646f65736e2774206d6174636820626f6479000000000000815250945094505050506128d0565b50505b8051516000036127cd5750506040805180820190915260148152731a5b9d985b1a590819dd585c991a585b881cd95d60621b6020820152600091506128d0565b60035463ffffffff1663ffffffff1685610100015163ffffffff16141580156127ff575042816020015163ffffffff16105b1561284357505060408051808201909152601881527f677561726469616e2073657420686173206578706972656400000000000000006020820152600091506128d0565b80515161284f90611f4d565b8561012001515110156128875750506040805180820190915260098152686e6f2071756f72756d60b81b6020820152600091506128d0565b60008061289f876101400151886101200151856115e0565b91509150816128b6576000945092506128d0915050565b600160405180602001604052806000815250945094505050505b9250929050565b6060816128e581601f61359a565b10156129245760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610224565b61292e828461359a565b845110156129725760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610224565b60608215801561299157604051915060008252602082016040526129db565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156129ca5780518352602092830192016129b2565b5050858452601f01601f1916604052505b50949350505050565b60006129f182600861359a565b83511015612a385760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b6044820152606401610224565b50016008015190565b6001600160a01b0381166000908152600460205260409020546001600160401b0316612aac82612a72836001613785565b6001600160a01b03919091166000908152600460205260409020805467ffffffffffffffff19166001600160401b03909216919091179055565b919050565b612aba81612af1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b612b555760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610224565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060a0016040528060008019168152602001600060ff168152602001600061ffff168152602001612be3604051806040016040528060608152602001600063ffffffff1681525090565b8152600060209091015290565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915290565b828054828255906000526020600020908101928215612ca0579160200282015b82811115612ca057825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612c6b565b50612cac929150612cb0565b5090565b5b80821115612cac5760008155600101612cb1565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715612cfd57612cfd612cc5565b60405290565b60405161016081016001600160401b0381118282101715612cfd57612cfd612cc5565b604080519081016001600160401b0381118282101715612cfd57612cfd612cc5565b604051601f8201601f191681016001600160401b0381118282101715612d7057612d70612cc5565b604052919050565b600082601f830112612d8957600080fd5b81356001600160401b03811115612da257612da2612cc5565b612db5601f8201601f1916602001612d48565b818152846020838601011115612dca57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612df957600080fd5b81356001600160401b03811115612e0f57600080fd5b612e1b84828501612d78565b949350505050565b805160408084528151908401819052600091602091908201906060860190845b81811015612e685783516001600160a01b031683529284019291840191600101612e43565b50509382015163ffffffff16949091019390935250919050565b602081528151602082015260ff602083015116604082015261ffff60408301511660608201526000606083015160a06080840152612ec360c0840182612e23565b905063ffffffff60808501511660a08401528091505092915050565b600060208284031215612ef157600080fd5b5035919050565b80356001600160a01b0381168114612aac57600080fd5b600060208284031215612f2157600080fd5b612f2a82612ef8565b9392505050565b803560ff81168114612aac57600080fd5b803563ffffffff81168114612aac57600080fd5b803561ffff81168114612aac57600080fd5b80356001600160401b0381168114612aac57600080fd5b60006001600160401b03821115612f9857612f98612cc5565b5060051b60200190565b600082601f830112612fb357600080fd5b81356020612fc8612fc383612f7f565b612d48565b82815260079290921b84018101918181019086841115612fe757600080fd5b8286015b8481101561304857608081890312156130045760008081fd5b61300c612cdb565b8135815284820135858201526040613025818401612f31565b908201526060613036838201612f31565b90820152835291830191608001612feb565b509695505050505050565b60006020828403121561306557600080fd5b81356001600160401b038082111561307c57600080fd5b90830190610160828603121561309157600080fd5b613099612d03565b6130a283612f31565b81526130b060208401612f42565b60208201526130c160408401612f42565b60408201526130d260608401612f56565b6060820152608083013560808201526130ed60a08401612f68565b60a08201526130fe60c08401612f31565b60c082015260e08301358281111561311557600080fd5b61312187828601612d78565b60e083015250610100613135818501612f42565b90820152610120838101358381111561314d57600080fd5b61315988828701612fa2565b91830191909152506101409283013592810192909252509392505050565b60005b8381101561319257818101518382015260200161317a565b50506000910152565b600081518084526131b3816020860160208601613177565b601f01601f19169290920160200192915050565b8215158152604060208201526000612e1b604083018461319b565b6000806000606084860312156131f757600080fd5b833592506020808501356001600160401b038082111561321657600080fd5b61322288838901612fa2565b9450604087013591508082111561323857600080fd5b908601906040828903121561324c57600080fd5b613254612d26565b82358281111561326357600080fd5b83019150601f8201891361327657600080fd5b8135613284612fc382612f7f565b81815260059190911b8301850190858101908b8311156132a357600080fd5b938601935b828510156132c8576132b985612ef8565b825293860193908601906132a8565b8352506132d89050838501612f42565b84820152809450505050509250925092565b600081518084526020808501945080840160005b8381101561334357815180518852838101518489015260408082015160ff908116918a01919091526060918201511690880152608090960195908201906001016132fe565b509495945050505050565b805160ff16825260006101606020830151613371602086018263ffffffff169052565b506040830151613389604086018263ffffffff169052565b50606083015161339f606086018261ffff169052565b506080830151608085015260a08301516133c460a08601826001600160401b03169052565b5060c08301516133d960c086018260ff169052565b5060e08301518160e08601526133f18286018261319b565b9150506101008084015161340c8287018263ffffffff169052565b5050610120808401518583038287015261342683826132ea565b61014095860151969095019590955250919392505050565b602081526000612f2a602083018461334e565b60008060006060848603121561346657600080fd5b61346f84612f42565b925060208401356001600160401b0381111561348a57600080fd5b61349686828701612d78565b9250506134a560408501612f31565b90509250925092565b600080602083850312156134c157600080fd5b82356001600160401b03808211156134d857600080fd5b818501915085601f8301126134ec57600080fd5b8135818111156134fb57600080fd5b86602082850101111561350d57600080fd5b60209290920196919550909350505050565b606081526000613532606083018661334e565b8415156020840152828103604084015261354c818561319b565b9695505050505050565b60006020828403121561356857600080fd5b612f2a82612f42565b602081526000612f2a6020830184612e23565b634e487b7160e01b600052601160045260246000fd5b80820180821115611fb757611fb7613584565b634e487b7160e01b600052603260045260246000fd5b6000600182016135d5576135d5613584565b5060010190565b602081526000612f2a602083018461319b565b6020808252600e908201526d696e76616c6964204d6f64756c6560901b604082015260600190565b63ffffffff81811683821601908082111561363457613634613584565b5092915050565b60ff8181168382160190811115611fb757611fb7613584565b81810381811115611fb757611fb7613584565b6001600160401b038516815263ffffffff84166020820152608060408201526000613695608083018561319b565b905060ff8316606083015295945050505050565b8082028115828204841417611fb757611fb7613584565b6000826136dd57634e487b7160e01b600052601260045260246000fd5b500490565b600082516136f4818460208701613177565b9190910192915050565b6001600160e01b031960e089811b8216835288901b1660048201526001600160f01b031960f087901b166008820152600a81018590526001600160c01b031960c085901b16602a8201526001600160f81b031960f884901b1660328201528151600090613772816033850160208701613177565b9190910160330198975050505050505050565b6001600160401b038181168382160190808211156136345761363461358456fe6e6f74207369676e65642062792063757272656e7420677561726469616e20736574676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d6564a26469706673582212205d5882e1f3c291261b1e6d945d34d01ec6821cbee679e060e12fe0f9b5f8706c64736f6c63430008130033",
    "sourceMap": "225:2814:3:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101c65760003560e01c806393df337e116100f7578063cb4cfea811610095578063f42bc64111610064578063f42bc64114610712578063f8ce560a14610732578063f951975a14610752578063fbe3c2cd1461077f5761022d565b8063cb4cfea814610647578063d60b347f146106a1578063e039f224146106da578063eb8d3f12146106ef5761022d565b8063a9e11893116100d1578063a9e11893146105c3578063b172b222146105f0578063b19a437e14610605578063c0fd8bde146106185761022d565b806393df337e1461055b5780639a8a05921461057b578063a0cce1b3146105a35761022d565b80634fdc60fa1161016457806364d42b171161013e57806364d42b17146104e35780636606b4e0146104f85780638129fc1c14610518578063875be02a1461052d5761022d565b80634fdc60fa14610406578063515f3247146104695780635cb8cae2146104c35761022d565b80631a90a219116101a05780631a90a219146103245780631cfe7951146103435780632c3c02a41461036f5780634cf842b5146103af5761022d565b80630319e59c1461026357806304ca84cf146102d5578063178149e7146103025761022d565b3661022d5760405162461bcd60e51b815260206004820152602c60248201527f74686520576f726d686f6c6520636f6e747261637420646f6573206e6f74206160448201526b63636570742061737365747360a01b60648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152600b60248201526a1d5b9cdd5c1c1bdc9d195960aa1b6044820152606401610224565b34801561026f57600080fd5b5061028361027e366004612de7565b61079e565b6040516102cc9190600060a0820190508251825260ff602084015116602083015261ffff6040840151166040830152606083015160608301526080830151608083015292915050565b60405180910390f35b3480156102e157600080fd5b506102f56102f0366004612de7565b6108f4565b6040516102cc9190612e82565b34801561030e57600080fd5b5061032261031d366004612de7565b610b0b565b005b34801561033057600080fd5b506007545b6040519081526020016102cc565b34801561034f57600080fd5b5060035463ffffffff165b60405163ffffffff90911681526020016102cc565b34801561037b57600080fd5b5061039f61038a366004612edf565b60009081526005602052604090205460ff1690565b60405190151581526020016102cc565b3480156103bb57600080fd5b506103ee6103ca366004612f0f565b6001600160a01b03166000908152600460205260409020546001600160401b031690565b6040516001600160401b0390911681526020016102cc565b34801561041257600080fd5b50610426610421366004612de7565b610c44565b6040516102cc91908151815260208083015160ff169082015260408083015161ffff16908201526060918201516001600160a01b03169181019190915260800190565b34801561047557600080fd5b50610489610484366004612de7565b610d80565b6040516102cc91908151815260208083015160ff169082015260408083015161ffff16908201526060918201519181019190915260800190565b3480156104cf57600080fd5b506103226104de366004612de7565b610eaf565b3480156104ef57600080fd5b50600854610335565b34801561050457600080fd5b50610322610513366004612de7565b610ff4565b34801561052457600080fd5b50610322611204565b34801561053957600080fd5b5061054d610548366004613053565b61148b565b6040516102cc9291906131c7565b34801561056757600080fd5b50610322610576366004612de7565b6114a4565b34801561058757600080fd5b5060005461ffff165b60405161ffff90911681526020016102cc565b3480156105af57600080fd5b5061054d6105be3660046131e2565b6115e0565b3480156105cf57600080fd5b506105e36105de366004612de7565b61185b565b6040516102cc919061343e565b3480156105fc57600080fd5b50600154610335565b6103ee610613366004613451565b611bf3565b34801561062457600080fd5b506106386106333660046134ae565b611c93565b6040516102cc9392919061351f565b34801561065357600080fd5b50610667610662366004612de7565b611cf7565b6040516102cc91908151815260208083015160ff16908201526040808301519082015260609182015161ffff169181019190915260800190565b3480156106ad57600080fd5b5061039f6106bc366004612f0f565b6001600160a01b031660009081526006602052604090205460ff1690565b3480156106e657600080fd5b5061039f611e28565b3480156106fb57600080fd5b50600354640100000000900463ffffffff1661035a565b34801561071e57600080fd5b5061032261072d366004612de7565b611e3b565b34801561073e57600080fd5b5061033561074d366004612edf565b611f4d565b34801561075e57600080fd5b5061077261076d366004613556565b611fbd565b6040516102cc9190613571565b34801561078b57600080fd5b5060005462010000900461ffff16610590565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052906107d3838261205c565b82526107e060208261359a565b90506107ec83826120ba565b60ff1660208301526107ff60018261359a565b9050816020015160ff1660041461084f5760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b6044820152606401610224565b6108598382612116565b61ffff16604083015261086d60028261359a565b90506108798382612173565b606083015261088960208261359a565b9050610895838261205c565b60808301526108a560208261359a565b9050808351146108ee5760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b6044820152606401610224565b50919050565b6108fc612b96565b6000610908838261205c565b825261091560208261359a565b905061092183826120ba565b60ff16602083015261093460018261359a565b9050816020015160ff1660021461098d5760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e536574557067726164650000000000006044820152606401610224565b6109978382612116565b61ffff1660408301526109ab60028261359a565b90506109b783826121c8565b63ffffffff1660808301526109cd60048261359a565b905060006109db84836120ba565b90506109e860018361359a565b915060405180604001604052808260ff166001600160401b03811115610a1057610a10612cc5565b604051908082528060200260200182016040528015610a39578160200160208202803683370190505b5081526000602090910181905260608501919091525b8160ff16811015610ab357610a648584612225565b606085015151805183908110610a7c57610a7c6135ad565b6001600160a01b0390921660209283029190910190910152610a9f60148461359a565b925080610aab816135c3565b915050610a4f565b5081845114610b045760405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e536574557067726164650000000000006044820152606401610224565b5050919050565b610b13611e28565b610b4c5760405162461bcd60e51b815260206004820152600a6024820152696e6f74206120666f726b60b01b6044820152606401610224565b6000610b578261185b565b9050600080610b658361228a565b91509150818190610b895760405162461bcd60e51b815260040161022491906135dc565b506000610b998460e00151611cf7565b805190915063436f726514610bc05760405162461bcd60e51b8152600401610224906135ef565b46816040015114610c075760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21022ab269021b430b4b760791b6044820152606401610224565b610c15846101400151612400565b610c22816040015161241b565b60608101516000805461ffff191661ffff9092169190911790555b5050505050565b604080516080810182526000808252602082018190529181018290526060810182905290610c72838261205c565b8252610c7f60208261359a565b9050610c8b83826120ba565b60ff166020830152610c9e60018261359a565b9050816020015160ff16600114610cf15760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b6044820152606401610224565b610cfb8382612116565b61ffff166040830152610d0f60028261359a565b9050610d1b838261205c565b6001600160a01b03166060830152610d3460208261359a565b9050808351146108ee5760405162461bcd60e51b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b6044820152606401610224565b604080516080810182526000808252602082018190529181018290526060810182905290610dae838261205c565b8252610dbb60208261359a565b9050610dc783826120ba565b60ff166020830152610dda60018261359a565b9050816020015160ff16600314610e2b5760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b6044820152606401610224565b610e358382612116565b61ffff166040830152610e4960028261359a565b9050610e558382612173565b6060830152610e6560208261359a565b9050808351146108ee5760405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b6044820152606401610224565b610eb7611e28565b15610ef35760405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420666f726b60a01b6044820152606401610224565b6000610efe8261185b565b9050600080610f0c8361228a565b91509150818190610f305760405162461bcd60e51b815260040161022491906135dc565b506000610f408460e00151610c44565b805190915063436f726514610f885760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b6044820152606401610224565b60005461ffff1661ffff16816040015161ffff1614610fd95760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b6044820152606401610224565b610fe7846101400151612400565b610c3d8160600151612464565b6000610fff8261185b565b905060008061100d8361228a565b915091508181906110315760405162461bcd60e51b815260040161022491906135dc565b5060006110418460e001516108f4565b805190915063436f7265146110685760405162461bcd60e51b8152600401610224906135ef565b60005461ffff1661ffff16816040015161ffff1614801561108e575061108c611e28565b155b8061109f5750604081015161ffff16155b6110db5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b6044820152606401610224565b6060810151515161112e5760405162461bcd60e51b815260206004820152601960248201527f6e657720677561726469616e2073657420697320656d707479000000000000006044820152606401610224565b60035463ffffffff16611142906001613617565b63ffffffff16816080015163ffffffff16146111aa5760405162461bcd60e51b815260206004820152602160248201527f696e646578206d75737420696e63726561736520696e207374657073206f66206044820152603160f81b6064820152608401610224565b6111b8846101400151612400565b6111cf6111ca60035463ffffffff1690565b612591565b6111e1816060015182608001516125c9565b60808101516003805463ffffffff191663ffffffff909216919091179055610c3d565b60006112377f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905061125b816001600160a01b031660009081526006602052604090205460ff1690565b1561129e5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606401610224565b6112c6816001600160a01b03166000908152600660205260409020805460ff19166001179055565b600854600003611488576000806112e060005461ffff1690565b90508061ffff166002036112f7576001915061147c565b8061ffff1660040361130c576038915061147c565b8061ffff16600503611321576089915061147c565b8061ffff166006036113375761a86a915061147c565b8061ffff1660070361134d5761a516915061147c565b8061ffff1660090361136557634e454152915061147c565b8061ffff16600a0361137a5760fa915061147c565b8061ffff16600b03611390576102ae915061147c565b8061ffff16600c036113a657610313915061147c565b8061ffff16600d036113bc57612019915061147c565b8061ffff16600e036113d25761a4ec915061147c565b8061ffff166010036113e857610504915061147c565b8061ffff1660110361140057630e9ac0d6915061147c565b8061ffff166017036114165761a4b1915061147c565b8061ffff1660180361142b57600a915061147c565b8061ffff16601903611440576064915061147c565b60405162461bcd60e51b81526020600482015260116024820152702ab735b737bbb71031b430b4b71034b21760791b6044820152606401610224565b6114858261241b565b50505b50565b6000606061149a8360016126a3565b9094909350915050565b60006114af8261185b565b90506000806114bd8361228a565b915091508181906114e15760405162461bcd60e51b815260040161022491906135dc565b5060006114f18460e0015161079e565b805190915063436f7265146115185760405162461bcd60e51b8152600401610224906135ef565b60005461ffff1661ffff16816040015161ffff1614801561153e575061153c611e28565b155b8061154f5750604081015161ffff16155b61158b5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21021b430b4b760991b6044820152606401610224565b611599846101400151612400565b608081015160608201516040516001600160a01b0383169180156108fc02916000818181858888f193505050501580156115d7573d6000803e3d6000fd5b50505050505050565b8051516000906060908290815b865181101561183957600087828151811061160a5761160a6135ad565b60200260200101519050600060018a8360400151846000015185602001516040516000815260200160405260405161165e949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015611680573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166116e35760405162461bcd60e51b815260206004820152601f60248201527f65637265636f766572206661696c65642077697468207369676e6174757265006044820152606401610224565b8215806116f957508460ff16826060015160ff16115b6117515760405162461bcd60e51b815260206004820152602360248201527f7369676e617475726520696e6469636573206d75737420626520617363656e64604482015262696e6760e81b6064820152608401610224565b6060820151945060ff851684116117aa5760405162461bcd60e51b815260206004820152601c60248201527f677561726469616e20696e646578206f7574206f6620626f756e6473000000006044820152606401610224565b8760000151826060015160ff16815181106117c7576117c76135ad565b60200260200101516001600160a01b0316816001600160a01b031614611824576000604051806040016040528060148152602001731593481cda59db985d1d5c99481a5b9d985b1a5960621b815250965096505050505050611853565b50508080611831906135c3565b9150506115ed565b506001604051806020016040528060008152509350935050505b935093915050565b611863612bf0565b600061186f83826120ba565b60ff16825261187f60018261359a565b9050816000015160ff166001146118d85760405162461bcd60e51b815260206004820152601760248201527f564d2076657273696f6e20696e636f6d70617469626c650000000000000000006044820152606401610224565b6118e283826121c8565b63ffffffff166101008301526118f960048261359a565b9050600061190784836120ba565b60ff16905061191760018361359a565b9150806001600160401b0381111561193157611931612cc5565b60405190808252806020026020018201604052801561198357816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161194f5790505b5061012084015260005b81811015611aba5761199f85846120ba565b84610120015182815181106119b6576119b66135ad565b602090810291909101015160ff9091166060909101526119d760018461359a565b92506119e3858461205c565b84610120015182815181106119fa576119fa6135ad565b60200260200101516000018181525050602083611a17919061359a565b9250611a23858461205c565b8461012001518281518110611a3a57611a3a6135ad565b60200260200101516020018181525050602083611a57919061359a565b9250611a6385846120ba565b611a6e90601b61363b565b8461012001518281518110611a8557611a856135ad565b602090810291909101015160ff909116604090910152611aa660018461359a565b925080611ab2816135c3565b91505061198d565b506000611ad683848751611ace9190613654565b8791906128d7565b90508080519060200120604051602001611af291815260200190565b60408051601f198184030181529190528051602090910120610140850152611b1a85846121c8565b63ffffffff166020850152611b3060048461359a565b9250611b3c85846121c8565b63ffffffff166040850152611b5260048461359a565b9250611b5e8584612116565b61ffff166060850152611b7260028461359a565b9250611b7e858461205c565b6080850152611b8e60208461359a565b9250611b9a85846129e4565b6001600160401b031660a0850152611bb360088461359a565b9250611bbf85846120ba565b60ff1660c0850152611bd260018461359a565b9250611be583848751611ace9190613654565b60e085015250919392505050565b6000611bfe60075490565b3414611c3a5760405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642066656560a81b6044820152606401610224565b611c4333612a41565b9050336001600160a01b03167f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b282868686604051611c849493929190613667565b60405180910390a29392505050565b611c9b612bf0565b60006060611cde85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061185b92505050565b9250611ceb8360006126a3565b93969095509293505050565b604080516080810182526000808252602082018190529181018290526060810182905290611d25838261205c565b8252611d3260208261359a565b9050611d3e83826120ba565b60ff166020830152611d5160018261359a565b9050816020015160ff16600514611da35760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b6044820152606401610224565b611dad8382612173565b6040830152611dbd60208261359a565b9050611dc98382612116565b61ffff166060830152611ddd60028261359a565b9050808351146108ee5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b6044820152606401610224565b600046611e3460085490565b1415905090565b6000611e468261185b565b9050600080611e548361228a565b91509150818190611e785760405162461bcd60e51b815260040161022491906135dc565b506000611e888460e00151610d80565b805190915063436f726514611ed05760405162461bcd60e51b815260206004820152600e60248201526d496e76616c6964204d6f64756c6560901b6044820152606401610224565b60005461ffff1661ffff16816040015161ffff16148015611ef65750611ef4611e28565b155b611f325760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21021b430b4b760991b6044820152606401610224565b611f40846101400151612400565b610c3d8160600151600755565b60006101008210611f955760405162461bcd60e51b8152602060048201526012602482015271746f6f206d616e7920677561726469616e7360701b6044820152606401610224565b6003611fa28360026136a9565b611fac91906136c0565b611fb790600161359a565b92915050565b60408051808201825260608082526000602080840182905263ffffffff8616825260028152908490208451815492830281018401865294850182815293949390928492849184018282801561203b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161201d575b50505091835250506001919091015463ffffffff1660209091015292915050565b600061206982602061359a565b835110156120b15760405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606401610224565b50016020015190565b60006120c782600161359a565b8351101561210d5760405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606401610224565b50016001015190565b600061212382600261359a565b8351101561216a5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606401610224565b50016002015190565b600061218082602061359a565b835110156120b15760405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606401610224565b60006121d582600461359a565b8351101561221c5760405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606401610224565b50016004015190565b600061223282601461359a565b8351101561227a5760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606401610224565b500160200151600160601b900490565b6000606060008061229a8561148b565b91509150816122af5760009590945092505050565b60035463ffffffff1663ffffffff1685610100015163ffffffff16146122f55760006040518060600160405280602281526020016137a660229139935093505050915091565b60005462010000900461ffff1661ffff16856060015161ffff1614612350576000604051806040016040528060168152602001753bb937b7339033b7bb32b93730b731b29031b430b4b760511b815250935093505050915091565b6001548560800151146123a05760006040518060400160405280601981526020017f77726f6e6720676f7665726e616e636520636f6e747261637400000000000000815250935093505050915091565b61014085015160009081526005602052604090205460ff16156123e35760006040518060600160405280602281526020016137c860229139935093505050915091565b600160405180602001604052806000815250935093505050915091565b6000908152600560205260409020805460ff19166001179055565b46811461245f5760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b6044820152606401610224565b600855565b60006124977f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506124a282612ab1565b60408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009182916001600160a01b038616916124e5916136e2565b600060405180830381855af49150503d8060008114612520576040519150601f19603f3d011682016040523d82523d6000602084013e612525565b606091505b509150915081819061254a5760405162461bcd60e51b815260040161022491906135dc565b50836001600160a01b0316836001600160a01b03167f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a4960405160405180910390a350505050565b61259e4262015180613617565b63ffffffff9182166000908152600260205260409020600101805463ffffffff191691909216179055565b81515160005b8181101561264d578351805160009190839081106125ef576125ef6135ad565b60200260200101516001600160a01b03160361263b5760405162461bcd60e51b815260206004820152600b60248201526a496e76616c6964206b657960a81b6044820152606401610224565b80612645816135c3565b9150506125cf565b5063ffffffff8216600090815260026020908152604090912084518051869361267a928492910190612c4b565b50602091909101516001909101805463ffffffff191663ffffffff909216919091179055505050565b6000606060006126b7856101000151611fbd565b9050831561278d57602080860151604080880151606089015160808a015160a08b015160c08c015160e08d015195516000986126f5989791016136fe565b60405160208183030381529060405290506000818051906020012060405160200161272291815260200190565b604051602081830303815290604052805190602001209050866101400151811461278a5760006040518060400160405280601a81526020017f766d2e6861736820646f65736e2774206d6174636820626f6479000000000000815250945094505050506128d0565b50505b8051516000036127cd5750506040805180820190915260148152731a5b9d985b1a590819dd585c991a585b881cd95d60621b6020820152600091506128d0565b60035463ffffffff1663ffffffff1685610100015163ffffffff16141580156127ff575042816020015163ffffffff16105b1561284357505060408051808201909152601881527f677561726469616e2073657420686173206578706972656400000000000000006020820152600091506128d0565b80515161284f90611f4d565b8561012001515110156128875750506040805180820190915260098152686e6f2071756f72756d60b81b6020820152600091506128d0565b60008061289f876101400151886101200151856115e0565b91509150816128b6576000945092506128d0915050565b600160405180602001604052806000815250945094505050505b9250929050565b6060816128e581601f61359a565b10156129245760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610224565b61292e828461359a565b845110156129725760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610224565b60608215801561299157604051915060008252602082016040526129db565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156129ca5780518352602092830192016129b2565b5050858452601f01601f1916604052505b50949350505050565b60006129f182600861359a565b83511015612a385760405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b6044820152606401610224565b50016008015190565b6001600160a01b0381166000908152600460205260409020546001600160401b0316612aac82612a72836001613785565b6001600160a01b03919091166000908152600460205260409020805467ffffffffffffffff19166001600160401b03909216919091179055565b919050565b612aba81612af1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b803b612b555760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610224565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6040518060a0016040528060008019168152602001600060ff168152602001600061ffff168152602001612be3604051806040016040528060608152602001600063ffffffff1681525090565b8152600060209091015290565b604080516101608101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c0820183905260e08201819052610100820183905261012082015261014081019190915290565b828054828255906000526020600020908101928215612ca0579160200282015b82811115612ca057825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612c6b565b50612cac929150612cb0565b5090565b5b80821115612cac5760008155600101612cb1565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715612cfd57612cfd612cc5565b60405290565b60405161016081016001600160401b0381118282101715612cfd57612cfd612cc5565b604080519081016001600160401b0381118282101715612cfd57612cfd612cc5565b604051601f8201601f191681016001600160401b0381118282101715612d7057612d70612cc5565b604052919050565b600082601f830112612d8957600080fd5b81356001600160401b03811115612da257612da2612cc5565b612db5601f8201601f1916602001612d48565b818152846020838601011115612dca57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612df957600080fd5b81356001600160401b03811115612e0f57600080fd5b612e1b84828501612d78565b949350505050565b805160408084528151908401819052600091602091908201906060860190845b81811015612e685783516001600160a01b031683529284019291840191600101612e43565b50509382015163ffffffff16949091019390935250919050565b602081528151602082015260ff602083015116604082015261ffff60408301511660608201526000606083015160a06080840152612ec360c0840182612e23565b905063ffffffff60808501511660a08401528091505092915050565b600060208284031215612ef157600080fd5b5035919050565b80356001600160a01b0381168114612aac57600080fd5b600060208284031215612f2157600080fd5b612f2a82612ef8565b9392505050565b803560ff81168114612aac57600080fd5b803563ffffffff81168114612aac57600080fd5b803561ffff81168114612aac57600080fd5b80356001600160401b0381168114612aac57600080fd5b60006001600160401b03821115612f9857612f98612cc5565b5060051b60200190565b600082601f830112612fb357600080fd5b81356020612fc8612fc383612f7f565b612d48565b82815260079290921b84018101918181019086841115612fe757600080fd5b8286015b8481101561304857608081890312156130045760008081fd5b61300c612cdb565b8135815284820135858201526040613025818401612f31565b908201526060613036838201612f31565b90820152835291830191608001612feb565b509695505050505050565b60006020828403121561306557600080fd5b81356001600160401b038082111561307c57600080fd5b90830190610160828603121561309157600080fd5b613099612d03565b6130a283612f31565b81526130b060208401612f42565b60208201526130c160408401612f42565b60408201526130d260608401612f56565b6060820152608083013560808201526130ed60a08401612f68565b60a08201526130fe60c08401612f31565b60c082015260e08301358281111561311557600080fd5b61312187828601612d78565b60e083015250610100613135818501612f42565b90820152610120838101358381111561314d57600080fd5b61315988828701612fa2565b91830191909152506101409283013592810192909252509392505050565b60005b8381101561319257818101518382015260200161317a565b50506000910152565b600081518084526131b3816020860160208601613177565b601f01601f19169290920160200192915050565b8215158152604060208201526000612e1b604083018461319b565b6000806000606084860312156131f757600080fd5b833592506020808501356001600160401b038082111561321657600080fd5b61322288838901612fa2565b9450604087013591508082111561323857600080fd5b908601906040828903121561324c57600080fd5b613254612d26565b82358281111561326357600080fd5b83019150601f8201891361327657600080fd5b8135613284612fc382612f7f565b81815260059190911b8301850190858101908b8311156132a357600080fd5b938601935b828510156132c8576132b985612ef8565b825293860193908601906132a8565b8352506132d89050838501612f42565b84820152809450505050509250925092565b600081518084526020808501945080840160005b8381101561334357815180518852838101518489015260408082015160ff908116918a01919091526060918201511690880152608090960195908201906001016132fe565b509495945050505050565b805160ff16825260006101606020830151613371602086018263ffffffff169052565b506040830151613389604086018263ffffffff169052565b50606083015161339f606086018261ffff169052565b506080830151608085015260a08301516133c460a08601826001600160401b03169052565b5060c08301516133d960c086018260ff169052565b5060e08301518160e08601526133f18286018261319b565b9150506101008084015161340c8287018263ffffffff169052565b5050610120808401518583038287015261342683826132ea565b61014095860151969095019590955250919392505050565b602081526000612f2a602083018461334e565b60008060006060848603121561346657600080fd5b61346f84612f42565b925060208401356001600160401b0381111561348a57600080fd5b61349686828701612d78565b9250506134a560408501612f31565b90509250925092565b600080602083850312156134c157600080fd5b82356001600160401b03808211156134d857600080fd5b818501915085601f8301126134ec57600080fd5b8135818111156134fb57600080fd5b86602082850101111561350d57600080fd5b60209290920196919550909350505050565b606081526000613532606083018661334e565b8415156020840152828103604084015261354c818561319b565b9695505050505050565b60006020828403121561356857600080fd5b612f2a82612f42565b602081526000612f2a6020830184612e23565b634e487b7160e01b600052601160045260246000fd5b80820180821115611fb757611fb7613584565b634e487b7160e01b600052603260045260246000fd5b6000600182016135d5576135d5613584565b5060010190565b602081526000612f2a602083018461319b565b6020808252600e908201526d696e76616c6964204d6f64756c6560901b604082015260600190565b63ffffffff81811683821601908082111561363457613634613584565b5092915050565b60ff8181168382160190811115611fb757611fb7613584565b81810381811115611fb757611fb7613584565b6001600160401b038516815263ffffffff84166020820152608060408201526000613695608083018561319b565b905060ff8316606083015295945050505050565b8082028115828204841417611fb757611fb7613584565b6000826136dd57634e487b7160e01b600052601260045260246000fd5b500490565b600082516136f4818460208701613177565b9190910192915050565b6001600160e01b031960e089811b8216835288901b1660048201526001600160f01b031960f087901b166008820152600a81018590526001600160c01b031960c085901b16602a8201526001600160f81b031960f884901b1660328201528151600090613772816033850160208701613177565b9190910160330198975050505050505050565b6001600160401b038181168382160190808211156136345761363461358456fe6e6f74207369676e65642062792063757272656e7420677561726469616e20736574676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d6564a26469706673582212205d5882e1f3c291261b1e6d945d34d01ec6821cbee679e060e12fe0f9b5f8706c64736f6c63430008130033",
    "sourceMap": "225:2814:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2981:54;;-1:-1:-1;;;2981:54:3;;216:2:124;2981:54:3;;;198:21:124;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:124;;;338:42;397:19;;2981:54:3;;;;;;;;225:2814;2924:21;;-1:-1:-1;;;2924:21:3;;629:2:124;2924:21:3;;;611::124;668:2;648:18;;;641:30;-1:-1:-1;;;687:18:124;;;680:41;738:18;;2924:21:3;427:335:124;3681:671:2;;;;;;;;;;-1:-1:-1;3681:671:2;;;;;:::i;:::-;;:::i;:::-;;;;;;3138:4:124;3180:3;3169:9;3165:19;3157:27;;3217:6;3211:13;3200:9;3193:32;3293:4;3285;3277:6;3273:17;3267:24;3263:35;3256:4;3245:9;3241:20;3234:65;3367:6;3359:4;3351:6;3347:17;3341:24;3337:37;3330:4;3319:9;3315:20;3308:67;3431:4;3423:6;3419:17;3413:24;3406:4;3395:9;3391:20;3384:54;3494:4;3486:6;3482:17;3476:24;3469:4;3458:9;3454:20;3447:54;2988:519;;;;;3681:671:2;;;;;;;;1934:988;;;;;;;;;;-1:-1:-1;1934:988:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5371:843:1:-;;;;;;;;;;-1:-1:-1;5371:843:1;;;;;:::i;:::-;;:::i;:::-;;1346:93:0;;;;;;;;;;-1:-1:-1;1415:17:0;;1346:93;;;5133:25:124;;;5121:2;5106:18;1346:93:0;4987:177:124;286:114:0;;;;;;;;;;-1:-1:-1;370:23:0;;;;286:114;;;5343:10:124;5331:23;;;5313:42;;5301:2;5286:18;286:114:0;5169:192:124;521:139:0;;;;;;;;;;-1:-1:-1;521:139:0;;;;;:::i;:::-;592:4;615:38;;;:32;:38;;;;;;;;;521:139;;;;5716:14:124;;5709:22;5691:41;;5679:2;5664:18;521:139:0;5551:187:124;1445:117:0;;;;;;;;;;-1:-1:-1;1445:117:0;;;;;:::i;:::-;-1:-1:-1;;;;;1530:25:0;1505:6;1530:25;;;:16;:25;;;;;;-1:-1:-1;;;;;1530:25:0;;1445:117;;;;-1:-1:-1;;;;;6381:31:124;;;6363:50;;6351:2;6336:18;1445:117:0;6219:200:124;1250:602:2;;;;;;;;;;-1:-1:-1;1250:602:2;;;;;:::i;:::-;;:::i;:::-;;;;;;6653:13:124;;6635:32;;6727:4;6715:17;;;6709:24;6735:4;6705:35;6683:20;;;6676:65;6801:4;6789:17;;;6783:24;6809:6;6779:37;6757:20;;;6750:67;6877:4;6865:17;;;6859:24;-1:-1:-1;;;;;6855:50:124;6833:20;;;6826:80;;;;6622:3;6607:19;;6424:488;2998:608:2;;;;;;;;;;-1:-1:-1;2998:608:2;;;;;:::i;:::-;;:::i;:::-;;;;;;7142:13:124;;7124:32;;7216:4;7204:17;;;7198:24;7224:4;7194:35;7172:20;;;7165:65;7290:4;7278:17;;;7272:24;7298:6;7268:37;7246:20;;;7239:67;7362:4;7350:17;;;7344:24;7322:20;;;7315:54;;;;7111:3;7096:19;;6917:458;835:834:1;;;;;;;;;;-1:-1:-1;835:834:1;;;;;:::i;:::-;;:::i;900:93:0:-;;;;;;;;;;-1:-1:-1;969:17:0;;900:93;;2610:1517:1;;;;;;;;;;-1:-1:-1;2610:1517:1;;;;;:::i;:::-;;:::i;1038:1585:3:-;;;;;;;;;;;;;:::i;1188:160:4:-;;;;;;;;;;-1:-1:-1;1188:160:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4222:1038:1:-;;;;;;;;;;-1:-1:-1;4222:1038:1;;;;;:::i;:::-;;:::i;799:95:0:-;;;;;;;;;;-1:-1:-1;839:6:0;864:23;;;799:95;;;11831:6:124;11819:19;;;11801:38;;11789:2;11774:18;799:95:0;11657:188:124;5338:1872:4;;;;;;;;;;-1:-1:-1;5338:1872:4;;;;;:::i;:::-;;:::i;7394:2293::-;;;;;;;;;;-1:-1:-1;7394:2293:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1223:117:0:-;;;;;;;;;;-1:-1:-1;1299:34:0;;1223:117;;459:397:3;;;;;;:::i;:::-;;:::i;380:370:4:-;;;;;;;;;;-1:-1:-1;380:370:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;4429:623:2:-;;;;;;;;;;-1:-1:-1;4429:623:2;;;;;:::i;:::-;;:::i;:::-;;;;;;17764:13:124;;17746:32;;17838:4;17826:17;;;17820:24;17846:4;17816:35;17794:20;;;17787:65;17908:4;17896:17;;;17890:24;17868:20;;;17861:54;17975:4;17963:17;;;17957:24;17983:6;17953:37;17931:20;;;17924:67;;;;17733:3;17718:19;;17537:460;666:127:0;;;;;;;;;;-1:-1:-1;666:127:0;;;;;:::i;:::-;-1:-1:-1;;;;;747:39:0;724:4;747:39;;;:33;:39;;;;;;;;;666:127;999:98;;;;;;;;;;;;;:::i;406:109::-;;;;;;;;;;-1:-1:-1;484:24:0;;;;;;;406:109;;1745:781:1;;;;;;;;;;-1:-1:-1;1745:781:1;;;;;:::i;:::-;;:::i;9807:258:4:-;;;;;;;;;;-1:-1:-1;9807:258:4;;;;;:::i;:::-;;:::i;143:137:0:-;;;;;;;;;;-1:-1:-1;143:137:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1103:114::-;;;;;;;;;;-1:-1:-1;1153:6:0;1177:33;;;;;;1103:114;;3681:671:2;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3834:36:2;:19;-1:-1:-1;3834:29:2;:36::i;:::-;3822:48;;3880:11;3889:2;3880:11;;:::i;:::-;;-1:-1:-1;3914:34:2;:19;3880:11;3914:27;:34::i;:::-;3902:46;;:9;;;:46;3958:10;3967:1;3958:10;;:::i;:::-;;;3987:2;:9;;;:14;;4000:1;3987:14;3979:47;;;;-1:-1:-1;;;3979:47:2;;19115:2:124;3979:47:2;;;19097:21:124;19154:2;19134:18;;;19127:30;-1:-1:-1;;;19173:18:124;;;19166:50;19233:18;;3979:47:2;18913:344:124;3979:47:2;4048:35;:19;4077:5;4048:28;:35::i;:::-;4037:46;;:8;;;:46;4093:10;4102:1;4093:10;;:::i;:::-;;-1:-1:-1;4126:36:2;:19;4093:10;4126:29;:36::i;:::-;4114:9;;;:48;4172:11;4181:2;4172:11;;:::i;:::-;;-1:-1:-1;4209:36:2;:19;4172:11;4209:29;:36::i;:::-;4194:12;;;:51;4255:11;4264:2;4255:11;;:::i;:::-;;;4315:5;4285:19;:26;:35;4277:68;;;;-1:-1:-1;;;4277:68:2;;19115:2:124;4277:68:2;;;19097:21:124;19154:2;19134:18;;;19127:30;-1:-1:-1;;;19173:18:124;;;19166:50;19233:18;;4277:68:2;18913:344:124;4277:68:2;3787:565;3681:671;;;:::o;1934:988::-;2017:29;;:::i;:::-;2058:10;2096:31;:14;2058:10;2096:24;:31::i;:::-;2083:44;;2137:11;2146:2;2137:11;;:::i;:::-;;-1:-1:-1;2172:29:2;:14;2137:11;2172:22;:29::i;:::-;2159:42;;:10;;;:42;2211:10;2220:1;2211:10;;:::i;:::-;;;2240:3;:10;;;:15;;2254:1;2240:15;2232:54;;;;-1:-1:-1;;;2232:54:2;;19464:2:124;2232:54:2;;;19446:21:124;19503:2;19483:18;;;19476:30;19542:28;19522:18;;;19515:56;19588:18;;2232:54:2;19262:350:124;2232:54:2;2309:30;:14;2333:5;2309:23;:30::i;:::-;2297:42;;:9;;;:42;2349:10;2358:1;2349:10;;:::i;:::-;;-1:-1:-1;2396:30:2;:14;2349:10;2396:23;:30::i;:::-;2370:56;;:23;;;:56;2436:10;2445:1;2436:10;;:::i;:::-;;-1:-1:-1;2457:20:2;2480:29;:14;2436:10;2480:22;:29::i;:::-;2457:52;-1:-1:-1;2519:10:2;2528:1;2519:10;;:::i;:::-;;;2561:113;;;;;;;;2616:14;2602:29;;-1:-1:-1;;;;;2602:29:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2602:29:2;-1:-1:-1;2561:113:2;;2662:1;2561:113;;;;;;;2540:18;;;:134;;;;2685:151;2705:14;2701:18;;:1;:18;2685:151;;;2769:31;:14;2794:5;2769:24;:31::i;:::-;2740:18;;;;:23;:26;;2764:1;;2740:26;;;;;;:::i;:::-;-1:-1:-1;;;;;2740:60:2;;;:26;;;;;;;;;;;:60;2814:11;2823:2;2814:11;;:::i;:::-;;-1:-1:-1;2721:3:2;;;;:::i;:::-;;;;2685:151;;;;2879:5;2854:14;:21;:30;2846:69;;;;-1:-1:-1;;;2846:69:2;;19464:2:124;2846:69:2;;;19446:21:124;19503:2;19483:18;;;19476:30;19542:28;19522:18;;;19515:56;19588:18;;2846:69:2;19262:350:124;2846:69:2;2048:874;;1934:988;;;:::o;5371:843:1:-;5444:8;:6;:8::i;:::-;5436:31;;;;-1:-1:-1;;;5436:31:1;;20091:2:124;5436:31:1;;;20073:21:124;20130:2;20110:18;;;20103:30;-1:-1:-1;;;20149:18:124;;;20142:40;20199:18;;5436:31:1;19889:334:124;5436:31:1;5478:20;5501:12;5509:3;5501:7;:12::i;:::-;5478:35;;5581:12;5595:20;5619:22;5638:2;5619:18;:22::i;:::-;5580:61;;;;5659:7;5668:6;5651:24;;;;;-1:-1:-1;;;5651:24:1;;;;;;;;:::i;:::-;;5686:43;5732:31;5752:2;:10;;;5732:19;:31::i;:::-;5827:10;;5686:77;;-1:-1:-1;692:66:1;5827:20;5819:47;;;;-1:-1:-1;;;5819:47:1;;;;;;;:::i;:::-;5947:13;5929:3;:14;;;:31;5921:61;;;;-1:-1:-1;;;5921:61:1;;20998:2:124;5921:61:1;;;20980:21:124;21037:2;21017:18;;;21010:30;-1:-1:-1;;;21056:18:124;;;21049:47;21113:18;;5921:61:1;20796:341:124;5921:61:1;6064:36;6092:2;:7;;;6064:27;:36::i;:::-;6142:29;6156:3;:14;;;6142:13;:29::i;:::-;6192:14;;;;1023:6:6;:33;;-1:-1:-1;;1023:33:6;;;;;;;;;;;6181:26:1;5426:788;;;;5371:843;:::o;1250:602:2:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1404:31:2;:14;-1:-1:-1;1404:24:2;:31::i;:::-;1392:43;;1445:11;1454:2;1445:11;;:::i;:::-;;-1:-1:-1;1479:29:2;:14;1445:11;1479:22;:29::i;:::-;1467:41;;:9;;;:41;1518:10;1527:1;1518:10;;:::i;:::-;;;1547:2;:9;;;:14;;1560:1;1547:14;1539:50;;;;-1:-1:-1;;;1539:50:2;;21344:2:124;1539:50:2;;;21326:21:124;21383:2;21363:18;;;21356:30;-1:-1:-1;;;21402:18:124;;;21395:53;21465:18;;1539:50:2;21142:347:124;1539:50:2;1611:30;:14;1635:5;1611:23;:30::i;:::-;1600:41;;:8;;;:41;1651:10;1660:1;1651:10;;:::i;:::-;;-1:-1:-1;1713:31:2;:14;1651:10;1713:24;:31::i;:::-;-1:-1:-1;;;;;1672:75:2;:14;;;:75;1757:11;1766:2;1757:11;;:::i;:::-;;;1812:5;1787:14;:21;:30;1779:66;;;;-1:-1:-1;;;1779:66:2;;21344:2:124;1779:66:2;;;21326:21:124;21383:2;21363:18;;;21356:30;-1:-1:-1;;;21402:18:124;;;21395:53;21465:18;;1779:66:2;21142:347:124;2998:608:2;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:37:2;:20;-1:-1:-1;3156:30:2;:37::i;:::-;3143:50;;3203:11;3212:2;3203:11;;:::i;:::-;;-1:-1:-1;3238:35:2;:20;3203:11;3238:28;:35::i;:::-;3225:48;;:10;;;:48;3283:10;3292:1;3283:10;;:::i;:::-;;;3312:3;:10;;;:15;;3326:1;3312:15;3304:49;;;;-1:-1:-1;;;3304:49:2;;21696:2:124;3304:49:2;;;21678:21:124;21735:2;21715:18;;;21708:30;-1:-1:-1;;;21754:18:124;;;21747:51;21815:18;;3304:49:2;21494:345:124;3304:49:2;3376:36;:20;3406:5;3376:29;:36::i;:::-;3364:48;;:9;;;:48;3422:10;3431:1;3422:10;;:::i;:::-;;-1:-1:-1;3460:37:2;:20;3422:10;3460:30;:37::i;:::-;3443:14;;;:54;3507:11;3516:2;3507:11;;:::i;:::-;;;3568:5;3537:20;:27;:36;3529:70;;;;-1:-1:-1;;;3529:70:2;;21696:2:124;3529:70:2;;;21678:21:124;21735:2;21715:18;;;21708:30;-1:-1:-1;;;21754:18:124;;;21747:51;21815:18;;3529:70:2;21494:345:124;835:834:1;910:8;:6;:8::i;:::-;909:9;901:34;;;;-1:-1:-1;;;901:34:1;;22046:2:124;901:34:1;;;22028:21:124;22085:2;22065:18;;;22058:30;-1:-1:-1;;;22104:18:124;;;22097:42;22156:18;;901:34:1;21844:336:124;901:34:1;946:20;969:12;977:3;969:7;:12::i;:::-;946:35;;1049:12;1063:20;1087:22;1106:2;1087:18;:22::i;:::-;1048:61;;;;1127:7;1136:6;1119:24;;;;;-1:-1:-1;;;1119:24:1;;;;;;;;:::i;:::-;;1154:48;1205:32;1226:2;:10;;;1205:20;:32::i;:::-;1301:14;;1154:83;;-1:-1:-1;692:66:1;1301:24;1293:51;;;;-1:-1:-1;;;1293:51:1;;22387:2:124;1293:51:1;;;22369:21:124;22426:2;22406:18;;;22399:30;-1:-1:-1;;;22445:18:124;;;22438:44;22499:18;;1293:51:1;22185:338:124;1293:51:1;839:6:0;864:23;;;1407:26:1;;:7;:13;;;:26;;;1399:52;;;;-1:-1:-1;;;1399:52:1;;22730:2:124;1399:52:1;;;22712:21:124;22769:2;22749:18;;;22742:30;-1:-1:-1;;;22788:18:124;;;22781:43;22841:18;;1399:52:1;22528:337:124;1399:52:1;1514:36;1542:2;:7;;;1514:27;:36::i;:::-;1620:42;1642:7;:19;;;1620:21;:42::i;2610:1517::-;2675:20;2698:12;2706:3;2698:7;:12::i;:::-;2675:35;;2778:12;2792:20;2816:22;2835:2;2816:18;:22::i;:::-;2777:61;;;;2856:7;2865:6;2848:24;;;;;-1:-1:-1;;;2848:24:1;;;;;;;;:::i;:::-;;2883:51;2937:35;2961:2;:10;;;2937:23;:35::i;:::-;3036:14;;2883:89;;-1:-1:-1;692:66:1;3036:24;3028:51;;;;-1:-1:-1;;;3028:51:1;;;;;;;:::i;:::-;839:6:0;864:23;;;3143:26:1;;:7;:13;;;:26;;;:39;;;;;3174:8;:6;:8::i;:::-;3173:9;3143:39;3142:63;;;-1:-1:-1;3187:13:1;;;;:18;;;3142:63;3134:89;;;;-1:-1:-1;;;3134:89:1;;23072:2:124;3134:89:1;;;23054:21:124;23111:2;23091:18;;;23084:30;-1:-1:-1;;;23130:18:124;;;23123:43;23183:18;;3134:89:1;22870:337:124;3134:89:1;3376:22;;;;:27;:34;3368:76;;;;-1:-1:-1;;;3368:76:1;;23414:2:124;3368:76:1;;;23396:21:124;23453:2;23433:18;;;23426:30;23492:27;23472:18;;;23465:55;23537:18;;3368:76:1;23212:349:124;3368:76:1;370:23:0;;;;3572:32:1;;3603:1;3572:32;:::i;:::-;3541:63;;:7;:27;;;:63;;;3533:109;;;;-1:-1:-1;;;3533:109:1;;23945:2:124;3533:109:1;;;23927:21:124;23984:2;23964:18;;;23957:30;24023:34;24003:18;;;23996:62;-1:-1:-1;;;24074:18:124;;;24067:31;24115:19;;3533:109:1;23743:397:124;3533:109:1;3724:36;3752:2;:7;;;3724:27;:36::i;:::-;3833:47;3851:28;370:23:0;;;;;286:114;3851:28:1;3833:17;:47::i;:::-;3942:69;3959:7;:22;;;3983:7;:27;;;3942:16;:69::i;:::-;4092:27;;;;211:23:6;:34;;-1:-1:-1;;211:34:6;;;;;;;;;;;4069:51:1;143:109:6;1038:1585:3;2662:22;2687:35;901:66:103;1251:54;-1:-1:-1;;;;;1251:54:103;;1172:140;2687:35:3;2662:60;;2755:29;2769:14;-1:-1:-1;;;;;747:39:0;724:4;747:39;;;:33;:39;;;;;;;;;666:127;2755:29:3;2754:30;2733:96;;;;-1:-1:-1;;;2733:96:3;;24347:2:124;2733:96:3;;;24329:21:124;24386:2;24366:18;;;24359:30;-1:-1:-1;;;24405:18:124;;;24398:49;24464:18;;2733:96:3;24145:343:124;2733:96:3;2840:30;2855:14;-1:-1:-1;;;;;771:49:6;:6;:49;;;:33;:49;;;;;:56;;-1:-1:-1;;771:56:6;823:4;771:56;;;704:130;2840:30:3;969:17:0;;1185:1:3::1;1169:17:::0;1165:1452:::1;;1202:18;1234:12:::0;1249:9:::1;839:6:0::0;864:23;;;;799:95;1249:9:3::1;1234:24;;1340:5;:10;;1349:1;1340:10:::0;1329:1238:::1;;1368:1;1355:14;;1329:1238;;;1415:5;:10;;1424:1;1415:10:::0;1411:1156:::1;;1443:2;1430:15;;1411:1156;;;1485:5;:10;;1494:1;1485:10:::0;1481:1086:::1;;1513:3;1500:16;;1481:1086;;;1559:5;:10;;1568:1;1559:10:::0;1555:1012:::1;;1587:5;1574:18;;1555:1012;;;1635:5;:10;;1644:1;1635:10:::0;1631:936:::1;;1663:5;1650:18;;1631:936;;;1707:5;:10;;1716:1;1707:10:::0;1703:864:::1;;1735:10;1722:23;;1703:864;;;1780:5;:11;;1789:2;1780:11:::0;1776:791:::1;;1808:3;1795:16;;1776:791;;;1853:5;:11;;1862:2;1853:11:::0;1849:718:::1;;1881:3;1868:16;;1849:718;;;1926:5;:11;;1935:2;1926:11:::0;1922:645:::1;;1954:3;1941:16;;1922:645;;;1998:5;:11;;2007:2;1998:11:::0;1994:573:::1;;2026:4;2013:17;;1994:573;;;2071:5;:11;;2080:2;2071:11:::0;2067:500:::1;;2099:5;2086:18;;2067:500;;;2142:5;:11;;2151:2;2142:11:::0;2138:429:::1;;2170:4;2157:17;;2138:429;;;2217:5;:11;;2226:2;2217:11:::0;2213:354:::1;;2245:9;2232:22;;2213:354;;;2288:5;:11;;2297:2;2288:11:::0;2284:283:::1;;2316:5;2303:18;;2284:283;;;2363:5;:11;;2372:2;2363:11:::0;2359:208:::1;;2391:2;2378:15;;2359:208;;;2438:5;:11;;2447:2;2438:11:::0;2434:133:::1;;2466:3;2453:16;;2434:133;;;2525:27;::::0;-1:-1:-1;;;2525:27:3;;24695:2:124;2525:27:3::1;::::0;::::1;24677:21:124::0;24734:2;24714:18;;;24707:30;-1:-1:-1;;;24753:18:124;;;24746:47;24810:18;;2525:27:3::1;24493:341:124::0;2434:133:3::1;2581:25;2595:10;2581:13;:25::i;:::-;1188:1429;;1165:1452;2652:237:::0;1038:1585::o;1188:160:4:-;1249:10;1261:20;1311:26;1328:2;1332:4;1311:16;:26::i;:::-;1293:44;;;;-1:-1:-1;1188:160:4;-1:-1:-1;;1188:160:4:o;4222:1038:1:-;4285:20;4308:12;4316:3;4308:7;:12::i;:::-;4285:35;;4388:12;4402:20;4426:22;4445:2;4426:18;:22::i;:::-;4387:61;;;;4466:7;4475:6;4458:24;;;;;-1:-1:-1;;;4458:24:1;;;;;;;;:::i;:::-;;4546:46;4595:29;4613:2;:10;;;4595:17;:29::i;:::-;4688:15;;4546:78;;-1:-1:-1;692:66:1;4688:25;4680:52;;;;-1:-1:-1;;;4680:52:1;;;;;;;:::i;:::-;839:6:0;864:23;;;4796:27:1;;:8;:14;;;:27;;;:40;;;;;4828:8;:6;:8::i;:::-;4827:9;4796:40;4795:65;;;-1:-1:-1;4841:14:1;;;;:19;;;4795:65;4787:91;;;;-1:-1:-1;;;4787:91:1;;23072:2:124;4787:91:1;;;23054:21:124;23111:2;23091:18;;;23084:30;-1:-1:-1;;;23130:18:124;;;23123:43;23183:18;;4787:91:1;22870:337:124;4787:91:1;4960:36;4988:2;:7;;;4960:27;:36::i;:::-;5133:18;;;;5237:15;;;;5218:35;;-1:-1:-1;;;;;5218:18:1;;;:35;;;;;5073:25;5218:35;5073:25;5218:35;5237:15;5218:18;:35;;;;;;;;;;;;;;;;;;;;;4275:985;;;;;4222:1038;:::o;5338:1872:4:-;5575:16;;:23;5478:10;;5490:20;;5478:10;;;5608:1456;5629:10;:17;5625:1;:21;5608:1456;;;5667:28;5698:10;5709:1;5698:13;;;;;;;;:::i;:::-;;;;;;;5667:44;;5725:17;5745:36;5755:4;5761:3;:5;;;5768:3;:5;;;5775:3;:5;;;5745:36;;;;;;;;;;;;;;;;;25066:25:124;;;25139:4;25127:17;;;;25122:2;25107:18;;25100:45;25176:2;25161:18;;25154:34;25219:2;25204:18;;25197:34;25053:3;25038:19;;24839:398;5745:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5745:36:4;;-1:-1:-1;;5745:36:4;;;-1:-1:-1;;;;;;;5998:23:4;;5990:67;;;;-1:-1:-1;;;5990:67:4;;25444:2:124;5990:67:4;;;25426:21:124;25483:2;25463:18;;;25456:30;25522:33;25502:18;;;25495:61;25573:18;;5990:67:4;25242:355:124;5990:67:4;6154:6;;;:39;;;6184:9;6164:29;;:3;:17;;;:29;;;6154:39;6146:87;;;;-1:-1:-1;;;6146:87:4;;25804:2:124;6146:87:4;;;25786:21:124;25843:2;25823:18;;;25816:30;25882:34;25862:18;;;25855:62;-1:-1:-1;;;25933:18:124;;;25926:33;25976:19;;6146:87:4;25602:399:124;6146:87:4;6259:17;;;;;-1:-1:-1;6729:33:4;;;;-1:-1:-1;6721:74:4;;;;-1:-1:-1;;;6721:74:4;;26208:2:124;6721:74:4;;;26190:21:124;26247:2;26227:18;;;26220:30;26286;26266:18;;;26259:58;26334:18;;6721:74:4;26006:352:124;6721:74:4;6947:11;:16;;;6964:3;:17;;;6947:35;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6934:48:4;:9;-1:-1:-1;;;;;6934:48:4;;6931:123;;7009:5;7001:38;;;;;;;;;;;;;-1:-1:-1;;;7001:38:4;;;;;;;;;;;;;;6931:123;5653:1411;;5648:3;;;;;:::i;:::-;;;;5608:1456;;;;7194:4;7186:17;;;;;;;;;;;;;;;;;;5338:1872;;;;;;;:::o;7394:2293::-;7464:20;;:::i;:::-;7496:10;7534:24;:9;7496:10;7534:17;:24::i;:::-;7521:37;;;;7568:10;7577:1;7568:10;;:::i;:::-;;;8020:2;:10;;;:15;;8034:1;8020:15;8012:51;;;;-1:-1:-1;;;8012:51:4;;26565:2:124;8012:51:4;;;26547:21:124;26604:2;26584:18;;;26577:30;26643:25;26623:18;;;26616:53;26686:18;;8012:51:4;26363:347:124;8012:51:4;8097:25;:9;8116:5;8097:18;:25::i;:::-;8075:47;;:19;;;:47;8132:10;8141:1;8132:10;;:::i;:::-;;-1:-1:-1;8181:18:4;8202:24;:9;8132:10;8202:17;:24::i;:::-;8181:45;;;-1:-1:-1;8236:10:4;8245:1;8236:10;;:::i;:::-;;;8296;-1:-1:-1;;;;;8272:35:4;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8272:35:4;;-1:-1:-1;;8272:35:4;;;;;;;;;;;-1:-1:-1;8256:13:4;;;:51;8322:6;8317:405;8338:10;8334:1;:14;8317:405;;;8402:24;:9;8420:5;8402:17;:24::i;:::-;8369:2;:13;;;8383:1;8369:16;;;;;;;;:::i;:::-;;;;;;;;;;;:57;;;;:30;;;;:57;8440:10;8449:1;8440:10;;:::i;:::-;;-1:-1:-1;8486:26:4;:9;8440:10;8486:19;:26::i;:::-;8465:2;:13;;;8479:1;8465:16;;;;;;;;:::i;:::-;;;;;;;:18;;:47;;;;;8535:2;8526:11;;;;;:::i;:::-;;-1:-1:-1;8572:26:4;:9;8526:11;8572:19;:26::i;:::-;8551:2;:13;;;8565:1;8551:16;;;;;;;;:::i;:::-;;;;;;;:18;;:47;;;;;8621:2;8612:11;;;;;:::i;:::-;;-1:-1:-1;8658:24:4;:9;8612:11;8658:17;:24::i;:::-;:29;;8685:2;8658:29;:::i;:::-;8637:2;:13;;;8651:1;8637:16;;;;;;;;:::i;:::-;;;;;;;;;;;:50;;;;:18;;;;:50;8701:10;8710:1;8701:10;;:::i;:::-;;-1:-1:-1;8350:3:4;;;;:::i;:::-;;;;8317:405;;;;9011:17;9031:48;9047:5;9073;9054:9;:16;:24;;;;:::i;:::-;9031:9;;:48;:15;:48::i;:::-;9011:68;;9136:4;9126:15;;;;;;9109:33;;;;;;27130:19:124;;27174:2;27165:12;;27001:182;9109:33:4;;;;-1:-1:-1;;9109:33:4;;;;;;;;;9099:44;;9109:33;9099:44;;;;9089:7;;;:54;9195:25;:9;9214:5;9195:18;:25::i;:::-;9180:40;;:12;;;:40;9230:10;9239:1;9230:10;;:::i;:::-;;-1:-1:-1;9262:25:4;:9;9230:10;9262:18;:25::i;:::-;9251:36;;:8;;;:36;9297:10;9306:1;9297:10;;:::i;:::-;;-1:-1:-1;9338:25:4;:9;9297:10;9338:18;:25::i;:::-;9318:45;;:17;;;:45;9373:10;9382:1;9373:10;;:::i;:::-;;-1:-1:-1;9414:26:4;:9;9373:10;9414:19;:26::i;:::-;9394:17;;;:46;9450:11;9459:2;9450:11;;:::i;:::-;;-1:-1:-1;9486:25:4;:9;9450:11;9486:18;:25::i;:::-;-1:-1:-1;;;;;9472:39:4;:11;;;:39;9521:10;9530:1;9521:10;;:::i;:::-;;-1:-1:-1;9564:24:4;:9;9521:10;9564:17;:24::i;:::-;9542:46;;:19;;;:46;9598:10;9607:1;9598:10;;:::i;:::-;;;9632:48;9648:5;9674;9655:9;:16;:24;;;;:::i;9632:48::-;9619:10;;;:61;-1:-1:-1;9619:2:4;;7394:2293;-1:-1:-1;;;7394:2293:4:o;459:397:3:-;597:15;666:12;1415:17:0;;;1346:93;666:12:3;653:9;:25;645:49;;;;-1:-1:-1;;;645:49:3;;27390:2:124;645:49:3;;;27372:21:124;27429:2;27409:18;;;27402:30;-1:-1:-1;;;27448:18:124;;;27441:41;27499:18;;645:49:3;27188:335:124;645:49:3;716:23;728:10;716:11;:23::i;:::-;705:34;;794:10;-1:-1:-1;;;;;774:75:3;;806:8;816:5;823:7;832:16;774:75;;;;;;;;;:::i;:::-;;;;;;;;459:397;;;;;:::o;380:370:4:-;453:20;;:::i;:::-;475:10;487:20;524:18;532:9;;524:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;524:7:4;;-1:-1:-1;;;524:18:4:i;:::-;519:23;;716:27;733:2;737:5;716:16;:27::i;:::-;380:370;;698:45;;-1:-1:-1;698:45:4;;-1:-1:-1;;;380:370:4:o;4429:623:2:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4590:38:2;:21;-1:-1:-1;4590:31:2;:38::i;:::-;4577:51;;4638:11;4647:2;4638:11;;:::i;:::-;;-1:-1:-1;4673:36:2;:21;4638:11;4673:29;:36::i;:::-;4660:49;;:10;;;:49;4719:10;4728:1;4719:10;;:::i;:::-;;;4748:3;:10;;;:15;;4762:1;4748:15;4740:50;;;;-1:-1:-1;;;4740:50:2;;28213:2:124;4740:50:2;;;28195:21:124;28252:2;28232:18;;;28225:30;-1:-1:-1;;;28271:18:124;;;28264:52;28333:18;;4740:50:2;28011:346:124;4740:50:2;4818:38;:21;4850:5;4818:31;:38::i;:::-;4801:14;;;:55;4866:11;4875:2;4866:11;;:::i;:::-;;-1:-1:-1;4905:37:2;:21;4866:11;4905:30;:37::i;:::-;4888:54;;:14;;;:54;4952:10;4961:1;4952:10;;:::i;:::-;;;5013:5;4981:21;:28;:37;4973:72;;;;-1:-1:-1;;;4973:72:2;;28213:2:124;4973:72:2;;;28195:21:124;28252:2;28232:18;;;28225:30;-1:-1:-1;;;28271:18:124;;;28264:52;28333:18;;4973:72:2;28011:346:124;999:98:0;1038:4;1077:13;1061:12;969:17;;;900:93;1061:12;:29;;1054:36;;999:98;:::o;1745:781:1:-;1809:20;1832:12;1840:3;1832:7;:12::i;:::-;1809:35;;1912:12;1926:20;1950:22;1969:2;1950:18;:22::i;:::-;1911:61;;;;1990:7;1999:6;1982:24;;;;;-1:-1:-1;;;1982:24:1;;;;;;;;:::i;:::-;;2017:46;2066:30;2085:2;:10;;;2066:18;:30::i;:::-;2160:14;;2017:79;;-1:-1:-1;692:66:1;2160:24;2152:51;;;;-1:-1:-1;;;2152:51:1;;22387:2:124;2152:51:1;;;22369:21:124;22426:2;22406:18;;;22399:30;-1:-1:-1;;;22445:18:124;;;22438:44;22499:18;;2152:51:1;22185:338:124;2152:51:1;839:6:0;864:23;;;2266:26:1;;:7;:13;;;:26;;;:39;;;;;2297:8;:6;:8::i;:::-;2296:9;2266:39;2258:65;;;;-1:-1:-1;;;2258:65:1;;22730:2:124;2258:65:1;;;22712:21:124;22769:2;22749:18;;;22742:30;-1:-1:-1;;;22788:18:124;;;22781:43;22841:18;;2258:65:1;22528:337:124;2258:65:1;2405:36;2433:2;:7;;;2405:27;:36::i;:::-;2486:33;2500:7;:18;;;1394:17:6;:26;1336:91;9807:258:4;9871:35;9987:3;9972:12;:18;9964:49;;;;-1:-1:-1;;;9964:49:4;;28564:2:124;9964:49:4;;;28546:21:124;28603:2;28583:18;;;28576:30;-1:-1:-1;;;28622:18:124;;;28615:48;28680:18;;9964:49:4;28362:342:124;9964:49:4;10052:1;10032:16;:12;10047:1;10032:16;:::i;:::-;10031:22;;;;:::i;:::-;10030:28;;10057:1;10030:28;:::i;:::-;10023:35;9807:258;-1:-1:-1;;9807:258:4:o;143:137:0:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;247:26:0;;;;;:19;:26;;;;;;240:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;240:33:0;247:26;;240:33;;247:26;;240:33;;247:26;240:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;240:33:0;;;;;;;;;;;;;;;;-1:-1:-1;;;240:33:0;;;-1:-1:-1;;240:33:0;;;;;;;;;;;;;;143:137;-1:-1:-1;;143:137:0:o;14814:320:40:-;14893:7;14937:11;:6;14946:2;14937:11;:::i;:::-;14920:6;:13;:28;;14912:62;;;;-1:-1:-1;;;14912:62:40;;29306:2:124;14912:62:40;;;29288:21:124;29345:2;29325:18;;;29318:30;-1:-1:-1;;;29364:18:124;;;29357:51;29425:18;;14912:62:40;29104:345:124;14912:62:40;-1:-1:-1;15058:30:40;15074:4;15058:30;15052:37;;14814:320::o;12627:302::-;12704:5;12746:10;:6;12755:1;12746:10;:::i;:::-;12729:6;:13;:27;;12721:60;;;;-1:-1:-1;;;12721:60:40;;29656:2:124;12721:60:40;;;29638:21:124;29695:2;29675:18;;;29668:30;-1:-1:-1;;;29714:18:124;;;29707:49;29773:18;;12721:60:40;29454:343:124;12721:60:40;-1:-1:-1;12857:29:40;12873:3;12857:29;12851:36;;12627:302::o;12935:305::-;13013:6;13056:10;:6;13065:1;13056:10;:::i;:::-;13039:6;:13;:27;;13031:60;;;;-1:-1:-1;;;13031:60:40;;30004:2:124;13031:60:40;;;29986:21:124;30043:2;30023:18;;;30016:30;-1:-1:-1;;;30062:18:124;;;30055:50;30122:18;;13031:60:40;29802:344:124;13031:60:40;-1:-1:-1;13168:29:40;13184:3;13168:29;13162:36;;12935:305::o;14497:311::-;14576:7;14620:11;:6;14629:2;14620:11;:::i;:::-;14603:6;:13;:28;;14595:62;;;;-1:-1:-1;;;14595:62:40;;30353:2:124;14595:62:40;;;30335:21:124;30392:2;30372:18;;;30365:30;-1:-1:-1;;;30411:18:124;;;30404:51;30472:18;;14595:62:40;30151:345:124;13246:305:40;13324:6;13367:10;:6;13376:1;13367:10;:::i;:::-;13350:6;:13;:27;;13342:60;;;;-1:-1:-1;;;13342:60:40;;30703:2:124;13342:60:40;;;30685:21:124;30742:2;30722:18;;;30715:30;-1:-1:-1;;;30761:18:124;;;30754:50;30821:18;;13342:60:40;30501:344:124;13342:60:40;-1:-1:-1;13479:29:40;13495:3;13479:29;13473:36;;13246:305::o;12267:354::-;12346:7;12390:11;:6;12399:2;12390:11;:::i;:::-;12373:6;:13;:28;;12365:62;;;;-1:-1:-1;;;12365:62:40;;31052:2:124;12365:62:40;;;31034:21:124;31091:2;31071:18;;;31064:30;-1:-1:-1;;;31110:18:124;;;31103:51;31171:18;;12365:62:40;30850:345:124;12365:62:40;-1:-1:-1;12515:30:40;12531:4;12515:30;12509:37;-1:-1:-1;;;12505:71:40;;;12267:354::o;6859:1191:1:-;6932:4;6938:13;6998:12;7012:20;7036:12;7045:2;7036:8;:12::i;:::-;6997:51;;;;7063:7;7058:60;;7093:5;;7100:6;;-1:-1:-1;6859:1191:1;-1:-1:-1;;;6859:1191:1:o;7058:60::-;370:23:0;;;;7196:51:1;;:2;:19;;;:51;;;7192:134;;7271:5;7263:52;;;;;;;;;;;;;;;;;;;;;;;6859:1191;;;:::o;7192:134::-;1153:6:0;1177:33;;;;;;7404:48:1;;7411:2;:17;;;7404:48;;;7400:119;;7476:5;7468:40;;;;;;;;;;;;;-1:-1:-1;;;7468:40:1;;;;;;;;;6859:1191;;;:::o;7400:119::-;1299:34:0;;7617:2:1;:17;;;:41;7613:115;;7682:5;7674:43;;;;;;;;;;;;;;;;;;;;;;;6859:1191;;;:::o;7613:115::-;7880:7;;;;592:4:0;615:38;;;:32;:38;;;;;;;;7849:117:1;;;7911:5;7903:52;;;;;;;;;;;;;;;;;;;;;;;6859:1191;;;:::o;7849:117::-;8034:4;8026:17;;;;;;;;;;;;;;;;;;6859:1191;;;:::o;840:122:6:-;910:6;:38;;;:32;:38;;;;;:45;;-1:-1:-1;;910:45:6;951:4;910:45;;;840:122::o;1560:167::-;1644:13;1630:10;:27;1622:58;;;;-1:-1:-1;;;1622:58:6;;31402:2:124;1622:58:6;;;31384:21:124;31441:2;31421:18;;;31414:30;-1:-1:-1;;;31460:18:124;;;31453:48;31518:18;;1622:58:6;31200:342:124;1622:58:6;1690:17;:30;1560:167::o;6312:475:1:-;6389:29;6421:20;901:66:103;1251:54;-1:-1:-1;;;;;1251:54:103;;1172:140;6421:20:1;6389:52;;6452:29;6463:17;6452:10;:29::i;:::-;6623:39;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6623:39:1;-1:-1:-1;;;6623:39:1;;;6592:71;;6555:12;;;;-1:-1:-1;;;;;6592:30:1;;;:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6554:109;;;;6682:7;6698:6;6674:32;;;;;-1:-1:-1;;;6674:32:1;;;;;;;;:::i;:::-;;6762:17;-1:-1:-1;;;;;6722:58:1;6739:21;-1:-1:-1;;;;;6722:58:1;;;;;;;;;;;6379:408;;;6312:475;:::o;258:142:6:-;362:31;369:15;388:5;362:31;:::i;:::-;318:26;;;;:6;:26;;;:19;:26;;;;;:41;;:75;;-1:-1:-1;;318:75:6;;;;;;;;258:142::o;406:292::-;514:8;;:15;497:14;539:111;560:9;556:1;:13;539:111;;;598:8;;:11;;621:1;;598:8;607:1;;598:11;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;598:25:6;;590:49;;;;-1:-1:-1;;;590:49:6;;32041:2:124;590:49:6;;;32023:21:124;32080:2;32060:18;;;32053:30;-1:-1:-1;;;32099:18:124;;;32092:41;32150:18;;590:49:6;31839:335:124;590:49:6;571:3;;;;:::i;:::-;;;;539:111;;;-1:-1:-1;659:26:6;;;:6;:26;;;:19;:26;;;;;;;;:32;;;;688:3;;659:32;;:26;;:32;;;;:::i;:::-;-1:-1:-1;659:32:6;;;;;;;;;;;;-1:-1:-1;;659:32:6;;;;;;;;;;;-1:-1:-1;;;406:292:6:o;1716:3127:4:-;1803:10;1815:20;1929:38;1970:35;1985:2;:19;;;1970:14;:35::i;:::-;1929:76;;2508:9;2505:496;;;2586:12;;;;;2616:8;;;;;2642:17;;;;2677;;;;2712:11;;;;2741:19;;;;2778:10;;;;2552:250;;2532:17;;2552:250;;2586:12;2778:10;2552:250;;:::i;:::-;;;;;;;;;;;;;2532:270;;2817:14;2871:4;2861:15;;;;;;2844:33;;;;;;27130:19:124;;27174:2;27165:12;;27001:182;2844:33:4;;;;;;;;;;;;;2834:44;;;;;;2817:61;;2906:2;:7;;;2896:6;:17;2893:98;;2940:5;2932:44;;;;;;;;;;;;;;;;;;;;;;;;;;2893:98;2518:483;;2505:496;3456:16;;:23;:16;:28;3453:95;;-1:-1:-1;;3499:38:4;;;;;;;;;;;;-1:-1:-1;;;3499:38:4;;;;3507:5;;-1:-1:-1;3499:38:4;;3453:95;370:23:0;;;;3673:51:4;;:2;:19;;;:51;;;;:99;;;;;3757:15;3728:11;:26;;;:44;;;3673:99;3670:170;;;-1:-1:-1;;3787:42:4;;;;;;;;;;;;;;;;;3795:5;;-1:-1:-1;3787:42:4;;3670:170;4354:16;;:23;4347:31;;:6;:31::i;:::-;4324:2;:13;;;:20;:54;4320:111;;;-1:-1:-1;;4393:27:4;;;;;;;;;;;;-1:-1:-1;;;4393:27:4;;;;4401:5;;-1:-1:-1;4393:27:4;;4320:111;4517:20;4539:27;4570:53;4587:2;:7;;;4596:2;:13;;;4611:11;4570:16;:53::i;:::-;4516:107;;;;4637:15;4633:74;;4675:5;;-1:-1:-1;4682:13:4;-1:-1:-1;4667:29:4;;-1:-1:-1;;4667:29:4;4633:74;4827:4;4819:17;;;;;;;;;;;;;;;;;;;1716:3127;;;;;;:::o;9457:2804:40:-;9603:12;9655:7;9639:12;9655:7;9649:2;9639:12;:::i;:::-;:23;;9631:50;;;;-1:-1:-1;;;9631:50:40;;33242:2:124;9631:50:40;;;33224:21:124;33281:2;33261:18;;;33254:30;-1:-1:-1;;;33300:18:124;;;33293:44;33354:18;;9631:50:40;33040:338:124;9631:50:40;9716:16;9725:7;9716:6;:16;:::i;:::-;9699:6;:13;:33;;9691:63;;;;-1:-1:-1;;;9691:63:40;;33585:2:124;9691:63:40;;;33567:21:124;33624:2;33604:18;;;33597:30;-1:-1:-1;;;33643:18:124;;;33636:47;33700:18;;9691:63:40;33383:341:124;9691:63:40;9765:22;9828:15;;9856:1967;;;;11964:4;11958:11;11945:24;;12150:1;12139:9;12132:20;12198:4;12187:9;12183:20;12177:4;12170:34;9821:2397;;9856:1967;10038:4;10032:11;10019:24;;10697:2;10688:7;10684:16;11079:9;11072:17;11066:4;11062:28;11050:9;11039;11035:25;11031:60;11127:7;11123:2;11119:16;11379:6;11365:9;11358:17;11352:4;11348:28;11336:9;11328:6;11324:22;11320:57;11316:70;11153:425;11412:3;11408:2;11405:11;11153:425;;;11550:9;;11539:21;;11453:4;11445:13;;;;11485;11153:425;;;-1:-1:-1;;11596:26:40;;;11804:2;11787:11;-1:-1:-1;;11783:25:40;11777:4;11770:39;-1:-1:-1;9821:2397:40;-1:-1:-1;12245:9:40;9457:2804;-1:-1:-1;;;;9457:2804:40:o;13557:305::-;13635:6;13678:10;:6;13687:1;13678:10;:::i;:::-;13661:6;:13;:27;;13653:60;;;;-1:-1:-1;;;13653:60:40;;33931:2:124;13653:60:40;;;33913:21:124;33970:2;33950:18;;;33943:30;-1:-1:-1;;;33989:18:124;;;33982:50;34049:18;;13653:60:40;33729:344:124;13653:60:40;-1:-1:-1;13790:29:40;13806:3;13790:29;13784:36;;13557:305::o;862:170:3:-;-1:-1:-1;;;;;1530:25:0;;918:15:3;1530:25:0;;;:16;:25;;;;;;-1:-1:-1;;;;;1530:25:0;987:38:3;1530:25:0;1012:12:3;1530:25:0;1023:1:3;1012:12;:::i;:::-;-1:-1:-1;;;;;1511:25:6;;;;:6;:25;;;:16;:25;;;;;:36;;-1:-1:-1;;1511:36:6;-1:-1:-1;;;;;1511:36:6;;;;;;;;;1433:121;987:38:3;862:170;;;:::o;1768:152:103:-;1834:37;1853:17;1834:18;:37::i;:::-;1886:27;;-1:-1:-1;;;;;1886:27:103;;;;;;;;1768:152;:::o;1403:259::-;1034:20:115;;1476:95:103;;;;-1:-1:-1;;;1476:95:103;;34465:2:124;1476:95:103;;;34447:21:124;34504:2;34484:18;;;34477:30;34543:34;34523:18;;;34516:62;-1:-1:-1;;;34594:18:124;;;34587:43;34647:19;;1476:95:103;34263:409:124;1476:95:103;901:66;1581:74;;-1:-1:-1;;;;;;1581:74:103;-1:-1:-1;;;;;1581:74:103;;;;;;;;;;1403:259::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;767:127:124;828:10;823:3;819:20;816:1;809:31;859:4;856:1;849:15;883:4;880:1;873:15;899:253;971:2;965:9;1013:4;1001:17;;-1:-1:-1;;;;;1033:34:124;;1069:22;;;1030:62;1027:88;;;1095:18;;:::i;:::-;1131:2;1124:22;899:253;:::o;1157:255::-;1229:2;1223:9;1271:6;1259:19;;-1:-1:-1;;;;;1293:34:124;;1329:22;;;1290:62;1287:88;;;1355:18;;:::i;1417:251::-;1489:2;1483:9;;;1519:15;;-1:-1:-1;;;;;1549:34:124;;1585:22;;;1546:62;1543:88;;;1611:18;;:::i;1673:275::-;1744:2;1738:9;1809:2;1790:13;;-1:-1:-1;;1786:27:124;1774:40;;-1:-1:-1;;;;;1829:34:124;;1865:22;;;1826:62;1823:88;;;1891:18;;:::i;:::-;1927:2;1920:22;1673:275;;-1:-1:-1;1673:275:124:o;1953:530::-;1995:5;2048:3;2041:4;2033:6;2029:17;2025:27;2015:55;;2066:1;2063;2056:12;2015:55;2102:6;2089:20;-1:-1:-1;;;;;2124:2:124;2121:26;2118:52;;;2150:18;;:::i;:::-;2194:55;2237:2;2218:13;;-1:-1:-1;;2214:27:124;2243:4;2210:38;2194:55;:::i;:::-;2274:2;2265:7;2258:19;2320:3;2313:4;2308:2;2300:6;2296:15;2292:26;2289:35;2286:55;;;2337:1;2334;2327:12;2286:55;2402:2;2395:4;2387:6;2383:17;2376:4;2367:7;2363:18;2350:55;2450:1;2425:16;;;2443:4;2421:27;2414:38;;;;2429:7;1953:530;-1:-1:-1;;;1953:530:124:o;2488:320::-;2556:6;2609:2;2597:9;2588:7;2584:23;2580:32;2577:52;;;2625:1;2622;2615:12;2577:52;2665:9;2652:23;-1:-1:-1;;;;;2690:6:124;2687:30;2684:50;;;2730:1;2727;2720:12;2684:50;2753:49;2794:7;2785:6;2774:9;2770:22;2753:49;:::i;:::-;2743:59;2488:320;-1:-1:-1;;;;2488:320:124:o;3611:684::-;3738:12;;3704:4;3759:17;;;3825:19;;3695:14;;;3853:20;;;3665:3;;3922:4;;3949:21;;;;3900:2;3891:12;;;3665:3;3998:201;4012:6;4009:1;4006:13;3998:201;;;4079:13;;-1:-1:-1;;;;;4075:39:124;4061:54;;4174:15;;;;4137:14;;;;4111:1;4027:9;3998:201;;;-1:-1:-1;;4239:14:124;;;4233:21;4256:10;4229:38;4215:12;;;;4208:60;;;;-1:-1:-1;4284:5:124;3611:684;-1:-1:-1;3611:684:124:o;4300:682::-;4499:2;4488:9;4481:21;4544:6;4538:13;4533:2;4522:9;4518:18;4511:41;4616:4;4610:2;4602:6;4598:15;4592:22;4588:33;4583:2;4572:9;4568:18;4561:61;4686:6;4680:2;4672:6;4668:15;4662:22;4658:35;4653:2;4642:9;4638:18;4631:63;4462:4;4741:2;4733:6;4729:15;4723:22;4782:4;4776:3;4765:9;4761:19;4754:33;4810:64;4869:3;4858:9;4854:19;4840:12;4810:64;:::i;:::-;4796:78;;4941:10;4934:3;4926:6;4922:16;4916:23;4912:40;4905:4;4894:9;4890:20;4883:70;4970:6;4962:14;;;4300:682;;;;:::o;5366:180::-;5425:6;5478:2;5466:9;5457:7;5453:23;5449:32;5446:52;;;5494:1;5491;5484:12;5446:52;-1:-1:-1;5517:23:124;;5366:180;-1:-1:-1;5366:180:124:o;5743:173::-;5811:20;;-1:-1:-1;;;;;5860:31:124;;5850:42;;5840:70;;5906:1;5903;5896:12;5921:186;5980:6;6033:2;6021:9;6012:7;6008:23;6004:32;6001:52;;;6049:1;6046;6039:12;6001:52;6072:29;6091:9;6072:29;:::i;:::-;6062:39;5921:186;-1:-1:-1;;;5921:186:124:o;7380:156::-;7446:20;;7506:4;7495:16;;7485:27;;7475:55;;7526:1;7523;7516:12;7541:163;7608:20;;7668:10;7657:22;;7647:33;;7637:61;;7694:1;7691;7684:12;7709:159;7776:20;;7836:6;7825:18;;7815:29;;7805:57;;7858:1;7855;7848:12;7873:171;7940:20;;-1:-1:-1;;;;;7989:30:124;;7979:41;;7969:69;;8034:1;8031;8024:12;8049:192;8118:4;-1:-1:-1;;;;;8143:6:124;8140:30;8137:56;;;8173:18;;:::i;:::-;-1:-1:-1;8218:1:124;8214:14;8230:4;8210:25;;8049:192::o;8246:1137::-;8309:5;8362:3;8355:4;8347:6;8343:17;8339:27;8329:55;;8380:1;8377;8370:12;8329:55;8416:6;8403:20;8442:4;8466:69;8482:52;8531:2;8482:52;:::i;:::-;8466:69;:::i;:::-;8569:15;;;8655:1;8651:10;;;;8639:23;;8635:32;;;8600:12;;;;8679:15;;;8676:35;;;8707:1;8704;8697:12;8676:35;8743:2;8735:6;8731:15;8755:599;8771:6;8766:3;8763:15;8755:599;;;8849:4;8843:3;8838;8834:13;8830:24;8827:114;;;8895:1;8924:2;8920;8913:14;8827:114;8967:22;;:::i;:::-;9029:3;9016:17;9009:5;9002:32;9092:2;9087:3;9083:12;9070:26;9065:2;9058:5;9054:14;9047:50;9120:2;9158:30;9184:2;9179:3;9175:12;9158:30;:::i;:::-;9142:14;;;9135:54;9212:2;9250:30;9267:12;;;9250:30;:::i;:::-;9234:14;;;9227:54;9294:18;;9332:12;;;;8797:4;8788:14;8755:599;;;-1:-1:-1;9372:5:124;8246:1137;-1:-1:-1;;;;;;8246:1137:124:o;9388:1427::-;9467:6;9520:2;9508:9;9499:7;9495:23;9491:32;9488:52;;;9536:1;9533;9526:12;9488:52;9576:9;9563:23;-1:-1:-1;;;;;9646:2:124;9638:6;9635:14;9632:34;;;9662:1;9659;9652:12;9632:34;9685:22;;;;9741:6;9723:16;;;9719:29;9716:49;;;9761:1;9758;9751:12;9716:49;9787:22;;:::i;:::-;9832:20;9849:2;9832:20;:::i;:::-;9825:5;9818:35;9885:30;9911:2;9907;9903:11;9885:30;:::i;:::-;9880:2;9873:5;9869:14;9862:54;9948:30;9974:2;9970;9966:11;9948:30;:::i;:::-;9943:2;9936:5;9932:14;9925:54;10011:30;10037:2;10033;10029:11;10011:30;:::i;:::-;10006:2;9999:5;9995:14;9988:54;10096:3;10092:2;10088:12;10075:26;10069:3;10062:5;10058:15;10051:51;10135:31;10161:3;10157:2;10153:12;10135:31;:::i;:::-;10129:3;10122:5;10118:15;10111:56;10200:30;10225:3;10221:2;10217:12;10200:30;:::i;:::-;10194:3;10187:5;10183:15;10176:55;10277:3;10273:2;10269:12;10256:26;10307:2;10297:8;10294:16;10291:36;;;10323:1;10320;10313:12;10291:36;10360:44;10396:7;10385:8;10381:2;10377:17;10360:44;:::i;:::-;10354:3;10347:5;10343:15;10336:69;;10424:3;10459:30;10485:2;10481;10477:11;10459:30;:::i;:::-;10443:14;;;10436:54;10509:3;10550:11;;;10537:25;10574:16;;;10571:36;;;10603:1;10600;10593:12;10571:36;10639:65;10696:7;10685:8;10681:2;10677:17;10639:65;:::i;:::-;10623:14;;;10616:89;;;;-1:-1:-1;10724:3:124;10772:11;;;10759:25;10743:14;;;10736:49;;;;-1:-1:-1;10627:5:124;9388:1427;-1:-1:-1;;;9388:1427:124:o;10820:250::-;10905:1;10915:113;10929:6;10926:1;10923:13;10915:113;;;11005:11;;;10999:18;10986:11;;;10979:39;10951:2;10944:10;10915:113;;;-1:-1:-1;;11062:1:124;11044:16;;11037:27;10820:250::o;11075:271::-;11117:3;11155:5;11149:12;11182:6;11177:3;11170:19;11198:76;11267:6;11260:4;11255:3;11251:14;11244:4;11237:5;11233:16;11198:76;:::i;:::-;11328:2;11307:15;-1:-1:-1;;11303:29:124;11294:39;;;;11335:4;11290:50;;11075:271;-1:-1:-1;;11075:271:124:o;11351:301::-;11536:6;11529:14;11522:22;11511:9;11504:41;11581:2;11576;11565:9;11561:18;11554:30;11485:4;11601:45;11642:2;11631:9;11627:18;11619:6;11601:45;:::i;11850:1573::-;12008:6;12016;12024;12077:2;12065:9;12056:7;12052:23;12048:32;12045:52;;;12093:1;12090;12083:12;12045:52;12129:9;12116:23;12106:33;;12158:2;12211;12200:9;12196:18;12183:32;-1:-1:-1;;;;;12275:2:124;12267:6;12264:14;12261:34;;;12291:1;12288;12281:12;12261:34;12314:70;12376:7;12367:6;12356:9;12352:22;12314:70;:::i;:::-;12304:80;;12437:2;12426:9;12422:18;12409:32;12393:48;;12466:2;12456:8;12453:16;12450:36;;;12482:1;12479;12472:12;12450:36;12505:24;;;;12563:2;12545:16;;;12541:25;12538:45;;;12579:1;12576;12569:12;12538:45;12605:22;;:::i;:::-;12665:2;12652:16;12693:2;12683:8;12680:16;12677:36;;;12709:1;12706;12699:12;12677:36;12732:17;;;-1:-1:-1;12780:4:124;12772:13;;12768:27;-1:-1:-1;12758:55:124;;12809:1;12806;12799:12;12758:55;12845:2;12832:16;12868:69;12884:52;12933:2;12884:52;:::i;12868:69::-;12971:15;;;13053:1;13049:10;;;;13041:19;;13037:28;;;13002:12;;;;13077:19;;;13074:39;;;13109:1;13106;13099:12;13074:39;13133:11;;;;13153:148;13169:6;13164:3;13161:15;13153:148;;;13235:23;13254:3;13235:23;:::i;:::-;13223:36;;13186:12;;;;13279;;;;13153:148;;;13310:20;;-1:-1:-1;13362:30:124;;-1:-1:-1;13380:11:124;;;13362:30;:::i;:::-;13357:2;13350:5;13346:14;13339:54;13412:5;13402:15;;;;;;11850:1573;;;;;:::o;13428:781::-;13490:3;13528:5;13522:12;13555:6;13550:3;13543:19;13581:4;13610:2;13605:3;13601:12;13594:19;;13647:2;13640:5;13636:14;13668:1;13678:506;13692:6;13689:1;13686:13;13678:506;;;13751:13;;13789:9;;13777:22;;13839:11;;;13833:18;13819:12;;;13812:40;13875:4;13918:11;;;13912:18;13953:4;13991:21;;;13977:12;;;13970:43;;;;14036:4;14084:11;;;14078:18;14074:27;14060:12;;;14053:49;14131:4;14122:14;;;;14159:15;;;;13714:1;13707:9;13678:506;;;-1:-1:-1;14200:3:124;;13428:781;-1:-1:-1;;;;;13428:781:124:o;14214:1333::-;14319:12;;2880:4;2869:16;2857:29;;14259:3;14287:6;14383:4;14376:5;14372:16;14366:23;14398:47;14439:4;14434:3;14430:14;14416:12;3588:10;3577:22;3565:35;;3512:94;14398:47;;14493:4;14486:5;14482:16;14476:23;14508:49;14551:4;14546:3;14542:14;14526;3588:10;3577:22;3565:35;;3512:94;14508:49;;14605:4;14598:5;14594:16;14588:23;14620:49;14663:4;14658:3;14654:14;14638;2969:6;2958:18;2946:31;;2893:90;14620:49;;14718:4;14711:5;14707:16;14701:23;14694:4;14689:3;14685:14;14678:47;14773:4;14766:5;14762:16;14756:23;14788:49;14831:4;14826:3;14822:14;14806;-1:-1:-1;;;;;6177:30:124;6165:43;;6112:102;14788:49;;14885:4;14878:5;14874:16;14868:23;14900:48;14942:4;14937:3;14933:14;14917;2880:4;2869:16;2857:29;;2813:75;14900:48;;14996:4;14989:5;14985:16;14979:23;15034:2;15027:4;15022:3;15018:14;15011:26;15058:47;15101:2;15096:3;15092:12;15076:14;15058:47;:::i;:::-;15046:59;;;15124:6;15178:2;15171:5;15167:14;15161:21;15191:47;15234:2;15229:3;15225:12;15209:14;3588:10;3577:22;3565:35;;3512:94;15191:47;;;15257:6;15311:2;15304:5;15300:14;15294:21;15355:3;15349:4;15345:14;15340:2;15335:3;15331:12;15324:36;15383:59;15437:4;15421:14;15383:59;:::i;:::-;15461:6;15503:14;;;15497:21;15483:12;;;;15476:43;;;;-1:-1:-1;15369:73:124;;14214:1333;-1:-1:-1;;;14214:1333:124:o;15552:243::-;15721:2;15710:9;15703:21;15684:4;15741:48;15785:2;15774:9;15770:18;15762:6;15741:48;:::i;15982:462::-;16065:6;16073;16081;16134:2;16122:9;16113:7;16109:23;16105:32;16102:52;;;16150:1;16147;16140:12;16102:52;16173:28;16191:9;16173:28;:::i;:::-;16163:38;;16252:2;16241:9;16237:18;16224:32;-1:-1:-1;;;;;16271:6:124;16268:30;16265:50;;;16311:1;16308;16301:12;16265:50;16334:49;16375:7;16366:6;16355:9;16351:22;16334:49;:::i;:::-;16324:59;;;16402:36;16434:2;16423:9;16419:18;16402:36;:::i;:::-;16392:46;;15982:462;;;;;:::o;16449:591::-;16519:6;16527;16580:2;16568:9;16559:7;16555:23;16551:32;16548:52;;;16596:1;16593;16586:12;16548:52;16636:9;16623:23;-1:-1:-1;;;;;16706:2:124;16698:6;16695:14;16692:34;;;16722:1;16719;16712:12;16692:34;16760:6;16749:9;16745:22;16735:32;;16805:7;16798:4;16794:2;16790:13;16786:27;16776:55;;16827:1;16824;16817:12;16776:55;16867:2;16854:16;16893:2;16885:6;16882:14;16879:34;;;16909:1;16906;16899:12;16879:34;16954:7;16949:2;16940:6;16936:2;16932:15;16928:24;16925:37;16922:57;;;16975:1;16972;16965:12;16922:57;17006:2;16998:11;;;;;17028:6;;-1:-1:-1;16449:591:124;;-1:-1:-1;;;;16449:591:124:o;17045:487::-;17284:2;17273:9;17266:21;17247:4;17310:48;17354:2;17343:9;17339:18;17331:6;17310:48;:::i;:::-;17408:6;17401:14;17394:22;17389:2;17378:9;17374:18;17367:50;17465:9;17457:6;17453:22;17448:2;17437:9;17433:18;17426:50;17493:33;17519:6;17511;17493:33;:::i;:::-;17485:41;17045:487;-1:-1:-1;;;;;;17045:487:124:o;18187:184::-;18245:6;18298:2;18286:9;18277:7;18273:23;18269:32;18266:52;;;18314:1;18311;18304:12;18266:52;18337:28;18355:9;18337:28;:::i;18376:270::-;18563:2;18552:9;18545:21;18526:4;18583:57;18636:2;18625:9;18621:18;18613:6;18583:57;:::i;18651:127::-;18712:10;18707:3;18703:20;18700:1;18693:31;18743:4;18740:1;18733:15;18767:4;18764:1;18757:15;18783:125;18848:9;;;18869:10;;;18866:36;;;18882:18;;:::i;19617:127::-;19678:10;19673:3;19669:20;19666:1;19659:31;19709:4;19706:1;19699:15;19733:4;19730:1;19723:15;19749:135;19788:3;19809:17;;;19806:43;;19829:18;;:::i;:::-;-1:-1:-1;19876:1:124;19865:13;;19749:135::o;20228:220::-;20377:2;20366:9;20359:21;20340:4;20397:45;20438:2;20427:9;20423:18;20415:6;20397:45;:::i;20453:338::-;20655:2;20637:21;;;20694:2;20674:18;;;20667:30;-1:-1:-1;;;20728:2:124;20713:18;;20706:44;20782:2;20767:18;;20453:338::o;23566:172::-;23633:10;23663;;;23675;;;23659:27;;23698:11;;;23695:37;;;23712:18;;:::i;:::-;23695:37;23566:172;;;;:::o;26715:148::-;26803:4;26782:12;;;26796;;;26778:31;;26821:13;;26818:39;;;26837:18;;:::i;26868:128::-;26935:9;;;26956:11;;;26953:37;;;26970:18;;:::i;27528:478::-;-1:-1:-1;;;;;27755:6:124;27751:31;27740:9;27733:50;27831:10;27823:6;27819:23;27814:2;27803:9;27799:18;27792:51;27879:3;27874:2;27863:9;27859:18;27852:31;27714:4;27900:46;27941:3;27930:9;27926:19;27918:6;27900:46;:::i;:::-;27892:54;;27994:4;27986:6;27982:17;27977:2;27966:9;27962:18;27955:45;27528:478;;;;;;;:::o;28709:168::-;28782:9;;;28813;;28830:15;;;28824:22;;28810:37;28800:71;;28851:18;;:::i;28882:217::-;28922:1;28948;28938:132;;28992:10;28987:3;28983:20;28980:1;28973:31;29027:4;29024:1;29017:15;29055:4;29052:1;29045:15;28938:132;-1:-1:-1;29084:9:124;;28882:217::o;31547:287::-;31676:3;31714:6;31708:13;31730:66;31789:6;31784:3;31777:4;31769:6;31765:17;31730:66;:::i;:::-;31812:16;;;;;31547:287;-1:-1:-1;;31547:287:124:o;32179:856::-;-1:-1:-1;;;;;;32496:3:124;32537:16;;;32533:25;;32521:38;;32592:16;;;32588:25;32584:1;32575:11;;32568:46;-1:-1:-1;;;;;;32669:3:124;32647:16;;;32643:38;32639:1;32630:11;;32623:59;32707:2;32698:12;;32691:28;;;-1:-1:-1;;;;;;32775:3:124;32753:16;;;32749:51;32744:2;32735:12;;32728:73;-1:-1:-1;;;;;;32857:3:124;32835:16;;;32831:36;32826:2;32817:12;;32810:58;32891:13;;-1:-1:-1;;32913:75:124;32891:13;32976:2;32967:12;;32960:4;32948:17;;32913:75;:::i;:::-;33008:16;;;;33026:2;33004:25;;32179:856;-1:-1:-1;;;;;;;;32179:856:124:o;34078:180::-;-1:-1:-1;;;;;34183:10:124;;;34195;;;34179:27;;34218:11;;;34215:37;;;34232:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "chainId()": "9a8a0592",
    "evmChainId()": "64d42b17",
    "getCurrentGuardianSetIndex()": "1cfe7951",
    "getGuardianSet(uint32)": "f951975a",
    "getGuardianSetExpiry()": "eb8d3f12",
    "governanceActionIsConsumed(bytes32)": "2c3c02a4",
    "governanceChainId()": "fbe3c2cd",
    "governanceContract()": "b172b222",
    "initialize()": "8129fc1c",
    "isFork()": "e039f224",
    "isInitialized(address)": "d60b347f",
    "messageFee()": "1a90a219",
    "nextSequence(address)": "4cf842b5",
    "parseAndVerifyVM(bytes)": "c0fd8bde",
    "parseContractUpgrade(bytes)": "4fdc60fa",
    "parseGuardianSetUpgrade(bytes)": "04ca84cf",
    "parseRecoverChainId(bytes)": "cb4cfea8",
    "parseSetMessageFee(bytes)": "515f3247",
    "parseTransferFees(bytes)": "0319e59c",
    "parseVM(bytes)": "a9e11893",
    "publishMessage(uint32,bytes,uint8)": "b19a437e",
    "quorum(uint256)": "f8ce560a",
    "submitContractUpgrade(bytes)": "5cb8cae2",
    "submitNewGuardianSet(bytes)": "6606b4e0",
    "submitRecoverChainId(bytes)": "178149e7",
    "submitSetMessageFee(bytes)": "f42bc641",
    "submitTransferFees(bytes)": "93df337e",
    "verifySignatures(bytes32,(bytes32,bytes32,uint8,uint8)[],(address[],uint32))": "a0cce1b3",
    "verifyVM((uint8,uint32,uint32,uint16,bytes32,uint64,uint8,bytes,uint32,(bytes32,bytes32,uint8,uint8)[],bytes32))": "875be02a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"GuardianSetAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"LogMessagePublished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evmChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentGuardianSetIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getGuardianSet\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct Structs.GuardianSet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGuardianSetExpiry\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"governanceActionIsConsumed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceChainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceContract\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFork\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"nextSequence\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseAndVerifyVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct Structs.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct Structs.VM\",\"name\":\"vm\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedUpgrade\",\"type\":\"bytes\"}],\"name\":\"parseContractUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"internalType\":\"struct GovernanceStructs.ContractUpgrade\",\"name\":\"cu\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedUpgrade\",\"type\":\"bytes\"}],\"name\":\"parseGuardianSetUpgrade\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct Structs.GuardianSet\",\"name\":\"newGuardianSet\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"newGuardianSetIndex\",\"type\":\"uint32\"}],\"internalType\":\"struct GovernanceStructs.GuardianSetUpgrade\",\"name\":\"gsu\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedRecoverChainId\",\"type\":\"bytes\"}],\"name\":\"parseRecoverChainId\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"evmChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"newChainId\",\"type\":\"uint16\"}],\"internalType\":\"struct GovernanceStructs.RecoverChainId\",\"name\":\"rci\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedSetMessageFee\",\"type\":\"bytes\"}],\"name\":\"parseSetMessageFee\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"messageFee\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernanceStructs.SetMessageFee\",\"name\":\"smf\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTransferFees\",\"type\":\"bytes\"}],\"name\":\"parseTransferFees\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"module\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"chain\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"}],\"internalType\":\"struct GovernanceStructs.TransferFees\",\"name\":\"tf\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVM\",\"type\":\"bytes\"}],\"name\":\"parseVM\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct Structs.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct Structs.VM\",\"name\":\"vm\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"}],\"name\":\"publishMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numGuardians\",\"type\":\"uint256\"}],\"name\":\"quorum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"numSignaturesRequiredForQuorum\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitContractUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitNewGuardianSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitRecoverChainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitSetMessageFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_vm\",\"type\":\"bytes\"}],\"name\":\"submitTransferFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct Structs.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address[]\",\"name\":\"keys\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"expirationTime\",\"type\":\"uint32\"}],\"internalType\":\"struct Structs.GuardianSet\",\"name\":\"guardianSet\",\"type\":\"tuple\"}],\"name\":\"verifySignatures\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"emitterChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"emitterAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"consistencyLevel\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"guardianSetIndex\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"guardianIndex\",\"type\":\"uint8\"}],\"internalType\":\"struct Structs.Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"internalType\":\"struct Structs.VM\",\"name\":\"vm\",\"type\":\"tuple\"}],\"name\":\"verifyVM\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"parseAndVerifyVM(bytes)\":{\"details\":\"parseAndVerifyVM serves to parse an encodedVM and wholy validate it for consumption\"},\"parseContractUpgrade(bytes)\":{\"details\":\"Parse a contract upgrade (action 1) with minimal validation\"},\"parseGuardianSetUpgrade(bytes)\":{\"details\":\"Parse a guardianSet upgrade (action 2) with minimal validation\"},\"parseRecoverChainId(bytes)\":{\"details\":\"Parse a recoverChainId (action 5) with minimal validation\"},\"parseSetMessageFee(bytes)\":{\"details\":\"Parse a setMessageFee (action 3) with minimal validation\"},\"parseTransferFees(bytes)\":{\"details\":\"Parse a transferFees (action 4) with minimal validation\"},\"parseVM(bytes)\":{\"details\":\"parseVM serves to parse an encodedVM into a vm struct  - it intentionally performs no validation functions, it simply parses raw into a struct\"},\"quorum(uint256)\":{\"details\":\"quorum serves solely to determine the number of signatures required to acheive quorum\"},\"submitContractUpgrade(bytes)\":{\"details\":\"Upgrades a contract via Governance VAA/VM\"},\"submitNewGuardianSet(bytes)\":{\"details\":\"Deploys a new `guardianSet` via Governance VAA/VM\"},\"submitRecoverChainId(bytes)\":{\"details\":\"Updates the `chainId` and `evmChainId` on a forked chain via Governance VAA/VM\"},\"submitSetMessageFee(bytes)\":{\"details\":\"Sets a `messageFee` via Governance VAA/VM\"},\"submitTransferFees(bytes)\":{\"details\":\"Submits transfer fees to the recipient via Governance VAA/VM\"},\"verifySignatures(bytes32,(bytes32,bytes32,uint8,uint8)[],(address[],uint32))\":{\"details\":\"verifySignatures serves to validate arbitrary sigatures against an arbitrary guardianSet  - it intentionally does not solve for expectations within guardianSet (you should use verifyVM if you need these protections)  - it intentioanlly does not solve for quorum (you should use verifyVM if you need these protections)  - it intentionally returns true when signatures is an empty set (you should use verifyVM if you need these protections)\"},\"verifyVM((uint8,uint32,uint32,uint16,bytes32,uint64,uint8,bytes,uint32,(bytes32,bytes32,uint8,uint8)[],bytes32))\":{\"details\":\"`verifyVM` serves to validate an arbitrary vm against a valid Guardian set  - it aims to make sure the VM is for a known guardianSet  - it aims to ensure the guardianSet is not expired  - it aims to ensure the VM has reached quorum  - it aims to verify the signatures provided against the guardianSet  - it aims to verify the hash field provided against the contents of the vm\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Implementation.sol\":\"Implementation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@solidity-parser/=node_modules/@solidity-parser/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/Getters.sol\":{\"keccak256\":\"0x5a725b038bb92c981d20d501623194a9f787e5a69b15d64509293356c96d829e\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://d7143b8f62c85af4e0c8c38133221827ded9784005428680947a05c76d23221f\",\"dweb:/ipfs/QmXyUMHqjcZ2uE2oHDPYfMHxb85P4zUrZN2MmFWdg2u9Di\"]},\"contracts/Governance.sol\":{\"keccak256\":\"0xbcc72896cbe67f8f507f0fe73cfb54bda7ba3cc63f35e32610f7e652aac6ecc1\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://7e21c66c715ae01731f12ea62833f2a6ea7f0f2e45e629a6d13d3a1d940a058a\",\"dweb:/ipfs/Qmaqd6Wbwp4ZMDVa7XCHCkJAQK67wHEoUSbLubRxczrpuZ\"]},\"contracts/GovernanceStructs.sol\":{\"keccak256\":\"0x939328beb29604eb15900dd8a587b8da1e1632c27ec25d5392cf14ba47c11522\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://1722efe494b5bc95d52e41f72b70fe3a2c69acfd32fd936ba095571ac5e2e6ca\",\"dweb:/ipfs/QmNwLSPsfxnBAgpcuC4MoKJQhxzxKv3dHZMbNw5XcqREnE\"]},\"contracts/Implementation.sol\":{\"keccak256\":\"0xb9051e711778698ecd7222cb4c15e2a2c05ecafd6517127595627c2aa197627b\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://854f78fba4f0284921170a8807e93c064ad44a771d55fca65c8df76cdee10d16\",\"dweb:/ipfs/QmVTVx6jKcwKpZyQemSvMFEct1x5n5icarRUSyBBxABgAd\"]},\"contracts/Messages.sol\":{\"keccak256\":\"0x425727e4f13c62f6267e455d4f43722c1000f3110c82e7c2cab726e2d714e7be\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://9c6b91b80154027a9f684277f87dde15cef2e8b60bb9043d7c90b77146cab2fb\",\"dweb:/ipfs/QmVmGr28XTQXxDZJaSdxLFxGUuTWtSR9GnusKXxbfC3AwL\"]},\"contracts/Setters.sol\":{\"keccak256\":\"0x339ba60f04adef3327f4632811acbf2e6d6e7e81fea63c681126bcbcc0be726f\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://5472f43ca1f9ca36f37021584feb3debc71d1ff427565705d317a589ca0b6bde\",\"dweb:/ipfs/Qmbw1du9Do54hqKupxVCTvB8wTDceyKpMUXaJ82J3KsToz\"]},\"contracts/State.sol\":{\"keccak256\":\"0x4168d598ce712b25195a385009dea75ac9731526aa1d5d48a579ba6e44bf2d2c\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://90f28a7efff831848231c99e25177e384a52a4d432bfdf45d6fc236e22bad0a5\",\"dweb:/ipfs/QmUusWcAvsJDndX2tJHW9rVpe1f4YpZDnocezCrtW7CjiD\"]},\"contracts/Structs.sol\":{\"keccak256\":\"0xe756fc2afd806d9d739eb14f5e1173b7c28664a7150a4c813b3c803a42ec5806\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://97e896ab5c1e531bcac3618a144fe44dc24f45e5fab6a632817d143889feb862\",\"dweb:/ipfs/QmTaAmtsoKNaKt3aKBr5p9rZWBFjcPbSB6noemyVNJ2XiB\"]},\"contracts/libraries/external/BytesLib.sol\":{\"keccak256\":\"0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014\",\"dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xcbccf806d646bd9e2594650917208245d45998b887d5fc914de424247f5f9f9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4b5f0125f6d8cfa940403990d54dd9921eb339bfdb011c11cb6a17088301ff1\",\"dweb:/ipfs/QmZXzn8XkJjKEyBy3zPqsssQJGqirhgipdGsjQBYMNArZ4\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x5615339d191e77be7e46319b67856f9355786f705b7b3c4a7237ab70c1864ab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c6a52e49bd374890523443ac6e20fa0ca09ff8d65d5adbca6f2c8733758eea\",\"dweb:/ipfs/QmXXccov4bGGVqg6BwYc8QU9JwCNHmVYePj1ZYpgkxTbpF\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x5d15d280d1f868f59a8264dc73f7ea8c51f10d78aac864b2f2ad29412d187ff5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c5c1fe2972d97dca1af03884c78315eb261bb486bacfadd04b0f440fdcfd6e\",\"dweb:/ipfs/QmTNTSdUSzUKWEeTH2A37RDXJ2Xf5jfTTpLuy1oudPPE8N\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldContract",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newContract",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ContractUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "GuardianSetAdded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "consistencyLevel",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogMessagePublished",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "chainId",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "evmChainId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentGuardianSetIndex",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getGuardianSet",
          "outputs": [
            {
              "internalType": "struct Structs.GuardianSet",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address[]",
                  "name": "keys",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32",
                  "name": "expirationTime",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getGuardianSetExpiry",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "governanceActionIsConsumed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "governanceChainId",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "governanceContract",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isFork",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "impl",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInitialized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messageFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "emitter",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nextSequence",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedVM",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "parseAndVerifyVM",
          "outputs": [
            {
              "internalType": "struct Structs.VM",
              "name": "vm",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "timestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint16",
                  "name": "emitterChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes32",
                  "name": "emitterAddress",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sequence",
                  "type": "uint64"
                },
                {
                  "internalType": "uint8",
                  "name": "consistencyLevel",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "payload",
                  "type": "bytes"
                },
                {
                  "internalType": "uint32",
                  "name": "guardianSetIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "struct Structs.Signature[]",
                  "name": "signatures",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "guardianIndex",
                      "type": "uint8"
                    }
                  ]
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedUpgrade",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "parseContractUpgrade",
          "outputs": [
            {
              "internalType": "struct GovernanceStructs.ContractUpgrade",
              "name": "cu",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "module",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "uint16",
                  "name": "chain",
                  "type": "uint16"
                },
                {
                  "internalType": "address",
                  "name": "newContract",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedUpgrade",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "parseGuardianSetUpgrade",
          "outputs": [
            {
              "internalType": "struct GovernanceStructs.GuardianSetUpgrade",
              "name": "gsu",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "module",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "uint16",
                  "name": "chain",
                  "type": "uint16"
                },
                {
                  "internalType": "struct Structs.GuardianSet",
                  "name": "newGuardianSet",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address[]",
                      "name": "keys",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint32",
                      "name": "expirationTime",
                      "type": "uint32"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "newGuardianSetIndex",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedRecoverChainId",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "parseRecoverChainId",
          "outputs": [
            {
              "internalType": "struct GovernanceStructs.RecoverChainId",
              "name": "rci",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "module",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "evmChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint16",
                  "name": "newChainId",
                  "type": "uint16"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedSetMessageFee",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "parseSetMessageFee",
          "outputs": [
            {
              "internalType": "struct GovernanceStructs.SetMessageFee",
              "name": "smf",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "module",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "uint16",
                  "name": "chain",
                  "type": "uint16"
                },
                {
                  "internalType": "uint256",
                  "name": "messageFee",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedTransferFees",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "parseTransferFees",
          "outputs": [
            {
              "internalType": "struct GovernanceStructs.TransferFees",
              "name": "tf",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "module",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "uint16",
                  "name": "chain",
                  "type": "uint16"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "recipient",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "encodedVM",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "parseVM",
          "outputs": [
            {
              "internalType": "struct Structs.VM",
              "name": "vm",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "timestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint16",
                  "name": "emitterChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes32",
                  "name": "emitterAddress",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sequence",
                  "type": "uint64"
                },
                {
                  "internalType": "uint8",
                  "name": "consistencyLevel",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "payload",
                  "type": "bytes"
                },
                {
                  "internalType": "uint32",
                  "name": "guardianSetIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "struct Structs.Signature[]",
                  "name": "signatures",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "guardianIndex",
                      "type": "uint8"
                    }
                  ]
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "nonce",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "payload",
              "type": "bytes"
            },
            {
              "internalType": "uint8",
              "name": "consistencyLevel",
              "type": "uint8"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "publishMessage",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "sequence",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numGuardians",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "quorum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "numSignaturesRequiredForQuorum",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_vm",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitContractUpgrade"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_vm",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitNewGuardianSet"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_vm",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitRecoverChainId"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_vm",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitSetMessageFee"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_vm",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "submitTransferFees"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "struct Structs.Signature[]",
              "name": "signatures",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "guardianIndex",
                  "type": "uint8"
                }
              ]
            },
            {
              "internalType": "struct Structs.GuardianSet",
              "name": "guardianSet",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address[]",
                  "name": "keys",
                  "type": "address[]"
                },
                {
                  "internalType": "uint32",
                  "name": "expirationTime",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "verifySignatures",
          "outputs": [
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Structs.VM",
              "name": "vm",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint8",
                  "name": "version",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "timestamp",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nonce",
                  "type": "uint32"
                },
                {
                  "internalType": "uint16",
                  "name": "emitterChainId",
                  "type": "uint16"
                },
                {
                  "internalType": "bytes32",
                  "name": "emitterAddress",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "sequence",
                  "type": "uint64"
                },
                {
                  "internalType": "uint8",
                  "name": "consistencyLevel",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "payload",
                  "type": "bytes"
                },
                {
                  "internalType": "uint32",
                  "name": "guardianSetIndex",
                  "type": "uint32"
                },
                {
                  "internalType": "struct Structs.Signature[]",
                  "name": "signatures",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "r",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "s",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint8",
                      "name": "v",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint8",
                      "name": "guardianIndex",
                      "type": "uint8"
                    }
                  ]
                },
                {
                  "internalType": "bytes32",
                  "name": "hash",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verifyVM",
          "outputs": [
            {
              "internalType": "bool",
              "name": "valid",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "reason",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "parseAndVerifyVM(bytes)": {
            "details": "parseAndVerifyVM serves to parse an encodedVM and wholy validate it for consumption"
          },
          "parseContractUpgrade(bytes)": {
            "details": "Parse a contract upgrade (action 1) with minimal validation"
          },
          "parseGuardianSetUpgrade(bytes)": {
            "details": "Parse a guardianSet upgrade (action 2) with minimal validation"
          },
          "parseRecoverChainId(bytes)": {
            "details": "Parse a recoverChainId (action 5) with minimal validation"
          },
          "parseSetMessageFee(bytes)": {
            "details": "Parse a setMessageFee (action 3) with minimal validation"
          },
          "parseTransferFees(bytes)": {
            "details": "Parse a transferFees (action 4) with minimal validation"
          },
          "parseVM(bytes)": {
            "details": "parseVM serves to parse an encodedVM into a vm struct  - it intentionally performs no validation functions, it simply parses raw into a struct"
          },
          "quorum(uint256)": {
            "details": "quorum serves solely to determine the number of signatures required to acheive quorum"
          },
          "submitContractUpgrade(bytes)": {
            "details": "Upgrades a contract via Governance VAA/VM"
          },
          "submitNewGuardianSet(bytes)": {
            "details": "Deploys a new `guardianSet` via Governance VAA/VM"
          },
          "submitRecoverChainId(bytes)": {
            "details": "Updates the `chainId` and `evmChainId` on a forked chain via Governance VAA/VM"
          },
          "submitSetMessageFee(bytes)": {
            "details": "Sets a `messageFee` via Governance VAA/VM"
          },
          "submitTransferFees(bytes)": {
            "details": "Submits transfer fees to the recipient via Governance VAA/VM"
          },
          "verifySignatures(bytes32,(bytes32,bytes32,uint8,uint8)[],(address[],uint32))": {
            "details": "verifySignatures serves to validate arbitrary sigatures against an arbitrary guardianSet  - it intentionally does not solve for expectations within guardianSet (you should use verifyVM if you need these protections)  - it intentioanlly does not solve for quorum (you should use verifyVM if you need these protections)  - it intentionally returns true when signatures is an empty set (you should use verifyVM if you need these protections)"
          },
          "verifyVM((uint8,uint32,uint32,uint16,bytes32,uint64,uint8,bytes,uint32,(bytes32,bytes32,uint8,uint8)[],bytes32))": {
            "details": "`verifyVM` serves to validate an arbitrary vm against a valid Guardian set  - it aims to make sure the VM is for a known guardianSet  - it aims to ensure the guardianSet is not expired  - it aims to ensure the VM has reached quorum  - it aims to verify the signatures provided against the guardianSet  - it aims to verify the hash field provided against the contents of the vm"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@solidity-parser/=node_modules/@solidity-parser/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Implementation.sol": "Implementation"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Getters.sol": {
        "keccak256": "0x5a725b038bb92c981d20d501623194a9f787e5a69b15d64509293356c96d829e",
        "urls": [
          "bzz-raw://d7143b8f62c85af4e0c8c38133221827ded9784005428680947a05c76d23221f",
          "dweb:/ipfs/QmXyUMHqjcZ2uE2oHDPYfMHxb85P4zUrZN2MmFWdg2u9Di"
        ],
        "license": "Apache 2"
      },
      "contracts/Governance.sol": {
        "keccak256": "0xbcc72896cbe67f8f507f0fe73cfb54bda7ba3cc63f35e32610f7e652aac6ecc1",
        "urls": [
          "bzz-raw://7e21c66c715ae01731f12ea62833f2a6ea7f0f2e45e629a6d13d3a1d940a058a",
          "dweb:/ipfs/Qmaqd6Wbwp4ZMDVa7XCHCkJAQK67wHEoUSbLubRxczrpuZ"
        ],
        "license": "Apache 2"
      },
      "contracts/GovernanceStructs.sol": {
        "keccak256": "0x939328beb29604eb15900dd8a587b8da1e1632c27ec25d5392cf14ba47c11522",
        "urls": [
          "bzz-raw://1722efe494b5bc95d52e41f72b70fe3a2c69acfd32fd936ba095571ac5e2e6ca",
          "dweb:/ipfs/QmNwLSPsfxnBAgpcuC4MoKJQhxzxKv3dHZMbNw5XcqREnE"
        ],
        "license": "Apache 2"
      },
      "contracts/Implementation.sol": {
        "keccak256": "0xb9051e711778698ecd7222cb4c15e2a2c05ecafd6517127595627c2aa197627b",
        "urls": [
          "bzz-raw://854f78fba4f0284921170a8807e93c064ad44a771d55fca65c8df76cdee10d16",
          "dweb:/ipfs/QmVTVx6jKcwKpZyQemSvMFEct1x5n5icarRUSyBBxABgAd"
        ],
        "license": "Apache 2"
      },
      "contracts/Messages.sol": {
        "keccak256": "0x425727e4f13c62f6267e455d4f43722c1000f3110c82e7c2cab726e2d714e7be",
        "urls": [
          "bzz-raw://9c6b91b80154027a9f684277f87dde15cef2e8b60bb9043d7c90b77146cab2fb",
          "dweb:/ipfs/QmVmGr28XTQXxDZJaSdxLFxGUuTWtSR9GnusKXxbfC3AwL"
        ],
        "license": "Apache 2"
      },
      "contracts/Setters.sol": {
        "keccak256": "0x339ba60f04adef3327f4632811acbf2e6d6e7e81fea63c681126bcbcc0be726f",
        "urls": [
          "bzz-raw://5472f43ca1f9ca36f37021584feb3debc71d1ff427565705d317a589ca0b6bde",
          "dweb:/ipfs/Qmbw1du9Do54hqKupxVCTvB8wTDceyKpMUXaJ82J3KsToz"
        ],
        "license": "Apache 2"
      },
      "contracts/State.sol": {
        "keccak256": "0x4168d598ce712b25195a385009dea75ac9731526aa1d5d48a579ba6e44bf2d2c",
        "urls": [
          "bzz-raw://90f28a7efff831848231c99e25177e384a52a4d432bfdf45d6fc236e22bad0a5",
          "dweb:/ipfs/QmUusWcAvsJDndX2tJHW9rVpe1f4YpZDnocezCrtW7CjiD"
        ],
        "license": "Apache 2"
      },
      "contracts/Structs.sol": {
        "keccak256": "0xe756fc2afd806d9d739eb14f5e1173b7c28664a7150a4c813b3c803a42ec5806",
        "urls": [
          "bzz-raw://97e896ab5c1e531bcac3618a144fe44dc24f45e5fab6a632817d143889feb862",
          "dweb:/ipfs/QmTaAmtsoKNaKt3aKBr5p9rZWBFjcPbSB6noemyVNJ2XiB"
        ],
        "license": "Apache 2"
      },
      "contracts/libraries/external/BytesLib.sol": {
        "keccak256": "0xf75784dfc94ea43668eb195d5690a1dde1b6eda62017e73a3899721583821d29",
        "urls": [
          "bzz-raw://ca16cef8b94f3ac75d376489a668618f6c4595a906b939d674a883f4bf426014",
          "dweb:/ipfs/QmceGU7qhyFLSejaj6i4dEtMzXDCSF3aYDtW1UeKjXQaRn"
        ],
        "license": "Unlicense"
      },
      "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0xcbccf806d646bd9e2594650917208245d45998b887d5fc914de424247f5f9f9d",
        "urls": [
          "bzz-raw://c4b5f0125f6d8cfa940403990d54dd9921eb339bfdb011c11cb6a17088301ff1",
          "dweb:/ipfs/QmZXzn8XkJjKEyBy3zPqsssQJGqirhgipdGsjQBYMNArZ4"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0x5615339d191e77be7e46319b67856f9355786f705b7b3c4a7237ab70c1864ab1",
        "urls": [
          "bzz-raw://b7c6a52e49bd374890523443ac6e20fa0ca09ff8d65d5adbca6f2c8733758eea",
          "dweb:/ipfs/QmXXccov4bGGVqg6BwYc8QU9JwCNHmVYePj1ZYpgkxTbpF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a",
        "urls": [
          "bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e",
          "dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x5d15d280d1f868f59a8264dc73f7ea8c51f10d78aac864b2f2ad29412d187ff5",
        "urls": [
          "bzz-raw://d7c5c1fe2972d97dca1af03884c78315eb261bb486bacfadd04b0f440fdcfd6e",
          "dweb:/ipfs/QmTNTSdUSzUKWEeTH2A37RDXJ2Xf5jfTTpLuy1oudPPE8N"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Implementation.sol",
    "id": 1547,
    "exportedSymbols": {
      "Address": [
        69288
      ],
      "BytesLib": [
        11889
      ],
      "ERC1967Upgrade": [
        67773
      ],
      "Events": [
        2500
      ],
      "Getters": [
        136
      ],
      "Governance": [
        709
      ],
      "GovernanceStructs": [
        1257
      ],
      "IBeacon": [
        67917
      ],
      "Implementation": [
        1546
      ],
      "Messages": [
        2146
      ],
      "Setters": [
        2384
      ],
      "State": [
        2534
      ],
      "Storage": [
        2530
      ],
      "StorageSlot": [
        69555
      ],
      "Structs": [
        2584
      ]
    },
    "nodeType": "SourceUnit",
    "src": "70:2970:3",
    "nodes": [
      {
        "id": 1259,
        "nodeType": "PragmaDirective",
        "src": "70:23:3",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 1260,
        "nodeType": "PragmaDirective",
        "src": "94:33:3",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 1261,
        "nodeType": "ImportDirective",
        "src": "129:26:3",
        "nodes": [],
        "absolutePath": "contracts/Governance.sol",
        "file": "./Governance.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1547,
        "sourceUnit": 710,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1262,
        "nodeType": "ImportDirective",
        "src": "157:66:3",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1547,
        "sourceUnit": 67774,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1546,
        "nodeType": "ContractDefinition",
        "src": "225:2814:3",
        "nodes": [
          {
            "id": 1276,
            "nodeType": "EventDefinition",
            "src": "269:120:3",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2",
            "name": "LogMessagePublished",
            "nameLocation": "275:19:3",
            "parameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "311:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "295:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "295:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1268,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "326:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "319:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1267,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1270,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "343:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "336:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "336:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1272,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "356:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "350:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1271,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1274,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "consistencyLevel",
                  "nameLocation": "371:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "365:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "365:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:94:3"
            }
          },
          {
            "id": 1313,
            "nodeType": "FunctionDefinition",
            "src": "459:397:3",
            "nodes": [],
            "body": {
              "id": 1312,
              "nodeType": "Block",
              "src": "614:242:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1288,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "653:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "657:5:3",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "653:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1290,
                            "name": "messageFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "666:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "666:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "653:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420666565",
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "680:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c0fbe7a6dc850cdb1070a12c713e7707dbda2f93b5aca0486b431cc7cfdc034",
                          "typeString": "literal_string \"invalid fee\""
                        },
                        "value": "invalid fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c0fbe7a6dc850cdb1070a12c713e7707dbda2f93b5aca0486b431cc7cfdc034",
                          "typeString": "literal_string \"invalid fee\""
                        }
                      ],
                      "id": 1287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "645:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1295,
                  "nodeType": "ExpressionStatement",
                  "src": "645:49:3"
                },
                {
                  "expression": {
                    "id": 1301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1296,
                      "name": "sequence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1285,
                      "src": "705:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1298,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "728:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "732:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "728:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1297,
                        "name": "useSequence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1334,
                        "src": "716:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint64_$",
                          "typeString": "function (address) returns (uint64)"
                        }
                      },
                      "id": 1300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "716:23:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "705:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1302,
                  "nodeType": "ExpressionStatement",
                  "src": "705:34:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1304,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "794:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "798:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "794:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1306,
                        "name": "sequence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1285,
                        "src": "806:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 1307,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1278,
                        "src": "816:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 1308,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "823:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 1309,
                        "name": "consistencyLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "832:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1303,
                      "name": "LogMessagePublished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1276,
                      "src": "774:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint64_$_t_uint32_$_t_bytes_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (address,uint64,uint32,bytes memory,uint8)"
                      }
                    },
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "774:75:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1311,
                  "nodeType": "EmitStatement",
                  "src": "769:80:3"
                }
              ]
            },
            "functionSelector": "b19a437e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "publishMessage",
            "nameLocation": "468:14:3",
            "parameters": {
              "id": 1283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "499:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "492:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1277,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "492:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1280,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "527:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "514:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1282,
                  "mutability": "mutable",
                  "name": "consistencyLevel",
                  "nameLocation": "550:16:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "544:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1281,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "544:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "482:90:3"
            },
            "returnParameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1285,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "604:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "597:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "596:17:3"
            },
            "scope": 1546,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1334,
            "nodeType": "FunctionDefinition",
            "src": "862:170:3",
            "nodes": [],
            "body": {
              "id": 1333,
              "nodeType": "Block",
              "src": "935:97:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1320,
                      "name": "sequence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1318,
                      "src": "945:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1322,
                          "name": "emitter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1315,
                          "src": "969:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1321,
                        "name": "nextSequence",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "956:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint64_$",
                          "typeString": "function (address) view returns (uint64)"
                        }
                      },
                      "id": 1323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "956:21:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "945:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 1325,
                  "nodeType": "ExpressionStatement",
                  "src": "945:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1327,
                        "name": "emitter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1315,
                        "src": "1003:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1328,
                          "name": "sequence",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1318,
                          "src": "1012:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1023:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1012:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 1326,
                      "name": "setNextSequence",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2363,
                      "src": "987:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (address,uint64)"
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "987:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1332,
                  "nodeType": "ExpressionStatement",
                  "src": "987:38:3"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "useSequence",
            "nameLocation": "871:11:3",
            "parameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "emitter",
                  "nameLocation": "891:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "883:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "882:17:3"
            },
            "returnParameters": {
              "id": 1319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1318,
                  "mutability": "mutable",
                  "name": "sequence",
                  "nameLocation": "925:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "918:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1317,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "917:17:3"
            },
            "scope": 1546,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1507,
            "nodeType": "FunctionDefinition",
            "src": "1038:1585:3",
            "nodes": [],
            "body": {
              "id": 1506,
              "nodeType": "Block",
              "src": "1087:1536:3",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1339,
                        "name": "evmChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "1169:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1169:12:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1185:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1169:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1505,
                  "nodeType": "IfStatement",
                  "src": "1165:1452:3",
                  "trueBody": {
                    "id": 1504,
                    "nodeType": "Block",
                    "src": "1188:1429:3",
                    "statements": [
                      {
                        "assignments": [
                          1344
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1344,
                            "mutability": "mutable",
                            "name": "evmChainId",
                            "nameLocation": "1210:10:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1504,
                            "src": "1202:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1343,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1202:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1345,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1202:18:3"
                      },
                      {
                        "assignments": [
                          1347
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1347,
                            "mutability": "mutable",
                            "name": "chain",
                            "nameLocation": "1241:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1504,
                            "src": "1234:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "typeName": {
                              "id": 1346,
                              "name": "uint16",
                              "nodeType": "ElementaryTypeName",
                              "src": "1234:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1350,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1348,
                            "name": "chainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 72,
                            "src": "1249:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint16_$",
                              "typeString": "function () view returns (uint16)"
                            }
                          },
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1249:9:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1234:24:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1351,
                            "name": "chain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1347,
                            "src": "1340:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 1352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1349:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1340:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 1361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1359,
                              "name": "chain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1347,
                              "src": "1415:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 1360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1424:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "1415:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              "id": 1369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1367,
                                "name": "chain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "1485:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "35",
                                "id": 1368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1494:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              "src": "1485:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                },
                                "id": 1377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1375,
                                  "name": "chain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1347,
                                  "src": "1559:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "36",
                                  "id": 1376,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1568:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                "src": "1559:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint16",
                                    "typeString": "uint16"
                                  },
                                  "id": 1385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1383,
                                    "name": "chain",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1347,
                                    "src": "1635:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "37",
                                    "id": 1384,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1644:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_7_by_1",
                                      "typeString": "int_const 7"
                                    },
                                    "value": "7"
                                  },
                                  "src": "1635:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint16",
                                      "typeString": "uint16"
                                    },
                                    "id": 1393,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1391,
                                      "name": "chain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1347,
                                      "src": "1707:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "39",
                                      "id": 1392,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1716:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_9_by_1",
                                        "typeString": "int_const 9"
                                      },
                                      "value": "9"
                                    },
                                    "src": "1707:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint16",
                                        "typeString": "uint16"
                                      },
                                      "id": 1401,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1399,
                                        "name": "chain",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1347,
                                        "src": "1780:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "3130",
                                        "id": 1400,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1789:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "src": "1780:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint16",
                                          "typeString": "uint16"
                                        },
                                        "id": 1409,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1407,
                                          "name": "chain",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1347,
                                          "src": "1853:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "3131",
                                          "id": 1408,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1862:2:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_11_by_1",
                                            "typeString": "int_const 11"
                                          },
                                          "value": "11"
                                        },
                                        "src": "1853:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseBody": {
                                        "condition": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          },
                                          "id": 1417,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1415,
                                            "name": "chain",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1347,
                                            "src": "1926:5:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint16",
                                              "typeString": "uint16"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "==",
                                          "rightExpression": {
                                            "hexValue": "3132",
                                            "id": 1416,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1935:2:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_12_by_1",
                                              "typeString": "int_const 12"
                                            },
                                            "value": "12"
                                          },
                                          "src": "1926:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "falseBody": {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint16",
                                              "typeString": "uint16"
                                            },
                                            "id": 1425,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1423,
                                              "name": "chain",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1347,
                                              "src": "1998:5:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint16",
                                                "typeString": "uint16"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "hexValue": "3133",
                                              "id": 1424,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2007:2:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_13_by_1",
                                                "typeString": "int_const 13"
                                              },
                                              "value": "13"
                                            },
                                            "src": "1998:11:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "falseBody": {
                                            "condition": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint16",
                                                "typeString": "uint16"
                                              },
                                              "id": 1433,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1431,
                                                "name": "chain",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1347,
                                                "src": "2071:5:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "==",
                                              "rightExpression": {
                                                "hexValue": "3134",
                                                "id": 1432,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2080:2:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_14_by_1",
                                                  "typeString": "int_const 14"
                                                },
                                                "value": "14"
                                              },
                                              "src": "2071:11:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                              }
                                            },
                                            "falseBody": {
                                              "condition": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                },
                                                "id": 1441,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 1439,
                                                  "name": "chain",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1347,
                                                  "src": "2142:5:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint16",
                                                    "typeString": "uint16"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "hexValue": "3136",
                                                  "id": 1440,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "2151:2:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_16_by_1",
                                                    "typeString": "int_const 16"
                                                  },
                                                  "value": "16"
                                                },
                                                "src": "2142:11:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseBody": {
                                                "condition": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint16",
                                                    "typeString": "uint16"
                                                  },
                                                  "id": 1449,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 1447,
                                                    "name": "chain",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1347,
                                                    "src": "2217:5:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint16",
                                                      "typeString": "uint16"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "==",
                                                  "rightExpression": {
                                                    "hexValue": "3137",
                                                    "id": 1448,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2226:2:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_17_by_1",
                                                      "typeString": "int_const 17"
                                                    },
                                                    "value": "17"
                                                  },
                                                  "src": "2217:11:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                  }
                                                },
                                                "falseBody": {
                                                  "condition": {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint16",
                                                      "typeString": "uint16"
                                                    },
                                                    "id": 1457,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 1455,
                                                      "name": "chain",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1347,
                                                      "src": "2288:5:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint16",
                                                        "typeString": "uint16"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "==",
                                                    "rightExpression": {
                                                      "hexValue": "3233",
                                                      "id": 1456,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "2297:2:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_23_by_1",
                                                        "typeString": "int_const 23"
                                                      },
                                                      "value": "23"
                                                    },
                                                    "src": "2288:11:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bool",
                                                      "typeString": "bool"
                                                    }
                                                  },
                                                  "falseBody": {
                                                    "condition": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint16",
                                                        "typeString": "uint16"
                                                      },
                                                      "id": 1465,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 1463,
                                                        "name": "chain",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1347,
                                                        "src": "2363:5:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint16",
                                                          "typeString": "uint16"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "==",
                                                      "rightExpression": {
                                                        "hexValue": "3234",
                                                        "id": 1464,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2372:2:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_24_by_1",
                                                          "typeString": "int_const 24"
                                                        },
                                                        "value": "24"
                                                      },
                                                      "src": "2363:11:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                      }
                                                    },
                                                    "falseBody": {
                                                      "condition": {
                                                        "commonType": {
                                                          "typeIdentifier": "t_uint16",
                                                          "typeString": "uint16"
                                                        },
                                                        "id": 1473,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                          "id": 1471,
                                                          "name": "chain",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1347,
                                                          "src": "2438:5:3",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint16",
                                                            "typeString": "uint16"
                                                          }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "==",
                                                        "rightExpression": {
                                                          "hexValue": "3235",
                                                          "id": 1472,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "2447:2:3",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_25_by_1",
                                                            "typeString": "int_const 25"
                                                          },
                                                          "value": "25"
                                                        },
                                                        "src": "2438:11:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_bool",
                                                          "typeString": "bool"
                                                        }
                                                      },
                                                      "falseBody": {
                                                        "id": 1483,
                                                        "nodeType": "Block",
                                                        "src": "2507:60:3",
                                                        "statements": [
                                                          {
                                                            "expression": {
                                                              "arguments": [
                                                                {
                                                                  "hexValue": "556e6b6e6f776e20636861696e2069642e",
                                                                  "id": 1480,
                                                                  "isConstant": false,
                                                                  "isLValue": false,
                                                                  "isPure": true,
                                                                  "kind": "string",
                                                                  "lValueRequested": false,
                                                                  "nodeType": "Literal",
                                                                  "src": "2532:19:3",
                                                                  "typeDescriptions": {
                                                                    "typeIdentifier": "t_stringliteral_4596325520eaad04652147e5ee2abb3aaa82d3e986042c773958da07cefcb291",
                                                                    "typeString": "literal_string \"Unknown chain id.\""
                                                                  },
                                                                  "value": "Unknown chain id."
                                                                }
                                                              ],
                                                              "expression": {
                                                                "argumentTypes": [
                                                                  {
                                                                    "typeIdentifier": "t_stringliteral_4596325520eaad04652147e5ee2abb3aaa82d3e986042c773958da07cefcb291",
                                                                    "typeString": "literal_string \"Unknown chain id.\""
                                                                  }
                                                                ],
                                                                "id": 1479,
                                                                "name": "revert",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [
                                                                  -19,
                                                                  -19
                                                                ],
                                                                "referencedDeclaration": -19,
                                                                "src": "2525:6:3",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                                  "typeString": "function (string memory) pure"
                                                                }
                                                              },
                                                              "id": 1481,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "kind": "functionCall",
                                                              "lValueRequested": false,
                                                              "nameLocations": [],
                                                              "names": [],
                                                              "nodeType": "FunctionCall",
                                                              "src": "2525:27:3",
                                                              "tryCall": false,
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_tuple$__$",
                                                                "typeString": "tuple()"
                                                              }
                                                            },
                                                            "id": 1482,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "2525:27:3"
                                                          }
                                                        ]
                                                      },
                                                      "id": 1484,
                                                      "nodeType": "IfStatement",
                                                      "src": "2434:133:3",
                                                      "trueBody": {
                                                        "id": 1478,
                                                        "nodeType": "Block",
                                                        "src": "2451:50:3",
                                                        "statements": [
                                                          {
                                                            "expression": {
                                                              "id": 1476,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": false,
                                                              "lValueRequested": false,
                                                              "leftHandSide": {
                                                                "id": 1474,
                                                                "name": "evmChainId",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 1344,
                                                                "src": "2453:10:3",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_uint256",
                                                                  "typeString": "uint256"
                                                                }
                                                              },
                                                              "nodeType": "Assignment",
                                                              "operator": "=",
                                                              "rightHandSide": {
                                                                "hexValue": "313030",
                                                                "id": 1475,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2466:3:3",
                                                                "typeDescriptions": {
                                                                  "typeIdentifier": "t_rational_100_by_1",
                                                                  "typeString": "int_const 100"
                                                                },
                                                                "value": "100"
                                                              },
                                                              "src": "2453:16:3",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "id": 1477,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "2453:16:3"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "id": 1485,
                                                    "nodeType": "IfStatement",
                                                    "src": "2359:208:3",
                                                    "trueBody": {
                                                      "id": 1470,
                                                      "nodeType": "Block",
                                                      "src": "2376:52:3",
                                                      "statements": [
                                                        {
                                                          "expression": {
                                                            "id": 1468,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftHandSide": {
                                                              "id": 1466,
                                                              "name": "evmChainId",
                                                              "nodeType": "Identifier",
                                                              "overloadedDeclarations": [],
                                                              "referencedDeclaration": 1344,
                                                              "src": "2378:10:3",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                              }
                                                            },
                                                            "nodeType": "Assignment",
                                                            "operator": "=",
                                                            "rightHandSide": {
                                                              "hexValue": "3130",
                                                              "id": 1467,
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "kind": "number",
                                                              "lValueRequested": false,
                                                              "nodeType": "Literal",
                                                              "src": "2391:2:3",
                                                              "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_10_by_1",
                                                                "typeString": "int_const 10"
                                                              },
                                                              "value": "10"
                                                            },
                                                            "src": "2378:15:3",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "id": 1469,
                                                          "nodeType": "ExpressionStatement",
                                                          "src": "2378:15:3"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "id": 1486,
                                                  "nodeType": "IfStatement",
                                                  "src": "2284:283:3",
                                                  "trueBody": {
                                                    "id": 1462,
                                                    "nodeType": "Block",
                                                    "src": "2301:52:3",
                                                    "statements": [
                                                      {
                                                        "expression": {
                                                          "id": 1460,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "leftHandSide": {
                                                            "id": 1458,
                                                            "name": "evmChainId",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1344,
                                                            "src": "2303:10:3",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "nodeType": "Assignment",
                                                          "operator": "=",
                                                          "rightHandSide": {
                                                            "hexValue": "3432313631",
                                                            "id": 1459,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2316:5:3",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_rational_42161_by_1",
                                                              "typeString": "int_const 42161"
                                                            },
                                                            "value": "42161"
                                                          },
                                                          "src": "2303:18:3",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "id": 1461,
                                                        "nodeType": "ExpressionStatement",
                                                        "src": "2303:18:3"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "id": 1487,
                                                "nodeType": "IfStatement",
                                                "src": "2213:354:3",
                                                "trueBody": {
                                                  "id": 1454,
                                                  "nodeType": "Block",
                                                  "src": "2230:48:3",
                                                  "statements": [
                                                    {
                                                      "expression": {
                                                        "id": 1452,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftHandSide": {
                                                          "id": 1450,
                                                          "name": "evmChainId",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1344,
                                                          "src": "2232:10:3",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "nodeType": "Assignment",
                                                        "operator": "=",
                                                        "rightHandSide": {
                                                          "hexValue": "323435303232393334",
                                                          "id": 1451,
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "kind": "number",
                                                          "lValueRequested": false,
                                                          "nodeType": "Literal",
                                                          "src": "2245:9:3",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_245022934_by_1",
                                                            "typeString": "int_const 245022934"
                                                          },
                                                          "value": "245022934"
                                                        },
                                                        "src": "2232:22:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "id": 1453,
                                                      "nodeType": "ExpressionStatement",
                                                      "src": "2232:22:3"
                                                    }
                                                  ]
                                                }
                                              },
                                              "id": 1488,
                                              "nodeType": "IfStatement",
                                              "src": "2138:429:3",
                                              "trueBody": {
                                                "id": 1446,
                                                "nodeType": "Block",
                                                "src": "2155:52:3",
                                                "statements": [
                                                  {
                                                    "expression": {
                                                      "id": 1444,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftHandSide": {
                                                        "id": 1442,
                                                        "name": "evmChainId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1344,
                                                        "src": "2157:10:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "Assignment",
                                                      "operator": "=",
                                                      "rightHandSide": {
                                                        "hexValue": "31323834",
                                                        "id": 1443,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2170:4:3",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_1284_by_1",
                                                          "typeString": "int_const 1284"
                                                        },
                                                        "value": "1284"
                                                      },
                                                      "src": "2157:17:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "id": 1445,
                                                    "nodeType": "ExpressionStatement",
                                                    "src": "2157:17:3"
                                                  }
                                                ]
                                              }
                                            },
                                            "id": 1489,
                                            "nodeType": "IfStatement",
                                            "src": "2067:500:3",
                                            "trueBody": {
                                              "id": 1438,
                                              "nodeType": "Block",
                                              "src": "2084:48:3",
                                              "statements": [
                                                {
                                                  "expression": {
                                                    "id": 1436,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                      "id": 1434,
                                                      "name": "evmChainId",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1344,
                                                      "src": "2086:10:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                      "hexValue": "3432323230",
                                                      "id": 1435,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "kind": "number",
                                                      "lValueRequested": false,
                                                      "nodeType": "Literal",
                                                      "src": "2099:5:3",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_42220_by_1",
                                                        "typeString": "int_const 42220"
                                                      },
                                                      "value": "42220"
                                                    },
                                                    "src": "2086:18:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "id": 1437,
                                                  "nodeType": "ExpressionStatement",
                                                  "src": "2086:18:3"
                                                }
                                              ]
                                            }
                                          },
                                          "id": 1490,
                                          "nodeType": "IfStatement",
                                          "src": "1994:573:3",
                                          "trueBody": {
                                            "id": 1430,
                                            "nodeType": "Block",
                                            "src": "2011:50:3",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 1428,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "id": 1426,
                                                    "name": "evmChainId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1344,
                                                    "src": "2013:10:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "hexValue": "38323137",
                                                    "id": 1427,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2026:4:3",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_8217_by_1",
                                                      "typeString": "int_const 8217"
                                                    },
                                                    "value": "8217"
                                                  },
                                                  "src": "2013:17:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1429,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2013:17:3"
                                              }
                                            ]
                                          }
                                        },
                                        "id": 1491,
                                        "nodeType": "IfStatement",
                                        "src": "1922:645:3",
                                        "trueBody": {
                                          "id": 1422,
                                          "nodeType": "Block",
                                          "src": "1939:49:3",
                                          "statements": [
                                            {
                                              "expression": {
                                                "id": 1420,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftHandSide": {
                                                  "id": 1418,
                                                  "name": "evmChainId",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1344,
                                                  "src": "1941:10:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "Assignment",
                                                "operator": "=",
                                                "rightHandSide": {
                                                  "hexValue": "373837",
                                                  "id": 1419,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "1954:3:3",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_787_by_1",
                                                    "typeString": "int_const 787"
                                                  },
                                                  "value": "787"
                                                },
                                                "src": "1941:16:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "id": 1421,
                                              "nodeType": "ExpressionStatement",
                                              "src": "1941:16:3"
                                            }
                                          ]
                                        }
                                      },
                                      "id": 1492,
                                      "nodeType": "IfStatement",
                                      "src": "1849:718:3",
                                      "trueBody": {
                                        "id": 1414,
                                        "nodeType": "Block",
                                        "src": "1866:50:3",
                                        "statements": [
                                          {
                                            "expression": {
                                              "id": 1412,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "id": 1410,
                                                "name": "evmChainId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1344,
                                                "src": "1868:10:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "hexValue": "363836",
                                                "id": 1411,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1881:3:3",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_686_by_1",
                                                  "typeString": "int_const 686"
                                                },
                                                "value": "686"
                                              },
                                              "src": "1868:16:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 1413,
                                            "nodeType": "ExpressionStatement",
                                            "src": "1868:16:3"
                                          }
                                        ]
                                      }
                                    },
                                    "id": 1493,
                                    "nodeType": "IfStatement",
                                    "src": "1776:791:3",
                                    "trueBody": {
                                      "id": 1406,
                                      "nodeType": "Block",
                                      "src": "1793:50:3",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1404,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1402,
                                              "name": "evmChainId",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1344,
                                              "src": "1795:10:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "hexValue": "323530",
                                              "id": 1403,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1808:3:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_250_by_1",
                                                "typeString": "int_const 250"
                                              },
                                              "value": "250"
                                            },
                                            "src": "1795:16:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1405,
                                          "nodeType": "ExpressionStatement",
                                          "src": "1795:16:3"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 1494,
                                  "nodeType": "IfStatement",
                                  "src": "1703:864:3",
                                  "trueBody": {
                                    "id": 1398,
                                    "nodeType": "Block",
                                    "src": "1720:50:3",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 1396,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 1394,
                                            "name": "evmChainId",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1344,
                                            "src": "1722:10:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "hexValue": "31333133313631353534",
                                            "id": 1395,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1735:10:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1313161554_by_1",
                                              "typeString": "int_const 1313161554"
                                            },
                                            "value": "1313161554"
                                          },
                                          "src": "1722:23:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1397,
                                        "nodeType": "ExpressionStatement",
                                        "src": "1722:23:3"
                                      }
                                    ]
                                  }
                                },
                                "id": 1495,
                                "nodeType": "IfStatement",
                                "src": "1631:936:3",
                                "trueBody": {
                                  "id": 1390,
                                  "nodeType": "Block",
                                  "src": "1648:49:3",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 1388,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 1386,
                                          "name": "evmChainId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1344,
                                          "src": "1650:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "hexValue": "3432323632",
                                          "id": 1387,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1663:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_42262_by_1",
                                            "typeString": "int_const 42262"
                                          },
                                          "value": "42262"
                                        },
                                        "src": "1650:18:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1389,
                                      "nodeType": "ExpressionStatement",
                                      "src": "1650:18:3"
                                    }
                                  ]
                                }
                              },
                              "id": 1496,
                              "nodeType": "IfStatement",
                              "src": "1555:1012:3",
                              "trueBody": {
                                "id": 1382,
                                "nodeType": "Block",
                                "src": "1572:53:3",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1380,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1378,
                                        "name": "evmChainId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1344,
                                        "src": "1574:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "3433313134",
                                        "id": 1379,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1587:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_43114_by_1",
                                          "typeString": "int_const 43114"
                                        },
                                        "value": "43114"
                                      },
                                      "src": "1574:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1381,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1574:18:3"
                                  }
                                ]
                              }
                            },
                            "id": 1497,
                            "nodeType": "IfStatement",
                            "src": "1481:1086:3",
                            "trueBody": {
                              "id": 1374,
                              "nodeType": "Block",
                              "src": "1498:51:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1372,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1370,
                                      "name": "evmChainId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1344,
                                      "src": "1500:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "313337",
                                      "id": 1371,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1513:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_137_by_1",
                                        "typeString": "int_const 137"
                                      },
                                      "value": "137"
                                    },
                                    "src": "1500:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1373,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1500:16:3"
                                }
                              ]
                            }
                          },
                          "id": 1498,
                          "nodeType": "IfStatement",
                          "src": "1411:1156:3",
                          "trueBody": {
                            "id": 1366,
                            "nodeType": "Block",
                            "src": "1428:47:3",
                            "statements": [
                              {
                                "expression": {
                                  "id": 1364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1362,
                                    "name": "evmChainId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1344,
                                    "src": "1430:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "3536",
                                    "id": 1363,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1443:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_56_by_1",
                                      "typeString": "int_const 56"
                                    },
                                    "value": "56"
                                  },
                                  "src": "1430:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1365,
                                "nodeType": "ExpressionStatement",
                                "src": "1430:15:3"
                              }
                            ]
                          }
                        },
                        "id": 1499,
                        "nodeType": "IfStatement",
                        "src": "1329:1238:3",
                        "trueBody": {
                          "id": 1358,
                          "nodeType": "Block",
                          "src": "1353:52:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 1356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1354,
                                  "name": "evmChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1344,
                                  "src": "1355:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 1355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1368:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1355:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1357,
                              "nodeType": "ExpressionStatement",
                              "src": "1355:14:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1501,
                              "name": "evmChainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1344,
                              "src": "2595:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1500,
                            "name": "setEvmChainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2383,
                            "src": "2581:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2581:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1503,
                        "nodeType": "ExpressionStatement",
                        "src": "2581:25:3"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1337,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1336,
                  "name": "initializer",
                  "nameLocations": [
                    "1060:11:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1529,
                  "src": "1060:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1060:11:3"
              }
            ],
            "name": "initialize",
            "nameLocation": "1047:10:3",
            "parameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:2:3"
            },
            "returnParameters": {
              "id": 1338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:0:3"
            },
            "scope": 1546,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 1529,
            "nodeType": "ModifierDefinition",
            "src": "2629:260:3",
            "nodes": [],
            "body": {
              "id": 1528,
              "nodeType": "Block",
              "src": "2652:237:3",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1510,
                      "mutability": "mutable",
                      "name": "implementation",
                      "nameLocation": "2670:14:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1528,
                      "src": "2662:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1509,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2662:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1514,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1511,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67773,
                        "src": "2687:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$67773_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2702:18:3",
                      "memberName": "_getImplementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67455,
                      "src": "2687:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 1513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2687:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2662:60:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2754:30:3",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1517,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1510,
                              "src": "2769:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1516,
                            "name": "isInitialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "2755:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 1518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2755:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920696e697469616c697a6564",
                        "id": 1520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2798:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6fad3ee6d344e662108f49bced409fae87c3af64246556bdd23a34dddc7e1adc",
                          "typeString": "literal_string \"already initialized\""
                        },
                        "value": "already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6fad3ee6d344e662108f49bced409fae87c3af64246556bdd23a34dddc7e1adc",
                          "typeString": "literal_string \"already initialized\""
                        }
                      ],
                      "id": 1515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2733:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2733:96:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1522,
                  "nodeType": "ExpressionStatement",
                  "src": "2733:96:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1524,
                        "name": "implementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1510,
                        "src": "2855:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1523,
                      "name": "setInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2279,
                      "src": "2840:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1526,
                  "nodeType": "ExpressionStatement",
                  "src": "2840:30:3"
                },
                {
                  "id": 1527,
                  "nodeType": "PlaceholderStatement",
                  "src": "2881:1:3"
                }
              ]
            },
            "name": "initializer",
            "nameLocation": "2638:11:3",
            "parameters": {
              "id": 1508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2649:2:3"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1537,
            "nodeType": "FunctionDefinition",
            "src": "2895:52:3",
            "nodes": [],
            "body": {
              "id": 1536,
              "nodeType": "Block",
              "src": "2923:24:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "756e737570706f72746564",
                        "id": 1533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2931:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed5c569bbf054f1df216af14e404e280cd3aa22c18960146a399c062716f13a1",
                          "typeString": "literal_string \"unsupported\""
                        },
                        "value": "unsupported"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ed5c569bbf054f1df216af14e404e280cd3aa22c18960146a399c062716f13a1",
                          "typeString": "literal_string \"unsupported\""
                        }
                      ],
                      "id": 1532,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2924:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2924:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:21:3"
                }
              ]
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2903:2:3"
            },
            "returnParameters": {
              "id": 1531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2923:0:3"
            },
            "scope": 1546,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1545,
            "nodeType": "FunctionDefinition",
            "src": "2953:84:3",
            "nodes": [],
            "body": {
              "id": 1544,
              "nodeType": "Block",
              "src": "2980:57:3",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74686520576f726d686f6c6520636f6e747261637420646f6573206e6f742061636365707420617373657473",
                        "id": 1541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2988:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c4ee901c1e2f84ddf87af999e7150640d0e973b1c7142df166527c088799e14",
                          "typeString": "literal_string \"the Wormhole contract does not accept assets\""
                        },
                        "value": "the Wormhole contract does not accept assets"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4c4ee901c1e2f84ddf87af999e7150640d0e973b1c7142df166527c088799e14",
                          "typeString": "literal_string \"the Wormhole contract does not accept assets\""
                        }
                      ],
                      "id": 1540,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "2981:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2981:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1543,
                  "nodeType": "ExpressionStatement",
                  "src": "2981:54:3"
                }
              ]
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2960:2:3"
            },
            "returnParameters": {
              "id": 1539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2980:0:3"
            },
            "scope": 1546,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1263,
              "name": "Governance",
              "nameLocations": [
                "252:10:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 709,
              "src": "252:10:3"
            },
            "id": 1264,
            "nodeType": "InheritanceSpecifier",
            "src": "252:10:3"
          }
        ],
        "canonicalName": "Implementation",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1546,
          709,
          67773,
          2384,
          2146,
          136,
          2534,
          1257
        ],
        "name": "Implementation",
        "nameLocation": "234:14:3",
        "scope": 1547,
        "usedErrors": []
      }
    ],
    "license": "Apache 2"
  },
  "id": 3
}