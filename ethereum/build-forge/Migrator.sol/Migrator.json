{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fromAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_toAsset",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fromAsset",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fromDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toAsset",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "toDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001559380380620015598339810160408190526200003491620001dc565b6040518060400160405280601481526020017f546f6b656e204d6967726174696f6e20506f6f6c0000000000000000000000008152506040518060400160405280600b81526020016a04d69677261746f722d4c560ac1b81525081600390816200009f9190620002b9565b506004620000ae8282620002b9565b5050600580546001600160a01b038086166001600160a01b0319928316811790935560068054918616919092161790556040805163313ce56760e01b8152905191925063313ce5679160048083019260209291908290030181865afa1580156200011c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000142919062000385565b60ff16600781905550806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200018a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b0919062000385565b60ff1660085550620003b19050565b80516001600160a01b0381168114620001d757600080fd5b919050565b60008060408385031215620001f057600080fd5b620001fb83620001bf565b91506200020b60208401620001bf565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200023f57607f821691505b6020821081036200026057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002b457600081815260208120601f850160051c810160208610156200028f5750805b601f850160051c820191505b81811015620002b0578281556001016200029b565b5050505b505050565b81516001600160401b03811115620002d557620002d562000214565b620002ed81620002e684546200022a565b8462000266565b602080601f8311600181146200032557600084156200030c5750858301515b600019600386901b1c1916600185901b178555620002b0565b600085815260208120601f198616915b82811015620003565788860151825594840194600190910190840162000335565b5085821015620003755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200039857600080fd5b815160ff81168114620003aa57600080fd5b9392505050565b61119880620003c16000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80634cc82215116100ad57806395d89b411161007157806395d89b4114610262578063a457c2d71461026a578063a9059cbb1461027d578063dd62ed3e14610290578063f1354c08146102c957600080fd5b80634cc82215146101e95780634d92626a146101fc57806370a082311461020557806386e898431461022e57806392e404111461025957600080fd5b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a1578063379607f5146101b057806339509351146101c3578063454b0608146101d657600080fd5b806306fdde0314610126578063095ea7b3146101445780631003e2d21461016757806318160ddd1461017c575b600080fd5b61012e6102dc565b60405161013b9190610e69565b60405180910390f35b610157610152366004610eb8565b61036e565b604051901515815260200161013b565b61017a610175366004610ee2565b610385565b005b6002545b60405190815260200161013b565b61015761019c366004610efb565b6103aa565b6040516012815260200161013b565b61017a6101be366004610ee2565b61045b565b6101576101d1366004610eb8565b61048e565b61017a6101e4366004610ee2565b6104ca565b61017a6101f7366004610ee2565b610506565b61018060075481565b610180610213366004610f37565b6001600160a01b031660009081526020819052604090205490565b600554610241906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61018060085481565b61012e610527565b610157610278366004610eb8565b610536565b61015761028b366004610eb8565b6105cf565b61018061029e366004610f52565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600654610241906001600160a01b031681565b6060600380546102eb90610f85565b80601f016020809104026020016040519081016040528092919081815260200182805461031790610f85565b80156103645780601f1061033957610100808354040283529160200191610364565b820191906000526020600020905b81548152906001019060200180831161034757829003601f168201915b5050505050905090565b600061037b3384846105dc565b5060015b92915050565b60065461039d906001600160a01b0316333084610701565b6103a73382610772565b50565b60006103b7848484610851565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104415760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61044e85338584036105dc565b60019150505b9392505050565b6104653382610a1f565b6005546008546007546103a7926001600160a01b0316913391610489919086610b6a565b610bcb565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161037b9185906104c5908690610fd5565b6105dc565b6005546104e2906001600160a01b0316333084610701565b6006546007546008546103a7926001600160a01b0316913391610489919086610b6a565b6105103382610a1f565b6006546103a7906001600160a01b03163383610bcb565b6060600480546102eb90610f85565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610438565b6105c533858584036105dc565b5060019392505050565b600061037b338484610851565b6001600160a01b03831661063e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610438565b6001600160a01b03821661069f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610438565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6040516001600160a01b038085166024830152831660448201526064810182905261076c9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610bfb565b50505050565b6001600160a01b0382166107c85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610438565b80600260008282546107da9190610fd5565b90915550506001600160a01b03821660009081526020819052604081208054839290610807908490610fd5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166108b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610438565b6001600160a01b0382166109175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610438565b6001600160a01b0383166000908152602081905260409020548181101561098f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610438565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109c6908490610fd5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a1291815260200190565b60405180910390a361076c565b6001600160a01b038216610a7f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610438565b6001600160a01b03821660009081526020819052604090205481811015610af35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610438565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b22908490610fe8565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106f4565b505050565b600082841115610b9a57610b7e8385610fe8565b610b8990600a6110df565b610b9390836110eb565b9150610bc4565b82841015610bc457610bac8484610fe8565b610bb790600a6110df565b610bc1908361110d565b91505b5092915050565b6040516001600160a01b038316602482015260448101829052610b6590849063a9059cbb60e01b90606401610735565b6000610c50826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ccd9092919063ffffffff16565b805190915015610b655780806020019051810190610c6e9190611124565b610b655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610438565b6060610cdc8484600085610ce4565b949350505050565b606082471015610d455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610438565b843b610d935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610438565b600080866001600160a01b03168587604051610daf9190611146565b60006040518083038185875af1925050503d8060008114610dec576040519150601f19603f3d011682016040523d82523d6000602084013e610df1565b606091505b5091509150610e01828286610e0c565b979650505050505050565b60608315610e1b575081610454565b825115610e2b5782518084602001fd5b8160405162461bcd60e51b81526004016104389190610e69565b60005b83811015610e60578181015183820152602001610e48565b50506000910152565b6020815260008251806020840152610e88816040850160208701610e45565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610eb357600080fd5b919050565b60008060408385031215610ecb57600080fd5b610ed483610e9c565b946020939093013593505050565b600060208284031215610ef457600080fd5b5035919050565b600080600060608486031215610f1057600080fd5b610f1984610e9c565b9250610f2760208501610e9c565b9150604084013590509250925092565b600060208284031215610f4957600080fd5b61045482610e9c565b60008060408385031215610f6557600080fd5b610f6e83610e9c565b9150610f7c60208401610e9c565b90509250929050565b600181811c90821680610f9957607f821691505b602082108103610fb957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037f5761037f610fbf565b8181038181111561037f5761037f610fbf565b600181815b8085111561103657816000190482111561101c5761101c610fbf565b8085161561102957918102915b93841c9390800290611000565b509250929050565b60008261104d5750600161037f565b8161105a5750600061037f565b8160018114611070576002811461107a57611096565b600191505061037f565b60ff84111561108b5761108b610fbf565b50506001821b61037f565b5060208310610133831016604e8410600b84101617156110b9575081810a61037f565b6110c38383610ffb565b80600019048211156110d7576110d7610fbf565b029392505050565b6000610454838361103e565b60008261110857634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761037f5761037f610fbf565b60006020828403121561113657600080fd5b8151801515811461045457600080fd5b60008251611158818460208701610e45565b919091019291505056fea2646970667358221220dc1826c13887f6524a071efce4a856371f1627269801679a8e78a51cde6c060a64736f6c63430008130033",
    "sourceMap": "246:2001:32:-:0;;;394:360;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1906:113:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1906:113:108;;;1980:5;1972;:13;;;;;;:::i;:::-;-1:-1:-1;1995:7:108;:17;2005:7;1995;:17;:::i;:::-;-1:-1:-1;;579:9:32::1;:30:::0;;-1:-1:-1;;;;;579:30:32;;::::1;-1:-1:-1::0;;;;;;579:30:32;;::::1;::::0;::::1;::::0;;;619:7:::1;:26:::0;;;;::::1;::::0;;;::::1;;::::0;;670:28:::1;::::0;;-1:-1:-1;;;670:28:32;;;;579:30;;-1:-1:-1;670:26:32::1;::::0;:28:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;579:30;670:28:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;655:43;;:12;:43;;;;727:8;-1:-1:-1::0;;;;;721:24:32::1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;708:39;;:10;:39:::0;-1:-1:-1;246:2001:32;;-1:-1:-1;246:2001:32;14:177:124;93:13;;-1:-1:-1;;;;;135:31:124;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:127::-;555:10;550:3;546:20;543:1;536:31;586:4;583:1;576:15;610:4;607:1;600:15;626:380;705:1;701:12;;;;748;;;769:61;;823:4;815:6;811:17;801:27;;769:61;876:2;868:6;865:14;845:18;842:38;839:161;;922:10;917:3;913:20;910:1;903:31;957:4;954:1;947:15;985:4;982:1;975:15;839:161;;626:380;;;:::o;1137:545::-;1239:2;1234:3;1231:11;1228:448;;;1275:1;1300:5;1296:2;1289:17;1345:4;1341:2;1331:19;1415:2;1403:10;1399:19;1396:1;1392:27;1386:4;1382:38;1451:4;1439:10;1436:20;1433:47;;;-1:-1:-1;1474:4:124;1433:47;1529:2;1524:3;1520:12;1517:1;1513:20;1507:4;1503:31;1493:41;;1584:82;1602:2;1595:5;1592:13;1584:82;;;1647:17;;;1628:1;1617:13;1584:82;;;1588:3;;;1228:448;1137:545;;;:::o;1858:1352::-;1978:10;;-1:-1:-1;;;;;2000:30:124;;1997:56;;;2033:18;;:::i;:::-;2062:97;2152:6;2112:38;2144:4;2138:11;2112:38;:::i;:::-;2106:4;2062:97;:::i;:::-;2214:4;;2278:2;2267:14;;2295:1;2290:663;;;;2997:1;3014:6;3011:89;;;-1:-1:-1;3066:19:124;;;3060:26;3011:89;-1:-1:-1;;1815:1:124;1811:11;;;1807:24;1803:29;1793:40;1839:1;1835:11;;;1790:57;3113:81;;2260:944;;2290:663;1084:1;1077:14;;;1121:4;1108:18;;-1:-1:-1;;2326:20:124;;;2444:236;2458:7;2455:1;2452:14;2444:236;;;2547:19;;;2541:26;2526:42;;2639:27;;;;2607:1;2595:14;;;;2474:19;;2444:236;;;2448:3;2708:6;2699:7;2696:19;2693:201;;;2769:19;;;2763:26;-1:-1:-1;;2852:1:124;2848:14;;;2864:3;2844:24;2840:37;2836:42;2821:58;2806:74;;2693:201;-1:-1:-1;;;;;2940:1:124;2924:14;;;2920:22;2907:36;;-1:-1:-1;1858:1352:124:o;3215:273::-;3283:6;3336:2;3324:9;3315:7;3311:23;3307:32;3304:52;;;3352:1;3349;3342:12;3304:52;3384:9;3378:16;3434:4;3427:5;3423:16;3416:5;3413:27;3403:55;;3454:1;3451;3444:12;3403:55;3477:5;3215:273;-1:-1:-1;;;3215:273:124:o;:::-;246:2001:32;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c80634cc82215116100ad57806395d89b411161007157806395d89b4114610262578063a457c2d71461026a578063a9059cbb1461027d578063dd62ed3e14610290578063f1354c08146102c957600080fd5b80634cc82215146101e95780634d92626a146101fc57806370a082311461020557806386e898431461022e57806392e404111461025957600080fd5b806323b872dd116100f457806323b872dd1461018e578063313ce567146101a1578063379607f5146101b057806339509351146101c3578063454b0608146101d657600080fd5b806306fdde0314610126578063095ea7b3146101445780631003e2d21461016757806318160ddd1461017c575b600080fd5b61012e6102dc565b60405161013b9190610e69565b60405180910390f35b610157610152366004610eb8565b61036e565b604051901515815260200161013b565b61017a610175366004610ee2565b610385565b005b6002545b60405190815260200161013b565b61015761019c366004610efb565b6103aa565b6040516012815260200161013b565b61017a6101be366004610ee2565b61045b565b6101576101d1366004610eb8565b61048e565b61017a6101e4366004610ee2565b6104ca565b61017a6101f7366004610ee2565b610506565b61018060075481565b610180610213366004610f37565b6001600160a01b031660009081526020819052604090205490565b600554610241906001600160a01b031681565b6040516001600160a01b03909116815260200161013b565b61018060085481565b61012e610527565b610157610278366004610eb8565b610536565b61015761028b366004610eb8565b6105cf565b61018061029e366004610f52565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b600654610241906001600160a01b031681565b6060600380546102eb90610f85565b80601f016020809104026020016040519081016040528092919081815260200182805461031790610f85565b80156103645780601f1061033957610100808354040283529160200191610364565b820191906000526020600020905b81548152906001019060200180831161034757829003601f168201915b5050505050905090565b600061037b3384846105dc565b5060015b92915050565b60065461039d906001600160a01b0316333084610701565b6103a73382610772565b50565b60006103b7848484610851565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156104415760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61044e85338584036105dc565b60019150505b9392505050565b6104653382610a1f565b6005546008546007546103a7926001600160a01b0316913391610489919086610b6a565b610bcb565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161037b9185906104c5908690610fd5565b6105dc565b6005546104e2906001600160a01b0316333084610701565b6006546007546008546103a7926001600160a01b0316913391610489919086610b6a565b6105103382610a1f565b6006546103a7906001600160a01b03163383610bcb565b6060600480546102eb90610f85565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156105b85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610438565b6105c533858584036105dc565b5060019392505050565b600061037b338484610851565b6001600160a01b03831661063e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610438565b6001600160a01b03821661069f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610438565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6040516001600160a01b038085166024830152831660448201526064810182905261076c9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610bfb565b50505050565b6001600160a01b0382166107c85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610438565b80600260008282546107da9190610fd5565b90915550506001600160a01b03821660009081526020819052604081208054839290610807908490610fd5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0383166108b55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610438565b6001600160a01b0382166109175760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610438565b6001600160a01b0383166000908152602081905260409020548181101561098f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610438565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109c6908490610fd5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a1291815260200190565b60405180910390a361076c565b6001600160a01b038216610a7f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610438565b6001600160a01b03821660009081526020819052604090205481811015610af35760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610438565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b22908490610fe8565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106f4565b505050565b600082841115610b9a57610b7e8385610fe8565b610b8990600a6110df565b610b9390836110eb565b9150610bc4565b82841015610bc457610bac8484610fe8565b610bb790600a6110df565b610bc1908361110d565b91505b5092915050565b6040516001600160a01b038316602482015260448101829052610b6590849063a9059cbb60e01b90606401610735565b6000610c50826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ccd9092919063ffffffff16565b805190915015610b655780806020019051810190610c6e9190611124565b610b655760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610438565b6060610cdc8484600085610ce4565b949350505050565b606082471015610d455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610438565b843b610d935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610438565b600080866001600160a01b03168587604051610daf9190611146565b60006040518083038185875af1925050503d8060008114610dec576040519150601f19603f3d011682016040523d82523d6000602084013e610df1565b606091505b5091509150610e01828286610e0c565b979650505050505050565b60608315610e1b575081610454565b825115610e2b5782518084602001fd5b8160405162461bcd60e51b81526004016104389190610e69565b60005b83811015610e60578181015183820152602001610e48565b50506000910152565b6020815260008251806020840152610e88816040850160208701610e45565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610eb357600080fd5b919050565b60008060408385031215610ecb57600080fd5b610ed483610e9c565b946020939093013593505050565b600060208284031215610ef457600080fd5b5035919050565b600080600060608486031215610f1057600080fd5b610f1984610e9c565b9250610f2760208501610e9c565b9150604084013590509250925092565b600060208284031215610f4957600080fd5b61045482610e9c565b60008060408385031215610f6557600080fd5b610f6e83610e9c565b9150610f7c60208401610e9c565b90509250929050565b600181811c90821680610f9957607f821691505b602082108103610fb957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037f5761037f610fbf565b8181038181111561037f5761037f610fbf565b600181815b8085111561103657816000190482111561101c5761101c610fbf565b8085161561102957918102915b93841c9390800290611000565b509250929050565b60008261104d5750600161037f565b8161105a5750600061037f565b8160018114611070576002811461107a57611096565b600191505061037f565b60ff84111561108b5761108b610fbf565b50506001821b61037f565b5060208310610133831016604e8410600b84101617156110b9575081810a61037f565b6110c38383610ffb565b80600019048211156110d7576110d7610fbf565b029392505050565b6000610454838361103e565b60008261110857634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761037f5761037f610fbf565b60006020828403121561113657600080fd5b8151801515811461045457600080fd5b60008251611158818460208701610e45565b919091019291505056fea2646970667358221220dc1826c13887f6524a071efce4a856371f1627269801679a8e78a51cde6c060a64736f6c63430008130033",
    "sourceMap": "246:2001:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4181:166;;;;;;:::i;:::-;;:::i;:::-;;;1272:14:124;;1265:22;1247:41;;1235:2;1220:18;4181:166:108;1107:187:124;798:213:32;;;;;;:::i;:::-;;:::i;:::-;;3172:106:108;3259:12;;3172:106;;;1630:25:124;;;1618:2;1603:18;3172:106:108;1484:177:124;4814:478:108;;;;;;:::i;:::-;;:::i;3021:91::-;;;3103:2;2141:36:124;;2129:2;2114:18;3021:91:108;1999:184:124;1301:243:32;;;;;;:::i;:::-;;:::i;5687:212:108:-;;;;;;:::i;:::-;;:::i;1590:291:32:-;;;;;;:::i;:::-;;:::i;1057:198::-;;;;;;:::i;:::-;;:::i;335:24::-;;;;;;3336:125:108;;;;;;:::i;:::-;-1:-1:-1;;;;;3436:18:108;3410:7;3436:18;;;;;;;;;;;;3336:125;279:23:32;;;;;-1:-1:-1;;;;;279:23:32;;;;;;-1:-1:-1;;;;;2559:32:124;;;2541:51;;2529:2;2514:18;279:23:32;2379:219:124;365:22:32;;;;;;2295:102:108;;;:::i;6386:405::-;;;;;;:::i;:::-;;:::i;3664:172::-;;;;;;:::i;:::-;;:::i;3894:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4009:18:108;;;3983:7;4009:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3894:149;308:21:32;;;;;-1:-1:-1;;;;;308:21:32;;;2084:98:108;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;666:10:116;4303:7:108;4312:6;4280:8;:39::i;:::-;-1:-1:-1;4336:4:108;4181:166;;;;;:::o;798:213:32:-;898:7;;871:71;;-1:-1:-1;;;;;898:7:32;907:10;927:4;934:7;871:26;:71::i;:::-;978:26;984:10;996:7;978:5;:26::i;:::-;798:213;:::o;4814:478:108:-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;-1:-1:-1;;;;;5040:19:108;;5013:24;5040:19;;;:11;:19;;;;;;;;666:10:116;5040:33:108;;;;;;;;5091:26;;;;5083:79;;;;-1:-1:-1;;;5083:79:108;;3455:2:124;5083:79:108;;;3437:21:124;3494:2;3474:18;;;3467:30;3533:34;3513:18;;;3506:62;-1:-1:-1;;;3584:18:124;;;3577:38;3632:19;;5083:79:108;;;;;;;;;5196:57;5205:6;666:10:116;5246:6:108;5227:16;:25;5196:8;:57::i;:::-;5281:4;5274:11;;;4814:478;;;;;;:::o;1301:243:32:-;1375:26;1381:10;1393:7;1375:5;:26::i;:::-;1464:9;;1502:10;;1514:12;;1441:96;;-1:-1:-1;;;;;1464:9:32;;1475:10;;1487:49;;1502:10;1528:7;1487:14;:49::i;:::-;1441:22;:96::i;5687:212:108:-;666:10:116;5775:4:108;5823:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5823:34:108;;;;;;;;;;5775:4;;5791:80;;5814:7;;5823:47;;5860:10;;5823:47;:::i;:::-;5791:8;:80::i;1590:291:32:-;1696:9;;1669:73;;-1:-1:-1;;;;;1696:9:32;1707:10;1727:4;1734:7;1669:26;:73::i;:::-;1803:7;;1839:12;;1853:10;;1780:94;;-1:-1:-1;;;;;1803:7:32;;1812:10;;1824:49;;1839:12;1865:7;1824:14;:49::i;1057:198::-;1132:26;1138:10;1150:7;1132:5;:26::i;:::-;1219:7;;1196:52;;-1:-1:-1;;;;;1219:7:32;1228:10;1240:7;1196:22;:52::i;2295:102:108:-;2351:13;2383:7;2376:14;;;;;:::i;6386:405::-;666:10:116;6479:4:108;6522:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6522:34:108;;;;;;;;;;6574:35;;;;6566:85;;;;-1:-1:-1;;;6566:85:108;;4126:2:124;6566:85:108;;;4108:21:124;4165:2;4145:18;;;4138:30;4204:34;4184:18;;;4177:62;-1:-1:-1;;;4255:18:124;;;4248:35;4300:19;;6566:85:108;3924:401:124;6566:85:108;6685:67;666:10:116;6708:7:108;6736:15;6717:16;:34;6685:8;:67::i;:::-;-1:-1:-1;6780:4:108;;6386:405;-1:-1:-1;;;6386:405:108:o;3664:172::-;3750:4;3766:42;666:10:116;3790:9:108;3801:6;3766:9;:42::i;9962:370::-;-1:-1:-1;;;;;10093:19:108;;10085:68;;;;-1:-1:-1;;;10085:68:108;;4532:2:124;10085:68:108;;;4514:21:124;4571:2;4551:18;;;4544:30;4610:34;4590:18;;;4583:62;-1:-1:-1;;;4661:18:124;;;4654:34;4705:19;;10085:68:108;4330:400:124;10085:68:108;-1:-1:-1;;;;;10171:21:108;;10163:68;;;;-1:-1:-1;;;10163:68:108;;4937:2:124;10163:68:108;;;4919:21:124;4976:2;4956:18;;;4949:30;5015:34;4995:18;;;4988:62;-1:-1:-1;;;5066:18:124;;;5059:32;5108:19;;10163:68:108;4735:398:124;10163:68:108;-1:-1:-1;;;;;10242:18:108;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10293:32;;1630:25:124;;;10293:32:108;;1603:18:124;10293:32:108;;;;;;;;9962:370;;;:::o;845:241:111:-;1010:68;;-1:-1:-1;;;;;5396:15:124;;;1010:68:111;;;5378:34:124;5448:15;;5428:18;;;5421:43;5480:18;;;5473:34;;;983:96:111;;1003:5;;-1:-1:-1;;;1033:27:111;5313:18:124;;1010:68:111;;;;-1:-1:-1;;1010:68:111;;;;;;;;;;;;;;-1:-1:-1;;;;;1010:68:111;-1:-1:-1;;;;;;1010:68:111;;;;;;;;;;983:19;:96::i;:::-;845:241;;;;:::o;8254:389:108:-;-1:-1:-1;;;;;8337:21:108;;8329:65;;;;-1:-1:-1;;;8329:65:108;;5720:2:124;8329:65:108;;;5702:21:124;5759:2;5739:18;;;5732:30;5798:33;5778:18;;;5771:61;5849:18;;8329:65:108;5518:355:124;8329:65:108;8481:6;8465:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8497:18:108;;:9;:18;;;;;;;;;;:28;;8519:6;;8497:9;:28;;8519:6;;8497:28;:::i;:::-;;;;-1:-1:-1;;8540:37:108;;1630:25:124;;;-1:-1:-1;;;;;8540:37:108;;;8557:1;;8540:37;;1618:2:124;1603:18;8540:37:108;;;;;;;8254:389;;:::o;7265:713::-;-1:-1:-1;;;;;7400:20:108;;7392:70;;;;-1:-1:-1;;;7392:70:108;;6080:2:124;7392:70:108;;;6062:21:124;6119:2;6099:18;;;6092:30;6158:34;6138:18;;;6131:62;-1:-1:-1;;;6209:18:124;;;6202:35;6254:19;;7392:70:108;5878:401:124;7392:70:108;-1:-1:-1;;;;;7480:23:108;;7472:71;;;;-1:-1:-1;;;7472:71:108;;6486:2:124;7472:71:108;;;6468:21:124;6525:2;6505:18;;;6498:30;6564:34;6544:18;;;6537:62;-1:-1:-1;;;6615:18:124;;;6608:33;6658:19;;7472:71:108;6284:399:124;7472:71:108;-1:-1:-1;;;;;7636:17:108;;7612:21;7636:17;;;;;;;;;;;7671:23;;;;7663:74;;;;-1:-1:-1;;;7663:74:108;;6890:2:124;7663:74:108;;;6872:21:124;6929:2;6909:18;;;6902:30;6968:34;6948:18;;;6941:62;-1:-1:-1;;;7019:18:124;;;7012:36;7065:19;;7663:74:108;6688:402:124;7663:74:108;-1:-1:-1;;;;;7771:17:108;;;:9;:17;;;;;;;;;;;7791:22;;;7771:42;;7833:20;;;;;;;;:30;;7807:6;;7771:9;7833:30;;7807:6;;7833:30;:::i;:::-;;;;;;;;7896:9;-1:-1:-1;;;;;7879:35:108;7888:6;-1:-1:-1;;;;;7879:35:108;;7907:6;7879:35;;;;1630:25:124;;1618:2;1603:18;;1484:177;7879:35:108;;;;;;;;7925:46;8963:576;;-1:-1:-1;;;;;9046:21:108;;9038:67;;;;-1:-1:-1;;;9038:67:108;;7297:2:124;9038:67:108;;;7279:21:124;7336:2;7316:18;;;7309:30;7375:34;7355:18;;;7348:62;-1:-1:-1;;;7426:18:124;;;7419:31;7467:19;;9038:67:108;7095:397:124;9038:67:108;-1:-1:-1;;;;;9201:18:108;;9176:22;9201:18;;;;;;;;;;;9237:24;;;;9229:71;;;;-1:-1:-1;;;9229:71:108;;7699:2:124;9229:71:108;;;7681:21:124;7738:2;7718:18;;;7711:30;7777:34;7757:18;;;7750:62;-1:-1:-1;;;7828:18:124;;;7821:32;7870:19;;9229:71:108;7497:398:124;9229:71:108;-1:-1:-1;;;;;9334:18:108;;:9;:18;;;;;;;;;;9355:23;;;9334:44;;9398:12;:22;;9372:6;;9334:9;9398:22;;9372:6;;9398:22;:::i;:::-;;;;-1:-1:-1;;9436:37:108;;1630:25:124;;;9462:1:108;;-1:-1:-1;;;;;9436:37:108;;;;;1618:2:124;1603:18;9436:37:108;1484:177:124;9484:48:108;9028:511;8963:576;;:::o;1887:358:32:-;1986:4;2022:11;2006:13;:27;2002:213;;;2066:27;2082:11;2066:13;:27;:::i;:::-;2059:35;;:2;:35;:::i;:::-;2048:46;;;;:::i;:::-;;;2002:213;;;2131:11;2115:13;:27;2111:104;;;2176:27;2190:13;2176:11;:27;:::i;:::-;2169:35;;:2;:35;:::i;:::-;2158:46;;;;:::i;:::-;;;2111:104;-1:-1:-1;2231:7:32;1887:358;-1:-1:-1;;1887:358:32:o;634:205:111:-;773:58;;-1:-1:-1;;;;;9994:32:124;;773:58:111;;;9976:51:124;10043:18;;;10036:34;;;746:86:111;;766:5;;-1:-1:-1;;;796:23:111;9949:18:124;;773:58:111;9802:274:124;3140:706:111;3559:23;3585:69;3613:4;3585:69;;;;;;;;;;;;;;;;;3593:5;-1:-1:-1;;;;;3585:27:111;;;:69;;;;;:::i;:::-;3668:17;;3559:95;;-1:-1:-1;3668:21:111;3664:176;;3763:10;3752:30;;;;;;;;;;;;:::i;:::-;3744:85;;;;-1:-1:-1;;;3744:85:111;;10565:2:124;3744:85:111;;;10547:21:124;10604:2;10584:18;;;10577:30;10643:34;10623:18;;;10616:62;-1:-1:-1;;;10694:18:124;;;10687:40;10744:19;;3744:85:111;10363:406:124;3461:223:115;3594:12;3625:52;3647:6;3655:4;3661:1;3664:12;3625:21;:52::i;:::-;3618:59;3461:223;-1:-1:-1;;;;3461:223:115:o;4548:499::-;4713:12;4770:5;4745:21;:30;;4737:81;;;;-1:-1:-1;;;4737:81:115;;10976:2:124;4737:81:115;;;10958:21:124;11015:2;10995:18;;;10988:30;11054:34;11034:18;;;11027:62;-1:-1:-1;;;11105:18:124;;;11098:36;11151:19;;4737:81:115;10774:402:124;4737:81:115;1034:20;;4828:60;;;;-1:-1:-1;;;4828:60:115;;11383:2:124;4828:60:115;;;11365:21:124;11422:2;11402:18;;;11395:30;11461:31;11441:18;;;11434:59;11510:18;;4828:60:115;11181:353:124;4828:60:115;4900:12;4914:23;4941:6;-1:-1:-1;;;;;4941:11:115;4960:5;4967:4;4941:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4899:73;;;;4989:51;5006:7;5015:10;5027:12;4989:16;:51::i;:::-;4982:58;4548:499;-1:-1:-1;;;;;;;4548:499:115:o;7161:692::-;7307:12;7335:7;7331:516;;;-1:-1:-1;7365:10:115;7358:17;;7331:516;7476:17;;:21;7472:365;;7670:10;7664:17;7730:15;7717:10;7713:2;7709:19;7702:44;7472:365;7809:12;7802:20;;-1:-1:-1;;;7802:20:115;;;;;;;;:::i;14:250:124:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:124;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:124;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:124:o;670:173::-;738:20;;-1:-1:-1;;;;;787:31:124;;777:42;;767:70;;833:1;830;823:12;767:70;670:173;;;:::o;848:254::-;916:6;924;977:2;965:9;956:7;952:23;948:32;945:52;;;993:1;990;983:12;945:52;1016:29;1035:9;1016:29;:::i;:::-;1006:39;1092:2;1077:18;;;;1064:32;;-1:-1:-1;;;848:254:124:o;1299:180::-;1358:6;1411:2;1399:9;1390:7;1386:23;1382:32;1379:52;;;1427:1;1424;1417:12;1379:52;-1:-1:-1;1450:23:124;;1299:180;-1:-1:-1;1299:180:124:o;1666:328::-;1743:6;1751;1759;1812:2;1800:9;1791:7;1787:23;1783:32;1780:52;;;1828:1;1825;1818:12;1780:52;1851:29;1870:9;1851:29;:::i;:::-;1841:39;;1899:38;1933:2;1922:9;1918:18;1899:38;:::i;:::-;1889:48;;1984:2;1973:9;1969:18;1956:32;1946:42;;1666:328;;;;;:::o;2188:186::-;2247:6;2300:2;2288:9;2279:7;2275:23;2271:32;2268:52;;;2316:1;2313;2306:12;2268:52;2339:29;2358:9;2339:29;:::i;2603:260::-;2671:6;2679;2732:2;2720:9;2711:7;2707:23;2703:32;2700:52;;;2748:1;2745;2738:12;2700:52;2771:29;2790:9;2771:29;:::i;:::-;2761:39;;2819:38;2853:2;2842:9;2838:18;2819:38;:::i;:::-;2809:48;;2603:260;;;;;:::o;2868:380::-;2947:1;2943:12;;;;2990;;;3011:61;;3065:4;3057:6;3053:17;3043:27;;3011:61;3118:2;3110:6;3107:14;3087:18;3084:38;3081:161;;3164:10;3159:3;3155:20;3152:1;3145:31;3199:4;3196:1;3189:15;3227:4;3224:1;3217:15;3081:161;;2868:380;;;:::o;3662:127::-;3723:10;3718:3;3714:20;3711:1;3704:31;3754:4;3751:1;3744:15;3778:4;3775:1;3768:15;3794:125;3859:9;;;3880:10;;;3877:36;;;3893:18;;:::i;7900:128::-;7967:9;;;7988:11;;;7985:37;;;8002:18;;:::i;8033:422::-;8122:1;8165:5;8122:1;8179:270;8200:7;8190:8;8187:21;8179:270;;;8259:4;8255:1;8251:6;8247:17;8241:4;8238:27;8235:53;;;8268:18;;:::i;:::-;8318:7;8308:8;8304:22;8301:55;;;8338:16;;;;8301:55;8417:22;;;;8377:15;;;;8179:270;;;8183:3;8033:422;;;;;:::o;8460:806::-;8509:5;8539:8;8529:80;;-1:-1:-1;8580:1:124;8594:5;;8529:80;8628:4;8618:76;;-1:-1:-1;8665:1:124;8679:5;;8618:76;8710:4;8728:1;8723:59;;;;8796:1;8791:130;;;;8703:218;;8723:59;8753:1;8744:10;;8767:5;;;8791:130;8828:3;8818:8;8815:17;8812:43;;;8835:18;;:::i;:::-;-1:-1:-1;;8891:1:124;8877:16;;8906:5;;8703:218;;9005:2;8995:8;8992:16;8986:3;8980:4;8977:13;8973:36;8967:2;8957:8;8954:16;8949:2;8943:4;8940:12;8936:35;8933:77;8930:159;;;-1:-1:-1;9042:19:124;;;9074:5;;8930:159;9121:34;9146:8;9140:4;9121:34;:::i;:::-;9191:6;9187:1;9183:6;9179:19;9170:7;9167:32;9164:58;;;9202:18;;:::i;:::-;9240:20;;8460:806;-1:-1:-1;;;8460:806:124:o;9271:131::-;9331:5;9360:36;9387:8;9381:4;9360:36;:::i;9407:217::-;9447:1;9473;9463:132;;9517:10;9512:3;9508:20;9505:1;9498:31;9552:4;9549:1;9542:15;9580:4;9577:1;9570:15;9463:132;-1:-1:-1;9609:9:124;;9407:217::o;9629:168::-;9702:9;;;9733;;9750:15;;;9744:22;;9730:37;9720:71;;9771:18;;:::i;10081:277::-;10148:6;10201:2;10189:9;10180:7;10176:23;10172:32;10169:52;;;10217:1;10214;10207:12;10169:52;10249:9;10243:16;10302:5;10295:13;10288:21;10281:5;10278:32;10268:60;;10324:1;10321;10314:12;11539:287;11668:3;11706:6;11700:13;11722:66;11781:6;11776:3;11769:4;11761:6;11757:17;11722:66;:::i;:::-;11804:16;;;;;11539:287;-1:-1:-1;;11539:287:124:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "add(uint256)": "1003e2d2",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "claim(uint256)": "379607f5",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "fromAsset()": "86e89843",
    "fromDecimals()": "4d92626a",
    "increaseAllowance(address,uint256)": "39509351",
    "migrate(uint256)": "454b0608",
    "name()": "06fdde03",
    "remove(uint256)": "4cc82215",
    "symbol()": "95d89b41",
    "toAsset()": "f1354c08",
    "toDecimals()": "92e40411",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fromAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_toAsset\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fromDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"toDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridge/utils/Migrator.sol\":\"Migrator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@solidity-parser/=node_modules/@solidity-parser/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":truffle/=node_modules/truffle/\"]},\"sources\":{\"contracts/bridge/utils/Migrator.sol\":{\"keccak256\":\"0x391404bfdbc16cd42efeb5003811185a59821a7fcad1c36ab5f218e47c29ca07\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://253ba0b801eee08c56594e1c3fe7588699a231384c82ae1d4ff6870c8ee18ab6\",\"dweb:/ipfs/QmWKt9d5SkkDE1vxzBBffDbi41372dYdswXiwsQEsaT5sg\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_fromAsset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_toAsset",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "add"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fromAsset",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fromDecimals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "migrate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "toAsset",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "toDecimals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@solidity-parser/=node_modules/@solidity-parser/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":truffle/=node_modules/truffle/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/bridge/utils/Migrator.sol": "Migrator"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/bridge/utils/Migrator.sol": {
        "keccak256": "0x391404bfdbc16cd42efeb5003811185a59821a7fcad1c36ab5f218e47c29ca07",
        "urls": [
          "bzz-raw://253ba0b801eee08c56594e1c3fe7588699a231384c82ae1d4ff6870c8ee18ab6",
          "dweb:/ipfs/QmWKt9d5SkkDE1vxzBBffDbi41372dYdswXiwsQEsaT5sg"
        ],
        "license": "Apache 2"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072",
        "urls": [
          "bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45",
          "dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a",
        "urls": [
          "bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14",
          "dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2",
        "urls": [
          "bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013",
          "dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d",
        "urls": [
          "bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd",
          "dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a",
        "urls": [
          "bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e",
          "dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f",
        "urls": [
          "bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c",
          "dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/bridge/utils/Migrator.sol",
    "id": 9057,
    "exportedSymbols": {
      "Address": [
        69288
      ],
      "Context": [
        69310
      ],
      "ERC20": [
        68503
      ],
      "IERC20": [
        68581
      ],
      "IERC20Metadata": [
        68606
      ],
      "Migrator": [
        9056
      ],
      "SafeERC20": [
        68830
      ]
    },
    "nodeType": "SourceUnit",
    "src": "64:2184:32",
    "nodes": [
      {
        "id": 8855,
        "nodeType": "PragmaDirective",
        "src": "64:23:32",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 8856,
        "nodeType": "PragmaDirective",
        "src": "88:33:32",
        "nodes": [],
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ]
      },
      {
        "id": 8857,
        "nodeType": "ImportDirective",
        "src": "123:55:32",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9057,
        "sourceUnit": 68504,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 8858,
        "nodeType": "ImportDirective",
        "src": "179:65:32",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9057,
        "sourceUnit": 68831,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 9056,
        "nodeType": "ContractDefinition",
        "src": "246:2001:32",
        "nodes": [
          {
            "id": 8863,
            "nodeType": "VariableDeclaration",
            "src": "279:23:32",
            "nodes": [],
            "constant": false,
            "functionSelector": "86e89843",
            "mutability": "mutable",
            "name": "fromAsset",
            "nameLocation": "293:9:32",
            "scope": 9056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$68581",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 8862,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8861,
                "name": "IERC20",
                "nameLocations": [
                  "279:6:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 68581,
                "src": "279:6:32"
              },
              "referencedDeclaration": 68581,
              "src": "279:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$68581",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8866,
            "nodeType": "VariableDeclaration",
            "src": "308:21:32",
            "nodes": [],
            "constant": false,
            "functionSelector": "f1354c08",
            "mutability": "mutable",
            "name": "toAsset",
            "nameLocation": "322:7:32",
            "scope": 9056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$68581",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 8865,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8864,
                "name": "IERC20",
                "nameLocations": [
                  "308:6:32"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 68581,
                "src": "308:6:32"
              },
              "referencedDeclaration": 68581,
              "src": "308:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$68581",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8868,
            "nodeType": "VariableDeclaration",
            "src": "335:24:32",
            "nodes": [],
            "constant": false,
            "functionSelector": "4d92626a",
            "mutability": "mutable",
            "name": "fromDecimals",
            "nameLocation": "347:12:32",
            "scope": 9056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8867,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "335:4:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8870,
            "nodeType": "VariableDeclaration",
            "src": "365:22:32",
            "nodes": [],
            "constant": false,
            "functionSelector": "92e40411",
            "mutability": "mutable",
            "name": "toDecimals",
            "nameLocation": "377:10:32",
            "scope": 9056,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8869,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "365:4:32",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 8910,
            "nodeType": "FunctionDefinition",
            "src": "394:360:32",
            "nodes": [],
            "body": {
              "id": 8909,
              "nodeType": "Block",
              "src": "569:185:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 8885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8881,
                      "name": "fromAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8863,
                      "src": "579:9:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$68581",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8883,
                          "name": "_fromAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8872,
                          "src": "598:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8882,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68581,
                        "src": "591:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$68581_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 8884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "591:18:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$68581",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "579:30:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$68581",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 8886,
                  "nodeType": "ExpressionStatement",
                  "src": "579:30:32"
                },
                {
                  "expression": {
                    "id": 8891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8887,
                      "name": "toAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8866,
                      "src": "619:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$68581",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8889,
                          "name": "_toAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8874,
                          "src": "636:8:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8888,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68581,
                        "src": "629:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$68581_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 8890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "629:16:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$68581",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "619:26:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$68581",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 8892,
                  "nodeType": "ExpressionStatement",
                  "src": "619:26:32"
                },
                {
                  "expression": {
                    "id": 8899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8893,
                      "name": "fromDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8868,
                      "src": "655:12:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8895,
                              "name": "_fromAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8872,
                              "src": "676:10:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8894,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68503,
                            "src": "670:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$68503_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 8896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "670:17:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$68503",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 8897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "688:8:32",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68032,
                        "src": "670:26:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 8898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "670:28:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "655:43:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8900,
                  "nodeType": "ExpressionStatement",
                  "src": "655:43:32"
                },
                {
                  "expression": {
                    "id": 8907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8901,
                      "name": "toDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8870,
                      "src": "708:10:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8903,
                              "name": "_toAsset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8874,
                              "src": "727:8:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8902,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68503,
                            "src": "721:5:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$68503_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 8904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "721:15:32",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$68503",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 8905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "737:8:32",
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68032,
                        "src": "721:24:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 8906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "721:26:32",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "708:39:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8908,
                  "nodeType": "ExpressionStatement",
                  "src": "708:39:32"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "546f6b656e204d6967726174696f6e20506f6f6c",
                    "id": 8877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "530:22:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b7581d2db82d686fb6640cb1bc1a42697c4e8af03ce403e1ff83bc6764947338",
                      "typeString": "literal_string \"Token Migration Pool\""
                    },
                    "value": "Token Migration Pool"
                  },
                  {
                    "hexValue": "4d69677261746f722d4c50",
                    "id": 8878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "554:13:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7d22ab9410c85ca9187d0c61d998cc712aa7d733ffd448fbf289492037e66a5e",
                      "typeString": "literal_string \"Migrator-LP\""
                    },
                    "value": "Migrator-LP"
                  }
                ],
                "id": 8879,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8876,
                  "name": "ERC20",
                  "nameLocations": [
                    "524:5:32"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68503,
                  "src": "524:5:32"
                },
                "nodeType": "ModifierInvocation",
                "src": "524:44:32"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 8875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8872,
                  "mutability": "mutable",
                  "name": "_fromAsset",
                  "nameLocation": "424:10:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 8910,
                  "src": "416:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "416:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8874,
                  "mutability": "mutable",
                  "name": "_toAsset",
                  "nameLocation": "452:8:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 8910,
                  "src": "444:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "406:60:32"
            },
            "returnParameters": {
              "id": 8880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "569:0:32"
            },
            "scope": 9056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 8935,
            "nodeType": "FunctionDefinition",
            "src": "798:213:32",
            "nodes": [],
            "body": {
              "id": 8934,
              "nodeType": "Block",
              "src": "834:177:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8918,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8866,
                        "src": "898:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$68581",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 8919,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "907:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "911:6:32",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "907:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8923,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "927:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Migrator_$9056",
                              "typeString": "contract Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Migrator_$9056",
                              "typeString": "contract Migrator"
                            }
                          ],
                          "id": 8922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "919:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8921,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "919:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "919:13:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8925,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8912,
                        "src": "934:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$68581",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8915,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68830,
                        "src": "871:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$68830_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 8917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "881:16:32",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68663,
                      "src": "871:26:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68581_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 8926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "871:71:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8927,
                  "nodeType": "ExpressionStatement",
                  "src": "871:71:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8929,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "984:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "988:6:32",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "984:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8931,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8912,
                        "src": "996:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8928,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68363,
                      "src": "978:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:26:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8933,
                  "nodeType": "ExpressionStatement",
                  "src": "978:26:32"
                }
              ]
            },
            "functionSelector": "1003e2d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "807:3:32",
            "parameters": {
              "id": 8913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8912,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "816:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 8935,
                  "src": "811:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8911,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:14:32"
            },
            "returnParameters": {
              "id": 8914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "834:0:32"
            },
            "scope": 9056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8956,
            "nodeType": "FunctionDefinition",
            "src": "1057:198:32",
            "nodes": [],
            "body": {
              "id": 8955,
              "nodeType": "Block",
              "src": "1096:159:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8941,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1138:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1142:6:32",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1138:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8943,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8937,
                        "src": "1150:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8940,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68435,
                      "src": "1132:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:26:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8945,
                  "nodeType": "ExpressionStatement",
                  "src": "1132:26:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8949,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8866,
                        "src": "1219:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$68581",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 8950,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1228:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1232:6:32",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1228:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8952,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8937,
                        "src": "1240:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$68581",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8946,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68830,
                        "src": "1196:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$68830_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 8948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1206:12:32",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68637,
                      "src": "1196:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68581_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 8953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1196:52:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8954,
                  "nodeType": "ExpressionStatement",
                  "src": "1196:52:32"
                }
              ]
            },
            "functionSelector": "4cc82215",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "1066:6:32",
            "parameters": {
              "id": 8938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8937,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1078:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 8956,
                  "src": "1073:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8936,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1072:14:32"
            },
            "returnParameters": {
              "id": 8939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1096:0:32"
            },
            "scope": 9056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 8981,
            "nodeType": "FunctionDefinition",
            "src": "1301:243:32",
            "nodes": [],
            "body": {
              "id": 8980,
              "nodeType": "Block",
              "src": "1339:205:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8962,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1381:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1385:6:32",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1381:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8964,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8958,
                        "src": "1393:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8961,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68435,
                      "src": "1375:5:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:26:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8966,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:26:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8970,
                        "name": "fromAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8863,
                        "src": "1464:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$68581",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 8971,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1475:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1479:6:32",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1475:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8974,
                            "name": "toDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8870,
                            "src": "1502:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 8975,
                            "name": "fromDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8868,
                            "src": "1514:12:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 8976,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8958,
                            "src": "1528:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 8973,
                          "name": "adjustDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9055,
                          "src": "1487:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 8977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1487:49:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$68581",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8967,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68830,
                        "src": "1441:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$68830_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 8969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1451:12:32",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68637,
                      "src": "1441:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68581_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 8978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:96:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8979,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:96:32"
                }
              ]
            },
            "functionSelector": "379607f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1310:5:32",
            "parameters": {
              "id": 8959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8958,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1321:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 8981,
                  "src": "1316:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8957,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1316:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1315:14:32"
            },
            "returnParameters": {
              "id": 8960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1339:0:32"
            },
            "scope": 9056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 9013,
            "nodeType": "FunctionDefinition",
            "src": "1590:291:32",
            "nodes": [],
            "body": {
              "id": 9012,
              "nodeType": "Block",
              "src": "1630:251:32",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8989,
                        "name": "fromAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8863,
                        "src": "1696:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$68581",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 8990,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1707:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 8991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1711:6:32",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1707:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 8994,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1727:4:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Migrator_$9056",
                              "typeString": "contract Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Migrator_$9056",
                              "typeString": "contract Migrator"
                            }
                          ],
                          "id": 8993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1719:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 8992,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1719:7:32",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 8995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1719:13:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8996,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8983,
                        "src": "1734:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$68581",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8986,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68830,
                        "src": "1669:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$68830_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 8988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1679:16:32",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68663,
                      "src": "1669:26:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68581_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 8997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1669:73:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8998,
                  "nodeType": "ExpressionStatement",
                  "src": "1669:73:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9002,
                        "name": "toAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8866,
                        "src": "1803:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$68581",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 9003,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1812:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1816:6:32",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1812:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 9006,
                            "name": "fromDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8868,
                            "src": "1839:12:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 9007,
                            "name": "toDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8870,
                            "src": "1853:10:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 9008,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8983,
                            "src": "1865:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9005,
                          "name": "adjustDecimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9055,
                          "src": "1824:14:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 9009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1824:49:32",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$68581",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 8999,
                        "name": "SafeERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68830,
                        "src": "1780:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20_$68830_$",
                          "typeString": "type(library SafeERC20)"
                        }
                      },
                      "id": 9001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1790:12:32",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68637,
                      "src": "1780:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$68581_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 9010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1780:94:32",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9011,
                  "nodeType": "ExpressionStatement",
                  "src": "1780:94:32"
                }
              ]
            },
            "functionSelector": "454b0608",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nameLocation": "1599:7:32",
            "parameters": {
              "id": 8984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8983,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1612:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 9013,
                  "src": "1607:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8982,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1606:14:32"
            },
            "returnParameters": {
              "id": 8985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1630:0:32"
            },
            "scope": 9056,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 9055,
            "nodeType": "FunctionDefinition",
            "src": "1887:358:32",
            "nodes": [],
            "body": {
              "id": 9054,
              "nodeType": "Block",
              "src": "1992:253:32",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9024,
                      "name": "_fromDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9015,
                      "src": "2006:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 9025,
                      "name": "_toDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9017,
                      "src": "2022:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2006:27:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 9037,
                        "name": "_fromDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9015,
                        "src": "2115:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 9038,
                        "name": "_toDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9017,
                        "src": "2131:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2115:27:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 9050,
                    "nodeType": "IfStatement",
                    "src": "2111:104:32",
                    "trueBody": {
                      "id": 9049,
                      "nodeType": "Block",
                      "src": "2144:71:32",
                      "statements": [
                        {
                          "expression": {
                            "id": 9047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 9040,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9019,
                              "src": "2158:7:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "*=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 9041,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2169:2:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 9044,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 9042,
                                      "name": "_toDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9017,
                                      "src": "2176:11:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 9043,
                                      "name": "_fromDecimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9015,
                                      "src": "2190:13:32",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2176:27:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 9045,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2175:29:32",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2169:35:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2158:46:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 9048,
                          "nodeType": "ExpressionStatement",
                          "src": "2158:46:32"
                        }
                      ]
                    }
                  },
                  "id": 9051,
                  "nodeType": "IfStatement",
                  "src": "2002:213:32",
                  "trueBody": {
                    "id": 9036,
                    "nodeType": "Block",
                    "src": "2034:71:32",
                    "statements": [
                      {
                        "expression": {
                          "id": 9034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 9027,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9019,
                            "src": "2048:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 9028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2059:2:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 9031,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 9029,
                                    "name": "_fromDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9015,
                                    "src": "2066:13:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 9030,
                                    "name": "_toDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9017,
                                    "src": "2082:11:32",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2066:27:32",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 9032,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2065:29:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2059:35:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2048:46:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9035,
                        "nodeType": "ExpressionStatement",
                        "src": "2048:46:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 9052,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9019,
                    "src": "2231:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9023,
                  "id": 9053,
                  "nodeType": "Return",
                  "src": "2224:14:32"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "adjustDecimals",
            "nameLocation": "1896:14:32",
            "parameters": {
              "id": 9020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9015,
                  "mutability": "mutable",
                  "name": "_fromDecimals",
                  "nameLocation": "1916:13:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 9055,
                  "src": "1911:18:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9014,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1911:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9017,
                  "mutability": "mutable",
                  "name": "_toDecimals",
                  "nameLocation": "1936:11:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 9055,
                  "src": "1931:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9016,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1931:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9019,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1954:7:32",
                  "nodeType": "VariableDeclaration",
                  "scope": 9055,
                  "src": "1949:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9018,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1910:52:32"
            },
            "returnParameters": {
              "id": 9023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9055,
                  "src": "1986:4:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9021,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:4:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:6:32"
            },
            "scope": 9056,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8859,
              "name": "ERC20",
              "nameLocations": [
                "267:5:32"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68503,
              "src": "267:5:32"
            },
            "id": 8860,
            "nodeType": "InheritanceSpecifier",
            "src": "267:5:32"
          }
        ],
        "canonicalName": "Migrator",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          9056,
          68503,
          68606,
          68581,
          69310
        ],
        "name": "Migrator",
        "nameLocation": "255:8:32",
        "scope": 9057,
        "usedErrors": []
      }
    ],
    "license": "Apache 2"
  },
  "id": 32
}